; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8]
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2d3d4d5de6de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %9 = and i32 %8, 31, !dbg !10
  %10 = lshr i32 %8, 5, !dbg !10
  %11 = and i32 %10, 7, !dbg !10
  %urem = shl i32 %8, 3, !dbg !10
  %12 = and i32 %urem, 2040, !dbg !10
  %13 = or i32 %12, 1, !dbg !10
  %14 = or i32 %12, 2, !dbg !10
  %15 = or i32 %12, 3, !dbg !10
  %16 = or i32 %12, 4, !dbg !10
  %17 = or i32 %12, 5, !dbg !10
  %18 = or i32 %12, 6, !dbg !10
  %19 = or i32 %12, 7, !dbg !10
  %20 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #6, !dbg !11
  %21 = srem i32 %20, 2048, !dbg !12
  %22 = sext i32 %20 to i64, !dbg !13
  %23 = getelementptr float, ptr addrspace(1) %2, i64 %22, !dbg !13
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #6, !dbg !14
  %25 = bitcast i32 %24 to float, !dbg !14
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #6, !dbg !14
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #6, !dbg !14
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #6, !dbg !14
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #6, !dbg !14
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #6, !dbg !14
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #6, !dbg !14
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #6, !dbg !14
  %33 = getelementptr float, ptr addrspace(1) %3, i64 %22, !dbg !15
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #6, !dbg !16
  %35 = bitcast i32 %34 to float, !dbg !16
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #6, !dbg !16
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #6, !dbg !16
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #6, !dbg !16
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #6, !dbg !16
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #6, !dbg !16
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #6, !dbg !16
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #6, !dbg !16
  %43 = shl i32 %20, 11, !dbg !17
  %44 = or i32 %43, %12, !dbg !18
  %45 = sext i32 %44 to i64, !dbg !19
  %46 = getelementptr i16, ptr addrspace(1) %0, i64 %45, !dbg !19
  %47 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %46, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !20
  %48 = extractvalue { i32, i32, i32, i32 } %47, 0, !dbg !20
  %49 = extractvalue { i32, i32, i32, i32 } %47, 1, !dbg !20
  %50 = extractvalue { i32, i32, i32, i32 } %47, 2, !dbg !20
  %51 = extractvalue { i32, i32, i32, i32 } %47, 3, !dbg !20
  %52 = trunc i32 %48 to i16, !dbg !20
  %extelt.offset = lshr i32 %48, 16, !dbg !20
  %53 = trunc i32 %extelt.offset to i16, !dbg !20
  %54 = trunc i32 %49 to i16, !dbg !20
  %extelt.offset1 = lshr i32 %49, 16, !dbg !20
  %55 = trunc i32 %extelt.offset1 to i16, !dbg !20
  %56 = trunc i32 %50 to i16, !dbg !20
  %extelt.offset2 = lshr i32 %50, 16, !dbg !20
  %57 = trunc i32 %extelt.offset2 to i16, !dbg !20
  %58 = trunc i32 %51 to i16, !dbg !20
  %extelt.offset3 = lshr i32 %51, 16, !dbg !20
  %59 = trunc i32 %extelt.offset3 to i16, !dbg !20
  %60 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %52) #6, !dbg !21
  %61 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %53) #6, !dbg !21
  %62 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %54) #6, !dbg !21
  %63 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %55) #6, !dbg !21
  %64 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %56) #6, !dbg !21
  %65 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %57) #6, !dbg !21
  %66 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %58) #6, !dbg !21
  %67 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %59) #6, !dbg !21
  %68 = getelementptr i16, ptr addrspace(1) %1, i64 %45, !dbg !22
  %69 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %68, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !23
  %70 = extractvalue { i32, i32, i32, i32 } %69, 0, !dbg !23
  %71 = extractvalue { i32, i32, i32, i32 } %69, 1, !dbg !23
  %72 = extractvalue { i32, i32, i32, i32 } %69, 2, !dbg !23
  %73 = extractvalue { i32, i32, i32, i32 } %69, 3, !dbg !23
  %74 = trunc i32 %70 to i16, !dbg !23
  %extelt.offset4 = lshr i32 %70, 16, !dbg !23
  %75 = trunc i32 %extelt.offset4 to i16, !dbg !23
  %76 = trunc i32 %71 to i16, !dbg !23
  %extelt.offset5 = lshr i32 %71, 16, !dbg !23
  %77 = trunc i32 %extelt.offset5 to i16, !dbg !23
  %78 = trunc i32 %72 to i16, !dbg !23
  %extelt.offset6 = lshr i32 %72, 16, !dbg !23
  %79 = trunc i32 %extelt.offset6 to i16, !dbg !23
  %80 = trunc i32 %73 to i16, !dbg !23
  %extelt.offset7 = lshr i32 %73, 16, !dbg !23
  %81 = trunc i32 %extelt.offset7 to i16, !dbg !23
  %82 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %74) #6, !dbg !24
  %83 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %75) #6, !dbg !24
  %84 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %76) #6, !dbg !24
  %85 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %77) #6, !dbg !24
  %86 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %78) #6, !dbg !24
  %87 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %79) #6, !dbg !24
  %88 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %80) #6, !dbg !24
  %89 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %81) #6, !dbg !24
  %90 = fmul float %82, 6.250000e-02, !dbg !25
  %91 = fmul float %83, 6.250000e-02, !dbg !25
  %92 = fmul float %84, 6.250000e-02, !dbg !25
  %93 = fmul float %85, 6.250000e-02, !dbg !25
  %94 = fmul float %86, 6.250000e-02, !dbg !25
  %95 = fmul float %87, 6.250000e-02, !dbg !25
  %96 = fmul float %88, 6.250000e-02, !dbg !25
  %97 = fmul float %89, 6.250000e-02, !dbg !25
  %98 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %90, float 5.000000e+01) #6, !dbg !26
  %99 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %91, float 5.000000e+01) #6, !dbg !26
  %100 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %92, float 5.000000e+01) #6, !dbg !26
  %101 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %93, float 5.000000e+01) #6, !dbg !26
  %102 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %94, float 5.000000e+01) #6, !dbg !26
  %103 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %95, float 5.000000e+01) #6, !dbg !26
  %104 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %96, float 5.000000e+01) #6, !dbg !26
  %105 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %97, float 5.000000e+01) #6, !dbg !26
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not.i = icmp eq i32 %106, 0, !dbg !27
  %107 = tail call float @llvm.nvvm.fabs.ftz.f(float %98) #6, !dbg !27
  %108 = tail call float @llvm.nvvm.fabs.f(float %98) #6, !dbg !27
  %.01.i = select i1 %.not.i, float %108, float %107, !dbg !27
  %109 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !27
  br i1 %109, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !27

__internal_fmad.exit1.i:                          ; preds = %7
  %110 = fmul float %.01.i, 0x4007154760000000, !dbg !27
  %111 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %110) #6, !dbg !27
  %112 = fadd float %111, 1.000000e+00, !dbg !27
  %113 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %112) #7, !dbg !27, !srcloc !28
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not6.i = icmp eq i32 %114, 0, !dbg !27
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %113, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %113, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %.03.i = select i1 %.not6.i, float %116, float %115, !dbg !27
  %117 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !27
  %s.0.i = select i1 %117, float 1.000000e+00, float %.03.i, !dbg !27
  %118 = bitcast float %s.0.i to i32, !dbg !27
  %119 = bitcast float %98 to i32, !dbg !27
  %120 = and i32 %119, -2147483648, !dbg !27
  %121 = or i32 %120, %118, !dbg !27
  %122 = bitcast i32 %121 to float, !dbg !27
  br label %__nv_tanhf.exit, !dbg !27

__internal_fmad.exit3.i:                          ; preds = %7
  %123 = fmul float %98, %98, !dbg !27
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not1.i = icmp eq i32 %124, 0, !dbg !27
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %123, float 0xBFAAC795C0000000) #6, !dbg !27
  %126 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %123, float 0xBFAAC795C0000000) #6, !dbg !27
  %.06.i = select i1 %.not1.i, float %126, float %125, !dbg !27
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not2.i = icmp eq i32 %127, 0, !dbg !27
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %123, float 0x3FC10B2820000000) #6, !dbg !27
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %123, float 0x3FC10B2820000000) #6, !dbg !27
  %.05.i = select i1 %.not2.i, float %129, float %128, !dbg !27
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not3.i = icmp eq i32 %130, 0, !dbg !27
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %123, float 0xBFD5553DA0000000) #6, !dbg !27
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %123, float 0xBFD5553DA0000000) #6, !dbg !27
  %.0.i = select i1 %.not3.i, float %132, float %131, !dbg !27
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not4.i = icmp eq i32 %133, 0, !dbg !27
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %123, float 0.000000e+00) #6, !dbg !27
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %123, float 0.000000e+00) #6, !dbg !27
  %.04.i = select i1 %.not4.i, float %135, float %134, !dbg !27
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not5.i = icmp eq i32 %136, 0, !dbg !27
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %98, float %98) #6, !dbg !27
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %98, float %98) #6, !dbg !27
  %.02.i = select i1 %.not5.i, float %138, float %137, !dbg !27
  br label %__nv_tanhf.exit, !dbg !27

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %122, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !27
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not.i16 = icmp eq i32 %139, 0, !dbg !27
  %140 = tail call float @llvm.nvvm.fabs.ftz.f(float %99) #6, !dbg !27
  %141 = tail call float @llvm.nvvm.fabs.f(float %99) #6, !dbg !27
  %.01.i17 = select i1 %.not.i16, float %141, float %140, !dbg !27
  %142 = fcmp ult float %.01.i17, 0x3FE3333340000000, !dbg !27
  br i1 %142, label %__internal_fmad.exit3.i23, label %__internal_fmad.exit1.i18, !dbg !27

__internal_fmad.exit1.i18:                        ; preds = %__nv_tanhf.exit
  %143 = fmul float %.01.i17, 0x4007154760000000, !dbg !27
  %144 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %143) #6, !dbg !27
  %145 = fadd float %144, 1.000000e+00, !dbg !27
  %146 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %145) #7, !dbg !27, !srcloc !28
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not6.i19 = icmp eq i32 %147, 0, !dbg !27
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %146, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %149 = tail call float @llvm.nvvm.fma.rn.f(float %146, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %.03.i20 = select i1 %.not6.i19, float %149, float %148, !dbg !27
  %150 = fcmp oge float %.01.i17, 0x4022059680000000, !dbg !27
  %s.0.i21 = select i1 %150, float 1.000000e+00, float %.03.i20, !dbg !27
  %151 = bitcast float %s.0.i21 to i32, !dbg !27
  %152 = bitcast float %99 to i32, !dbg !27
  %153 = and i32 %152, -2147483648, !dbg !27
  %154 = or i32 %153, %151, !dbg !27
  %155 = bitcast i32 %154 to float, !dbg !27
  br label %__nv_tanhf.exit34, !dbg !27

__internal_fmad.exit3.i23:                        ; preds = %__nv_tanhf.exit
  %156 = fmul float %99, %99, !dbg !27
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not1.i24 = icmp eq i32 %157, 0, !dbg !27
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %156, float 0xBFAAC795C0000000) #6, !dbg !27
  %159 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %156, float 0xBFAAC795C0000000) #6, !dbg !27
  %.06.i25 = select i1 %.not1.i24, float %159, float %158, !dbg !27
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not2.i26 = icmp eq i32 %160, 0, !dbg !27
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i25, float %156, float 0x3FC10B2820000000) #6, !dbg !27
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i25, float %156, float 0x3FC10B2820000000) #6, !dbg !27
  %.05.i27 = select i1 %.not2.i26, float %162, float %161, !dbg !27
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not3.i28 = icmp eq i32 %163, 0, !dbg !27
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i27, float %156, float 0xBFD5553DA0000000) #6, !dbg !27
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i27, float %156, float 0xBFD5553DA0000000) #6, !dbg !27
  %.0.i29 = select i1 %.not3.i28, float %165, float %164, !dbg !27
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not4.i30 = icmp eq i32 %166, 0, !dbg !27
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i29, float %156, float 0.000000e+00) #6, !dbg !27
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i29, float %156, float 0.000000e+00) #6, !dbg !27
  %.04.i31 = select i1 %.not4.i30, float %168, float %167, !dbg !27
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not5.i32 = icmp eq i32 %169, 0, !dbg !27
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i31, float %99, float %99) #6, !dbg !27
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i31, float %99, float %99) #6, !dbg !27
  %.02.i33 = select i1 %.not5.i32, float %171, float %170, !dbg !27
  br label %__nv_tanhf.exit34, !dbg !27

__nv_tanhf.exit34:                                ; preds = %__internal_fmad.exit1.i18, %__internal_fmad.exit3.i23
  %s.1.i22 = phi float [ %155, %__internal_fmad.exit1.i18 ], [ %.02.i33, %__internal_fmad.exit3.i23 ], !dbg !27
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not.i35 = icmp eq i32 %172, 0, !dbg !27
  %173 = tail call float @llvm.nvvm.fabs.ftz.f(float %100) #6, !dbg !27
  %174 = tail call float @llvm.nvvm.fabs.f(float %100) #6, !dbg !27
  %.01.i36 = select i1 %.not.i35, float %174, float %173, !dbg !27
  %175 = fcmp ult float %.01.i36, 0x3FE3333340000000, !dbg !27
  br i1 %175, label %__internal_fmad.exit3.i42, label %__internal_fmad.exit1.i37, !dbg !27

__internal_fmad.exit1.i37:                        ; preds = %__nv_tanhf.exit34
  %176 = fmul float %.01.i36, 0x4007154760000000, !dbg !27
  %177 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %176) #6, !dbg !27
  %178 = fadd float %177, 1.000000e+00, !dbg !27
  %179 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %178) #7, !dbg !27, !srcloc !28
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not6.i38 = icmp eq i32 %180, 0, !dbg !27
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %179, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %179, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %.03.i39 = select i1 %.not6.i38, float %182, float %181, !dbg !27
  %183 = fcmp oge float %.01.i36, 0x4022059680000000, !dbg !27
  %s.0.i40 = select i1 %183, float 1.000000e+00, float %.03.i39, !dbg !27
  %184 = bitcast float %s.0.i40 to i32, !dbg !27
  %185 = bitcast float %100 to i32, !dbg !27
  %186 = and i32 %185, -2147483648, !dbg !27
  %187 = or i32 %186, %184, !dbg !27
  %188 = bitcast i32 %187 to float, !dbg !27
  br label %__nv_tanhf.exit53, !dbg !27

__internal_fmad.exit3.i42:                        ; preds = %__nv_tanhf.exit34
  %189 = fmul float %100, %100, !dbg !27
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not1.i43 = icmp eq i32 %190, 0, !dbg !27
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %189, float 0xBFAAC795C0000000) #6, !dbg !27
  %192 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %189, float 0xBFAAC795C0000000) #6, !dbg !27
  %.06.i44 = select i1 %.not1.i43, float %192, float %191, !dbg !27
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not2.i45 = icmp eq i32 %193, 0, !dbg !27
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i44, float %189, float 0x3FC10B2820000000) #6, !dbg !27
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i44, float %189, float 0x3FC10B2820000000) #6, !dbg !27
  %.05.i46 = select i1 %.not2.i45, float %195, float %194, !dbg !27
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not3.i47 = icmp eq i32 %196, 0, !dbg !27
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float %189, float 0xBFD5553DA0000000) #6, !dbg !27
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float %189, float 0xBFD5553DA0000000) #6, !dbg !27
  %.0.i48 = select i1 %.not3.i47, float %198, float %197, !dbg !27
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not4.i49 = icmp eq i32 %199, 0, !dbg !27
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %189, float 0.000000e+00) #6, !dbg !27
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %189, float 0.000000e+00) #6, !dbg !27
  %.04.i50 = select i1 %.not4.i49, float %201, float %200, !dbg !27
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not5.i51 = icmp eq i32 %202, 0, !dbg !27
  %203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i50, float %100, float %100) #6, !dbg !27
  %204 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i50, float %100, float %100) #6, !dbg !27
  %.02.i52 = select i1 %.not5.i51, float %204, float %203, !dbg !27
  br label %__nv_tanhf.exit53, !dbg !27

__nv_tanhf.exit53:                                ; preds = %__internal_fmad.exit1.i37, %__internal_fmad.exit3.i42
  %s.1.i41 = phi float [ %188, %__internal_fmad.exit1.i37 ], [ %.02.i52, %__internal_fmad.exit3.i42 ], !dbg !27
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not.i54 = icmp eq i32 %205, 0, !dbg !27
  %206 = tail call float @llvm.nvvm.fabs.ftz.f(float %101) #6, !dbg !27
  %207 = tail call float @llvm.nvvm.fabs.f(float %101) #6, !dbg !27
  %.01.i55 = select i1 %.not.i54, float %207, float %206, !dbg !27
  %208 = fcmp ult float %.01.i55, 0x3FE3333340000000, !dbg !27
  br i1 %208, label %__internal_fmad.exit3.i61, label %__internal_fmad.exit1.i56, !dbg !27

__internal_fmad.exit1.i56:                        ; preds = %__nv_tanhf.exit53
  %209 = fmul float %.01.i55, 0x4007154760000000, !dbg !27
  %210 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %209) #6, !dbg !27
  %211 = fadd float %210, 1.000000e+00, !dbg !27
  %212 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %211) #7, !dbg !27, !srcloc !28
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not6.i57 = icmp eq i32 %213, 0, !dbg !27
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %212, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %212, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %.03.i58 = select i1 %.not6.i57, float %215, float %214, !dbg !27
  %216 = fcmp oge float %.01.i55, 0x4022059680000000, !dbg !27
  %s.0.i59 = select i1 %216, float 1.000000e+00, float %.03.i58, !dbg !27
  %217 = bitcast float %s.0.i59 to i32, !dbg !27
  %218 = bitcast float %101 to i32, !dbg !27
  %219 = and i32 %218, -2147483648, !dbg !27
  %220 = or i32 %219, %217, !dbg !27
  %221 = bitcast i32 %220 to float, !dbg !27
  br label %__nv_tanhf.exit72, !dbg !27

__internal_fmad.exit3.i61:                        ; preds = %__nv_tanhf.exit53
  %222 = fmul float %101, %101, !dbg !27
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not1.i62 = icmp eq i32 %223, 0, !dbg !27
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %222, float 0xBFAAC795C0000000) #6, !dbg !27
  %225 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %222, float 0xBFAAC795C0000000) #6, !dbg !27
  %.06.i63 = select i1 %.not1.i62, float %225, float %224, !dbg !27
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not2.i64 = icmp eq i32 %226, 0, !dbg !27
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i63, float %222, float 0x3FC10B2820000000) #6, !dbg !27
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i63, float %222, float 0x3FC10B2820000000) #6, !dbg !27
  %.05.i65 = select i1 %.not2.i64, float %228, float %227, !dbg !27
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not3.i66 = icmp eq i32 %229, 0, !dbg !27
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i65, float %222, float 0xBFD5553DA0000000) #6, !dbg !27
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i65, float %222, float 0xBFD5553DA0000000) #6, !dbg !27
  %.0.i67 = select i1 %.not3.i66, float %231, float %230, !dbg !27
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not4.i68 = icmp eq i32 %232, 0, !dbg !27
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i67, float %222, float 0.000000e+00) #6, !dbg !27
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i67, float %222, float 0.000000e+00) #6, !dbg !27
  %.04.i69 = select i1 %.not4.i68, float %234, float %233, !dbg !27
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not5.i70 = icmp eq i32 %235, 0, !dbg !27
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i69, float %101, float %101) #6, !dbg !27
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i69, float %101, float %101) #6, !dbg !27
  %.02.i71 = select i1 %.not5.i70, float %237, float %236, !dbg !27
  br label %__nv_tanhf.exit72, !dbg !27

__nv_tanhf.exit72:                                ; preds = %__internal_fmad.exit1.i56, %__internal_fmad.exit3.i61
  %s.1.i60 = phi float [ %221, %__internal_fmad.exit1.i56 ], [ %.02.i71, %__internal_fmad.exit3.i61 ], !dbg !27
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not.i73 = icmp eq i32 %238, 0, !dbg !27
  %239 = tail call float @llvm.nvvm.fabs.ftz.f(float %102) #6, !dbg !27
  %240 = tail call float @llvm.nvvm.fabs.f(float %102) #6, !dbg !27
  %.01.i74 = select i1 %.not.i73, float %240, float %239, !dbg !27
  %241 = fcmp ult float %.01.i74, 0x3FE3333340000000, !dbg !27
  br i1 %241, label %__internal_fmad.exit3.i80, label %__internal_fmad.exit1.i75, !dbg !27

__internal_fmad.exit1.i75:                        ; preds = %__nv_tanhf.exit72
  %242 = fmul float %.01.i74, 0x4007154760000000, !dbg !27
  %243 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %242) #6, !dbg !27
  %244 = fadd float %243, 1.000000e+00, !dbg !27
  %245 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %244) #7, !dbg !27, !srcloc !28
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not6.i76 = icmp eq i32 %246, 0, !dbg !27
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %245, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %245, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %.03.i77 = select i1 %.not6.i76, float %248, float %247, !dbg !27
  %249 = fcmp oge float %.01.i74, 0x4022059680000000, !dbg !27
  %s.0.i78 = select i1 %249, float 1.000000e+00, float %.03.i77, !dbg !27
  %250 = bitcast float %s.0.i78 to i32, !dbg !27
  %251 = bitcast float %102 to i32, !dbg !27
  %252 = and i32 %251, -2147483648, !dbg !27
  %253 = or i32 %252, %250, !dbg !27
  %254 = bitcast i32 %253 to float, !dbg !27
  br label %__nv_tanhf.exit91, !dbg !27

__internal_fmad.exit3.i80:                        ; preds = %__nv_tanhf.exit72
  %255 = fmul float %102, %102, !dbg !27
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not1.i81 = icmp eq i32 %256, 0, !dbg !27
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %255, float 0xBFAAC795C0000000) #6, !dbg !27
  %258 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %255, float 0xBFAAC795C0000000) #6, !dbg !27
  %.06.i82 = select i1 %.not1.i81, float %258, float %257, !dbg !27
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not2.i83 = icmp eq i32 %259, 0, !dbg !27
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i82, float %255, float 0x3FC10B2820000000) #6, !dbg !27
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i82, float %255, float 0x3FC10B2820000000) #6, !dbg !27
  %.05.i84 = select i1 %.not2.i83, float %261, float %260, !dbg !27
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not3.i85 = icmp eq i32 %262, 0, !dbg !27
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i84, float %255, float 0xBFD5553DA0000000) #6, !dbg !27
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i84, float %255, float 0xBFD5553DA0000000) #6, !dbg !27
  %.0.i86 = select i1 %.not3.i85, float %264, float %263, !dbg !27
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not4.i87 = icmp eq i32 %265, 0, !dbg !27
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i86, float %255, float 0.000000e+00) #6, !dbg !27
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i86, float %255, float 0.000000e+00) #6, !dbg !27
  %.04.i88 = select i1 %.not4.i87, float %267, float %266, !dbg !27
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not5.i89 = icmp eq i32 %268, 0, !dbg !27
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i88, float %102, float %102) #6, !dbg !27
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i88, float %102, float %102) #6, !dbg !27
  %.02.i90 = select i1 %.not5.i89, float %270, float %269, !dbg !27
  br label %__nv_tanhf.exit91, !dbg !27

__nv_tanhf.exit91:                                ; preds = %__internal_fmad.exit1.i75, %__internal_fmad.exit3.i80
  %s.1.i79 = phi float [ %254, %__internal_fmad.exit1.i75 ], [ %.02.i90, %__internal_fmad.exit3.i80 ], !dbg !27
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not.i92 = icmp eq i32 %271, 0, !dbg !27
  %272 = tail call float @llvm.nvvm.fabs.ftz.f(float %103) #6, !dbg !27
  %273 = tail call float @llvm.nvvm.fabs.f(float %103) #6, !dbg !27
  %.01.i93 = select i1 %.not.i92, float %273, float %272, !dbg !27
  %274 = fcmp ult float %.01.i93, 0x3FE3333340000000, !dbg !27
  br i1 %274, label %__internal_fmad.exit3.i99, label %__internal_fmad.exit1.i94, !dbg !27

__internal_fmad.exit1.i94:                        ; preds = %__nv_tanhf.exit91
  %275 = fmul float %.01.i93, 0x4007154760000000, !dbg !27
  %276 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %275) #6, !dbg !27
  %277 = fadd float %276, 1.000000e+00, !dbg !27
  %278 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %277) #7, !dbg !27, !srcloc !28
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not6.i95 = icmp eq i32 %279, 0, !dbg !27
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %278, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %278, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %.03.i96 = select i1 %.not6.i95, float %281, float %280, !dbg !27
  %282 = fcmp oge float %.01.i93, 0x4022059680000000, !dbg !27
  %s.0.i97 = select i1 %282, float 1.000000e+00, float %.03.i96, !dbg !27
  %283 = bitcast float %s.0.i97 to i32, !dbg !27
  %284 = bitcast float %103 to i32, !dbg !27
  %285 = and i32 %284, -2147483648, !dbg !27
  %286 = or i32 %285, %283, !dbg !27
  %287 = bitcast i32 %286 to float, !dbg !27
  br label %__nv_tanhf.exit110, !dbg !27

__internal_fmad.exit3.i99:                        ; preds = %__nv_tanhf.exit91
  %288 = fmul float %103, %103, !dbg !27
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not1.i100 = icmp eq i32 %289, 0, !dbg !27
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %288, float 0xBFAAC795C0000000) #6, !dbg !27
  %291 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %288, float 0xBFAAC795C0000000) #6, !dbg !27
  %.06.i101 = select i1 %.not1.i100, float %291, float %290, !dbg !27
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not2.i102 = icmp eq i32 %292, 0, !dbg !27
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i101, float %288, float 0x3FC10B2820000000) #6, !dbg !27
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i101, float %288, float 0x3FC10B2820000000) #6, !dbg !27
  %.05.i103 = select i1 %.not2.i102, float %294, float %293, !dbg !27
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not3.i104 = icmp eq i32 %295, 0, !dbg !27
  %296 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i103, float %288, float 0xBFD5553DA0000000) #6, !dbg !27
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i103, float %288, float 0xBFD5553DA0000000) #6, !dbg !27
  %.0.i105 = select i1 %.not3.i104, float %297, float %296, !dbg !27
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not4.i106 = icmp eq i32 %298, 0, !dbg !27
  %299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i105, float %288, float 0.000000e+00) #6, !dbg !27
  %300 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i105, float %288, float 0.000000e+00) #6, !dbg !27
  %.04.i107 = select i1 %.not4.i106, float %300, float %299, !dbg !27
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not5.i108 = icmp eq i32 %301, 0, !dbg !27
  %302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i107, float %103, float %103) #6, !dbg !27
  %303 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i107, float %103, float %103) #6, !dbg !27
  %.02.i109 = select i1 %.not5.i108, float %303, float %302, !dbg !27
  br label %__nv_tanhf.exit110, !dbg !27

__nv_tanhf.exit110:                               ; preds = %__internal_fmad.exit1.i94, %__internal_fmad.exit3.i99
  %s.1.i98 = phi float [ %287, %__internal_fmad.exit1.i94 ], [ %.02.i109, %__internal_fmad.exit3.i99 ], !dbg !27
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not.i111 = icmp eq i32 %304, 0, !dbg !27
  %305 = tail call float @llvm.nvvm.fabs.ftz.f(float %104) #6, !dbg !27
  %306 = tail call float @llvm.nvvm.fabs.f(float %104) #6, !dbg !27
  %.01.i112 = select i1 %.not.i111, float %306, float %305, !dbg !27
  %307 = fcmp ult float %.01.i112, 0x3FE3333340000000, !dbg !27
  br i1 %307, label %__internal_fmad.exit3.i118, label %__internal_fmad.exit1.i113, !dbg !27

__internal_fmad.exit1.i113:                       ; preds = %__nv_tanhf.exit110
  %308 = fmul float %.01.i112, 0x4007154760000000, !dbg !27
  %309 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %308) #6, !dbg !27
  %310 = fadd float %309, 1.000000e+00, !dbg !27
  %311 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %310) #7, !dbg !27, !srcloc !28
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not6.i114 = icmp eq i32 %312, 0, !dbg !27
  %313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %311, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %314 = tail call float @llvm.nvvm.fma.rn.f(float %311, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %.03.i115 = select i1 %.not6.i114, float %314, float %313, !dbg !27
  %315 = fcmp oge float %.01.i112, 0x4022059680000000, !dbg !27
  %s.0.i116 = select i1 %315, float 1.000000e+00, float %.03.i115, !dbg !27
  %316 = bitcast float %s.0.i116 to i32, !dbg !27
  %317 = bitcast float %104 to i32, !dbg !27
  %318 = and i32 %317, -2147483648, !dbg !27
  %319 = or i32 %318, %316, !dbg !27
  %320 = bitcast i32 %319 to float, !dbg !27
  br label %__nv_tanhf.exit129, !dbg !27

__internal_fmad.exit3.i118:                       ; preds = %__nv_tanhf.exit110
  %321 = fmul float %104, %104, !dbg !27
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not1.i119 = icmp eq i32 %322, 0, !dbg !27
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %321, float 0xBFAAC795C0000000) #6, !dbg !27
  %324 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %321, float 0xBFAAC795C0000000) #6, !dbg !27
  %.06.i120 = select i1 %.not1.i119, float %324, float %323, !dbg !27
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not2.i121 = icmp eq i32 %325, 0, !dbg !27
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i120, float %321, float 0x3FC10B2820000000) #6, !dbg !27
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i120, float %321, float 0x3FC10B2820000000) #6, !dbg !27
  %.05.i122 = select i1 %.not2.i121, float %327, float %326, !dbg !27
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not3.i123 = icmp eq i32 %328, 0, !dbg !27
  %329 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i122, float %321, float 0xBFD5553DA0000000) #6, !dbg !27
  %330 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i122, float %321, float 0xBFD5553DA0000000) #6, !dbg !27
  %.0.i124 = select i1 %.not3.i123, float %330, float %329, !dbg !27
  %331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not4.i125 = icmp eq i32 %331, 0, !dbg !27
  %332 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i124, float %321, float 0.000000e+00) #6, !dbg !27
  %333 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i124, float %321, float 0.000000e+00) #6, !dbg !27
  %.04.i126 = select i1 %.not4.i125, float %333, float %332, !dbg !27
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not5.i127 = icmp eq i32 %334, 0, !dbg !27
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i126, float %104, float %104) #6, !dbg !27
  %336 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i126, float %104, float %104) #6, !dbg !27
  %.02.i128 = select i1 %.not5.i127, float %336, float %335, !dbg !27
  br label %__nv_tanhf.exit129, !dbg !27

__nv_tanhf.exit129:                               ; preds = %__internal_fmad.exit1.i113, %__internal_fmad.exit3.i118
  %s.1.i117 = phi float [ %320, %__internal_fmad.exit1.i113 ], [ %.02.i128, %__internal_fmad.exit3.i118 ], !dbg !27
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not.i130 = icmp eq i32 %337, 0, !dbg !27
  %338 = tail call float @llvm.nvvm.fabs.ftz.f(float %105) #6, !dbg !27
  %339 = tail call float @llvm.nvvm.fabs.f(float %105) #6, !dbg !27
  %.01.i131 = select i1 %.not.i130, float %339, float %338, !dbg !27
  %340 = fcmp ult float %.01.i131, 0x3FE3333340000000, !dbg !27
  br i1 %340, label %__internal_fmad.exit3.i137, label %__internal_fmad.exit1.i132, !dbg !27

__internal_fmad.exit1.i132:                       ; preds = %__nv_tanhf.exit129
  %341 = fmul float %.01.i131, 0x4007154760000000, !dbg !27
  %342 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %341) #6, !dbg !27
  %343 = fadd float %342, 1.000000e+00, !dbg !27
  %344 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %343) #7, !dbg !27, !srcloc !28
  %345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not6.i133 = icmp eq i32 %345, 0, !dbg !27
  %346 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %344, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %347 = tail call float @llvm.nvvm.fma.rn.f(float %344, float -2.000000e+00, float 1.000000e+00) #6, !dbg !27
  %.03.i134 = select i1 %.not6.i133, float %347, float %346, !dbg !27
  %348 = fcmp oge float %.01.i131, 0x4022059680000000, !dbg !27
  %s.0.i135 = select i1 %348, float 1.000000e+00, float %.03.i134, !dbg !27
  %349 = bitcast float %s.0.i135 to i32, !dbg !27
  %350 = bitcast float %105 to i32, !dbg !27
  %351 = and i32 %350, -2147483648, !dbg !27
  %352 = or i32 %351, %349, !dbg !27
  %353 = bitcast i32 %352 to float, !dbg !27
  br label %__nv_tanhf.exit148, !dbg !27

__internal_fmad.exit3.i137:                       ; preds = %__nv_tanhf.exit129
  %354 = fmul float %105, %105, !dbg !27
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not1.i138 = icmp eq i32 %355, 0, !dbg !27
  %356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %354, float 0xBFAAC795C0000000) #6, !dbg !27
  %357 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %354, float 0xBFAAC795C0000000) #6, !dbg !27
  %.06.i139 = select i1 %.not1.i138, float %357, float %356, !dbg !27
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not2.i140 = icmp eq i32 %358, 0, !dbg !27
  %359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i139, float %354, float 0x3FC10B2820000000) #6, !dbg !27
  %360 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i139, float %354, float 0x3FC10B2820000000) #6, !dbg !27
  %.05.i141 = select i1 %.not2.i140, float %360, float %359, !dbg !27
  %361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not3.i142 = icmp eq i32 %361, 0, !dbg !27
  %362 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i141, float %354, float 0xBFD5553DA0000000) #6, !dbg !27
  %363 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i141, float %354, float 0xBFD5553DA0000000) #6, !dbg !27
  %.0.i143 = select i1 %.not3.i142, float %363, float %362, !dbg !27
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not4.i144 = icmp eq i32 %364, 0, !dbg !27
  %365 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i143, float %354, float 0.000000e+00) #6, !dbg !27
  %366 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i143, float %354, float 0.000000e+00) #6, !dbg !27
  %.04.i145 = select i1 %.not4.i144, float %366, float %365, !dbg !27
  %367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not5.i146 = icmp eq i32 %367, 0, !dbg !27
  %368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i145, float %105, float %105) #6, !dbg !27
  %369 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i145, float %105, float %105) #6, !dbg !27
  %.02.i147 = select i1 %.not5.i146, float %369, float %368, !dbg !27
  br label %__nv_tanhf.exit148, !dbg !27

__nv_tanhf.exit148:                               ; preds = %__internal_fmad.exit1.i132, %__internal_fmad.exit3.i137
  %s.1.i136 = phi float [ %353, %__internal_fmad.exit1.i132 ], [ %.02.i147, %__internal_fmad.exit3.i137 ], !dbg !27
  %370 = fmul float %s.1.i, 5.000000e+01, !dbg !29
  %371 = fmul float %s.1.i22, 5.000000e+01, !dbg !29
  %372 = fmul float %s.1.i41, 5.000000e+01, !dbg !29
  %373 = fmul float %s.1.i60, 5.000000e+01, !dbg !29
  %374 = fmul float %s.1.i79, 5.000000e+01, !dbg !29
  %375 = fmul float %s.1.i98, 5.000000e+01, !dbg !29
  %376 = fmul float %s.1.i117, 5.000000e+01, !dbg !29
  %377 = fmul float %s.1.i136, 5.000000e+01, !dbg !29
  %378 = icmp sgt i32 %12, %21, !dbg !30
  %379 = icmp sgt i32 %13, %21, !dbg !30
  %380 = icmp sgt i32 %14, %21, !dbg !30
  %381 = icmp sgt i32 %15, %21, !dbg !30
  %382 = icmp sgt i32 %16, %21, !dbg !30
  %383 = icmp sgt i32 %17, %21, !dbg !30
  %384 = icmp sgt i32 %18, %21, !dbg !30
  %385 = icmp sgt i32 %19, %21, !dbg !30
  %386 = select i1 %378, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !31
  %387 = select i1 %379, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !31
  %388 = select i1 %380, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !31
  %389 = select i1 %381, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !31
  %390 = select i1 %382, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !31
  %391 = select i1 %383, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !31
  %392 = select i1 %384, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !31
  %393 = select i1 %385, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !31
  %394 = fadd float %386, %370, !dbg !32
  %395 = fadd float %387, %371, !dbg !32
  %396 = fadd float %388, %372, !dbg !32
  %397 = fadd float %389, %373, !dbg !32
  %398 = fadd float %390, %374, !dbg !32
  %399 = fadd float %391, %375, !dbg !32
  %400 = fadd float %392, %376, !dbg !32
  %401 = fadd float %393, %377, !dbg !32
  %402 = fsub float %394, %25, !dbg !33
  %403 = fsub float %395, %25, !dbg !33
  %404 = fsub float %396, %25, !dbg !33
  %405 = fsub float %397, %25, !dbg !33
  %406 = fsub float %398, %25, !dbg !33
  %407 = fsub float %399, %25, !dbg !33
  %408 = fsub float %400, %25, !dbg !33
  %409 = fsub float %401, %25, !dbg !33
  %410 = fmul float %402, 0x3FF7154760000000, !dbg !34
  %411 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %410) #6, !dbg !34
  %412 = fmul float %403, 0x3FF7154760000000, !dbg !34
  %413 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %412) #6, !dbg !34
  %414 = fmul float %404, 0x3FF7154760000000, !dbg !34
  %415 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %414) #6, !dbg !34
  %416 = fmul float %405, 0x3FF7154760000000, !dbg !34
  %417 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %416) #6, !dbg !34
  %418 = fmul float %406, 0x3FF7154760000000, !dbg !34
  %419 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %418) #6, !dbg !34
  %420 = fmul float %407, 0x3FF7154760000000, !dbg !34
  %421 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %420) #6, !dbg !34
  %422 = fmul float %408, 0x3FF7154760000000, !dbg !34
  %423 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %422) #6, !dbg !34
  %424 = fmul float %409, 0x3FF7154760000000, !dbg !34
  %425 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %424) #6, !dbg !34
  %426 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %411, float %35) #6, !dbg !35
  %427 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %413, float %35) #6, !dbg !35
  %428 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %415, float %35) #6, !dbg !35
  %429 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %417, float %35) #6, !dbg !35
  %430 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %419, float %35) #6, !dbg !35
  %431 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %421, float %35) #6, !dbg !35
  %432 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %423, float %35) #6, !dbg !35
  %433 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %425, float %35) #6, !dbg !35
  %434 = fmul float %60, %426, !dbg !36
  %435 = fmul float %61, %427, !dbg !36
  %436 = fmul float %62, %428, !dbg !36
  %437 = fmul float %63, %429, !dbg !36
  %438 = fmul float %64, %430, !dbg !36
  %439 = fmul float %65, %431, !dbg !36
  %440 = fmul float %66, %432, !dbg !36
  %441 = fmul float %67, %433, !dbg !36
  %442 = fadd float %434, 0.000000e+00, !dbg !37
  %443 = fadd float %435, 0.000000e+00, !dbg !37
  %444 = fadd float %436, 0.000000e+00, !dbg !37
  %445 = fadd float %437, 0.000000e+00, !dbg !37
  %446 = fadd float %438, 0.000000e+00, !dbg !37
  %447 = fadd float %439, 0.000000e+00, !dbg !37
  %448 = fadd float %440, 0.000000e+00, !dbg !37
  %449 = fadd float %441, 0.000000e+00, !dbg !37
  %450 = fadd float %442, %443, !dbg !38
  %451 = fadd float %450, %444, !dbg !38
  %452 = fadd float %451, %445, !dbg !38
  %453 = fadd float %452, %446, !dbg !38
  %454 = fadd float %453, %447, !dbg !38
  %455 = fadd float %454, %448, !dbg !38
  %456 = fadd float %455, %449, !dbg !38
  %457 = bitcast float %456 to i32, !dbg !44
  %458 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %457, i32 16, i32 31), !dbg !44
  %459 = bitcast i32 %458 to float, !dbg !44
  %460 = fadd float %456, %459, !dbg !38
  %461 = bitcast float %460 to i32, !dbg !44
  %462 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %461, i32 8, i32 31), !dbg !44
  %463 = bitcast i32 %462 to float, !dbg !44
  %464 = fadd float %460, %463, !dbg !38
  %465 = bitcast float %464 to i32, !dbg !44
  %466 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %465, i32 4, i32 31), !dbg !44
  %467 = bitcast i32 %466 to float, !dbg !44
  %468 = fadd float %464, %467, !dbg !38
  %469 = bitcast float %468 to i32, !dbg !44
  %470 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %469, i32 2, i32 31), !dbg !44
  %471 = bitcast i32 %470 to float, !dbg !44
  %472 = fadd float %468, %471, !dbg !38
  %473 = bitcast float %472 to i32, !dbg !44
  %474 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %473, i32 1, i32 31), !dbg !44
  %475 = bitcast i32 %474 to float, !dbg !44
  %476 = fadd float %472, %475, !dbg !38
  %477 = icmp eq i32 %9, 0, !dbg !44
  %478 = zext nneg i32 %11 to i64, !dbg !44
  %479 = getelementptr float, ptr addrspace(3) @global_smem, i64 %478, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %479, float %476, i1 %477) #6, !dbg !44
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %480 = icmp slt i32 %8, 8, !dbg !44
  %481 = sext i32 %8 to i64, !dbg !44
  %482 = getelementptr float, ptr addrspace(3) @global_smem, i64 %481, !dbg !44
  %483 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %482, i1 %480) #6, !dbg !44
  %484 = bitcast float %483 to i32, !dbg !44
  %485 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %484, i32 4, i32 31), !dbg !44
  %486 = bitcast i32 %485 to float, !dbg !44
  %487 = fadd float %483, %486, !dbg !38
  %488 = bitcast float %487 to i32, !dbg !44
  %489 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %488, i32 2, i32 31), !dbg !44
  %490 = bitcast i32 %489 to float, !dbg !44
  %491 = fadd float %487, %490, !dbg !38
  %492 = bitcast float %491 to i32, !dbg !44
  %493 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %492, i32 1, i32 31), !dbg !44
  %494 = bitcast i32 %493 to float, !dbg !44
  %495 = fadd float %491, %494, !dbg !38
  %496 = and i32 %8, 7, !dbg !44
  %497 = icmp eq i32 %496, 0, !dbg !44
  %498 = and i1 %480, %497, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %482, float %495, i1 %498) #6, !dbg !44
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %499 = load float, ptr addrspace(3) @global_smem, align 4, !dbg !44
  %500 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %46, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !46
  %501 = extractvalue { i32, i32, i32, i32 } %500, 0, !dbg !46
  %502 = extractvalue { i32, i32, i32, i32 } %500, 1, !dbg !46
  %503 = extractvalue { i32, i32, i32, i32 } %500, 2, !dbg !46
  %504 = extractvalue { i32, i32, i32, i32 } %500, 3, !dbg !46
  %505 = trunc i32 %501 to i16, !dbg !46
  %extelt.offset8 = lshr i32 %501, 16, !dbg !46
  %506 = trunc i32 %extelt.offset8 to i16, !dbg !46
  %507 = trunc i32 %502 to i16, !dbg !46
  %extelt.offset9 = lshr i32 %502, 16, !dbg !46
  %508 = trunc i32 %extelt.offset9 to i16, !dbg !46
  %509 = trunc i32 %503 to i16, !dbg !46
  %extelt.offset10 = lshr i32 %503, 16, !dbg !46
  %510 = trunc i32 %extelt.offset10 to i16, !dbg !46
  %511 = trunc i32 %504 to i16, !dbg !46
  %extelt.offset11 = lshr i32 %504, 16, !dbg !46
  %512 = trunc i32 %extelt.offset11 to i16, !dbg !46
  %513 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %505) #6, !dbg !47
  %514 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %506) #6, !dbg !47
  %515 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %507) #6, !dbg !47
  %516 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %508) #6, !dbg !47
  %517 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %509) #6, !dbg !47
  %518 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %510) #6, !dbg !47
  %519 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %511) #6, !dbg !47
  %520 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %512) #6, !dbg !47
  %521 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %68, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !48
  %522 = extractvalue { i32, i32, i32, i32 } %521, 0, !dbg !48
  %523 = extractvalue { i32, i32, i32, i32 } %521, 1, !dbg !48
  %524 = extractvalue { i32, i32, i32, i32 } %521, 2, !dbg !48
  %525 = extractvalue { i32, i32, i32, i32 } %521, 3, !dbg !48
  %526 = trunc i32 %522 to i16, !dbg !48
  %extelt.offset12 = lshr i32 %522, 16, !dbg !48
  %527 = trunc i32 %extelt.offset12 to i16, !dbg !48
  %528 = trunc i32 %523 to i16, !dbg !48
  %extelt.offset13 = lshr i32 %523, 16, !dbg !48
  %529 = trunc i32 %extelt.offset13 to i16, !dbg !48
  %530 = trunc i32 %524 to i16, !dbg !48
  %extelt.offset14 = lshr i32 %524, 16, !dbg !48
  %531 = trunc i32 %extelt.offset14 to i16, !dbg !48
  %532 = trunc i32 %525 to i16, !dbg !48
  %extelt.offset15 = lshr i32 %525, 16, !dbg !48
  %533 = trunc i32 %extelt.offset15 to i16, !dbg !48
  %534 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %526) #6, !dbg !49
  %535 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %527) #6, !dbg !49
  %536 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %528) #6, !dbg !49
  %537 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %529) #6, !dbg !49
  %538 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %530) #6, !dbg !49
  %539 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %531) #6, !dbg !49
  %540 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %532) #6, !dbg !49
  %541 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %533) #6, !dbg !49
  %542 = fmul float %534, 6.250000e-02, !dbg !50
  %543 = fmul float %535, 6.250000e-02, !dbg !50
  %544 = fmul float %536, 6.250000e-02, !dbg !50
  %545 = fmul float %537, 6.250000e-02, !dbg !50
  %546 = fmul float %538, 6.250000e-02, !dbg !50
  %547 = fmul float %539, 6.250000e-02, !dbg !50
  %548 = fmul float %540, 6.250000e-02, !dbg !50
  %549 = fmul float %541, 6.250000e-02, !dbg !50
  %550 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %542, float 5.000000e+01) #6, !dbg !51
  %551 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %543, float 5.000000e+01) #6, !dbg !51
  %552 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %544, float 5.000000e+01) #6, !dbg !51
  %553 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %545, float 5.000000e+01) #6, !dbg !51
  %554 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %546, float 5.000000e+01) #6, !dbg !51
  %555 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %547, float 5.000000e+01) #6, !dbg !51
  %556 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %548, float 5.000000e+01) #6, !dbg !51
  %557 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %549, float 5.000000e+01) #6, !dbg !51
  %558 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i149 = icmp eq i32 %558, 0, !dbg !52
  %559 = tail call float @llvm.nvvm.fabs.ftz.f(float %550) #6, !dbg !52
  %560 = tail call float @llvm.nvvm.fabs.f(float %550) #6, !dbg !52
  %.01.i150 = select i1 %.not.i149, float %560, float %559, !dbg !52
  %561 = fcmp ult float %.01.i150, 0x3FE3333340000000, !dbg !52
  br i1 %561, label %__internal_fmad.exit3.i156, label %__internal_fmad.exit1.i151, !dbg !52

__internal_fmad.exit1.i151:                       ; preds = %__nv_tanhf.exit148
  %562 = fmul float %.01.i150, 0x4007154760000000, !dbg !52
  %563 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %562) #6, !dbg !52
  %564 = fadd float %563, 1.000000e+00, !dbg !52
  %565 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %564) #7, !dbg !52, !srcloc !28
  %566 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i152 = icmp eq i32 %566, 0, !dbg !52
  %567 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %565, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %568 = tail call float @llvm.nvvm.fma.rn.f(float %565, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i153 = select i1 %.not6.i152, float %568, float %567, !dbg !52
  %569 = fcmp oge float %.01.i150, 0x4022059680000000, !dbg !52
  %s.0.i154 = select i1 %569, float 1.000000e+00, float %.03.i153, !dbg !52
  %570 = bitcast float %s.0.i154 to i32, !dbg !52
  %571 = bitcast float %550 to i32, !dbg !52
  %572 = and i32 %571, -2147483648, !dbg !52
  %573 = or i32 %572, %570, !dbg !52
  %574 = bitcast i32 %573 to float, !dbg !52
  br label %__nv_tanhf.exit167, !dbg !52

__internal_fmad.exit3.i156:                       ; preds = %__nv_tanhf.exit148
  %575 = fmul float %550, %550, !dbg !52
  %576 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i157 = icmp eq i32 %576, 0, !dbg !52
  %577 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %575, float 0xBFAAC795C0000000) #6, !dbg !52
  %578 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %575, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i158 = select i1 %.not1.i157, float %578, float %577, !dbg !52
  %579 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i159 = icmp eq i32 %579, 0, !dbg !52
  %580 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i158, float %575, float 0x3FC10B2820000000) #6, !dbg !52
  %581 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i158, float %575, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i160 = select i1 %.not2.i159, float %581, float %580, !dbg !52
  %582 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i161 = icmp eq i32 %582, 0, !dbg !52
  %583 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i160, float %575, float 0xBFD5553DA0000000) #6, !dbg !52
  %584 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i160, float %575, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i162 = select i1 %.not3.i161, float %584, float %583, !dbg !52
  %585 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i163 = icmp eq i32 %585, 0, !dbg !52
  %586 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i162, float %575, float 0.000000e+00) #6, !dbg !52
  %587 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i162, float %575, float 0.000000e+00) #6, !dbg !52
  %.04.i164 = select i1 %.not4.i163, float %587, float %586, !dbg !52
  %588 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i165 = icmp eq i32 %588, 0, !dbg !52
  %589 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i164, float %550, float %550) #6, !dbg !52
  %590 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i164, float %550, float %550) #6, !dbg !52
  %.02.i166 = select i1 %.not5.i165, float %590, float %589, !dbg !52
  br label %__nv_tanhf.exit167, !dbg !52

__nv_tanhf.exit167:                               ; preds = %__internal_fmad.exit1.i151, %__internal_fmad.exit3.i156
  %s.1.i155 = phi float [ %574, %__internal_fmad.exit1.i151 ], [ %.02.i166, %__internal_fmad.exit3.i156 ], !dbg !52
  %591 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i168 = icmp eq i32 %591, 0, !dbg !52
  %592 = tail call float @llvm.nvvm.fabs.ftz.f(float %551) #6, !dbg !52
  %593 = tail call float @llvm.nvvm.fabs.f(float %551) #6, !dbg !52
  %.01.i169 = select i1 %.not.i168, float %593, float %592, !dbg !52
  %594 = fcmp ult float %.01.i169, 0x3FE3333340000000, !dbg !52
  br i1 %594, label %__internal_fmad.exit3.i175, label %__internal_fmad.exit1.i170, !dbg !52

__internal_fmad.exit1.i170:                       ; preds = %__nv_tanhf.exit167
  %595 = fmul float %.01.i169, 0x4007154760000000, !dbg !52
  %596 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %595) #6, !dbg !52
  %597 = fadd float %596, 1.000000e+00, !dbg !52
  %598 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %597) #7, !dbg !52, !srcloc !28
  %599 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i171 = icmp eq i32 %599, 0, !dbg !52
  %600 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %598, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %601 = tail call float @llvm.nvvm.fma.rn.f(float %598, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i172 = select i1 %.not6.i171, float %601, float %600, !dbg !52
  %602 = fcmp oge float %.01.i169, 0x4022059680000000, !dbg !52
  %s.0.i173 = select i1 %602, float 1.000000e+00, float %.03.i172, !dbg !52
  %603 = bitcast float %s.0.i173 to i32, !dbg !52
  %604 = bitcast float %551 to i32, !dbg !52
  %605 = and i32 %604, -2147483648, !dbg !52
  %606 = or i32 %605, %603, !dbg !52
  %607 = bitcast i32 %606 to float, !dbg !52
  br label %__nv_tanhf.exit186, !dbg !52

__internal_fmad.exit3.i175:                       ; preds = %__nv_tanhf.exit167
  %608 = fmul float %551, %551, !dbg !52
  %609 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i176 = icmp eq i32 %609, 0, !dbg !52
  %610 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %608, float 0xBFAAC795C0000000) #6, !dbg !52
  %611 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %608, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i177 = select i1 %.not1.i176, float %611, float %610, !dbg !52
  %612 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i178 = icmp eq i32 %612, 0, !dbg !52
  %613 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i177, float %608, float 0x3FC10B2820000000) #6, !dbg !52
  %614 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i177, float %608, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i179 = select i1 %.not2.i178, float %614, float %613, !dbg !52
  %615 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i180 = icmp eq i32 %615, 0, !dbg !52
  %616 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i179, float %608, float 0xBFD5553DA0000000) #6, !dbg !52
  %617 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i179, float %608, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i181 = select i1 %.not3.i180, float %617, float %616, !dbg !52
  %618 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i182 = icmp eq i32 %618, 0, !dbg !52
  %619 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i181, float %608, float 0.000000e+00) #6, !dbg !52
  %620 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i181, float %608, float 0.000000e+00) #6, !dbg !52
  %.04.i183 = select i1 %.not4.i182, float %620, float %619, !dbg !52
  %621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i184 = icmp eq i32 %621, 0, !dbg !52
  %622 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i183, float %551, float %551) #6, !dbg !52
  %623 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i183, float %551, float %551) #6, !dbg !52
  %.02.i185 = select i1 %.not5.i184, float %623, float %622, !dbg !52
  br label %__nv_tanhf.exit186, !dbg !52

__nv_tanhf.exit186:                               ; preds = %__internal_fmad.exit1.i170, %__internal_fmad.exit3.i175
  %s.1.i174 = phi float [ %607, %__internal_fmad.exit1.i170 ], [ %.02.i185, %__internal_fmad.exit3.i175 ], !dbg !52
  %624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i187 = icmp eq i32 %624, 0, !dbg !52
  %625 = tail call float @llvm.nvvm.fabs.ftz.f(float %552) #6, !dbg !52
  %626 = tail call float @llvm.nvvm.fabs.f(float %552) #6, !dbg !52
  %.01.i188 = select i1 %.not.i187, float %626, float %625, !dbg !52
  %627 = fcmp ult float %.01.i188, 0x3FE3333340000000, !dbg !52
  br i1 %627, label %__internal_fmad.exit3.i194, label %__internal_fmad.exit1.i189, !dbg !52

__internal_fmad.exit1.i189:                       ; preds = %__nv_tanhf.exit186
  %628 = fmul float %.01.i188, 0x4007154760000000, !dbg !52
  %629 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %628) #6, !dbg !52
  %630 = fadd float %629, 1.000000e+00, !dbg !52
  %631 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %630) #7, !dbg !52, !srcloc !28
  %632 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i190 = icmp eq i32 %632, 0, !dbg !52
  %633 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %631, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %634 = tail call float @llvm.nvvm.fma.rn.f(float %631, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i191 = select i1 %.not6.i190, float %634, float %633, !dbg !52
  %635 = fcmp oge float %.01.i188, 0x4022059680000000, !dbg !52
  %s.0.i192 = select i1 %635, float 1.000000e+00, float %.03.i191, !dbg !52
  %636 = bitcast float %s.0.i192 to i32, !dbg !52
  %637 = bitcast float %552 to i32, !dbg !52
  %638 = and i32 %637, -2147483648, !dbg !52
  %639 = or i32 %638, %636, !dbg !52
  %640 = bitcast i32 %639 to float, !dbg !52
  br label %__nv_tanhf.exit205, !dbg !52

__internal_fmad.exit3.i194:                       ; preds = %__nv_tanhf.exit186
  %641 = fmul float %552, %552, !dbg !52
  %642 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i195 = icmp eq i32 %642, 0, !dbg !52
  %643 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %641, float 0xBFAAC795C0000000) #6, !dbg !52
  %644 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %641, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i196 = select i1 %.not1.i195, float %644, float %643, !dbg !52
  %645 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i197 = icmp eq i32 %645, 0, !dbg !52
  %646 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i196, float %641, float 0x3FC10B2820000000) #6, !dbg !52
  %647 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i196, float %641, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i198 = select i1 %.not2.i197, float %647, float %646, !dbg !52
  %648 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i199 = icmp eq i32 %648, 0, !dbg !52
  %649 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i198, float %641, float 0xBFD5553DA0000000) #6, !dbg !52
  %650 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i198, float %641, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i200 = select i1 %.not3.i199, float %650, float %649, !dbg !52
  %651 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i201 = icmp eq i32 %651, 0, !dbg !52
  %652 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i200, float %641, float 0.000000e+00) #6, !dbg !52
  %653 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i200, float %641, float 0.000000e+00) #6, !dbg !52
  %.04.i202 = select i1 %.not4.i201, float %653, float %652, !dbg !52
  %654 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i203 = icmp eq i32 %654, 0, !dbg !52
  %655 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i202, float %552, float %552) #6, !dbg !52
  %656 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i202, float %552, float %552) #6, !dbg !52
  %.02.i204 = select i1 %.not5.i203, float %656, float %655, !dbg !52
  br label %__nv_tanhf.exit205, !dbg !52

__nv_tanhf.exit205:                               ; preds = %__internal_fmad.exit1.i189, %__internal_fmad.exit3.i194
  %s.1.i193 = phi float [ %640, %__internal_fmad.exit1.i189 ], [ %.02.i204, %__internal_fmad.exit3.i194 ], !dbg !52
  %657 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i206 = icmp eq i32 %657, 0, !dbg !52
  %658 = tail call float @llvm.nvvm.fabs.ftz.f(float %553) #6, !dbg !52
  %659 = tail call float @llvm.nvvm.fabs.f(float %553) #6, !dbg !52
  %.01.i207 = select i1 %.not.i206, float %659, float %658, !dbg !52
  %660 = fcmp ult float %.01.i207, 0x3FE3333340000000, !dbg !52
  br i1 %660, label %__internal_fmad.exit3.i213, label %__internal_fmad.exit1.i208, !dbg !52

__internal_fmad.exit1.i208:                       ; preds = %__nv_tanhf.exit205
  %661 = fmul float %.01.i207, 0x4007154760000000, !dbg !52
  %662 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %661) #6, !dbg !52
  %663 = fadd float %662, 1.000000e+00, !dbg !52
  %664 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %663) #7, !dbg !52, !srcloc !28
  %665 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i209 = icmp eq i32 %665, 0, !dbg !52
  %666 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %664, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %667 = tail call float @llvm.nvvm.fma.rn.f(float %664, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i210 = select i1 %.not6.i209, float %667, float %666, !dbg !52
  %668 = fcmp oge float %.01.i207, 0x4022059680000000, !dbg !52
  %s.0.i211 = select i1 %668, float 1.000000e+00, float %.03.i210, !dbg !52
  %669 = bitcast float %s.0.i211 to i32, !dbg !52
  %670 = bitcast float %553 to i32, !dbg !52
  %671 = and i32 %670, -2147483648, !dbg !52
  %672 = or i32 %671, %669, !dbg !52
  %673 = bitcast i32 %672 to float, !dbg !52
  br label %__nv_tanhf.exit224, !dbg !52

__internal_fmad.exit3.i213:                       ; preds = %__nv_tanhf.exit205
  %674 = fmul float %553, %553, !dbg !52
  %675 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i214 = icmp eq i32 %675, 0, !dbg !52
  %676 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %674, float 0xBFAAC795C0000000) #6, !dbg !52
  %677 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %674, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i215 = select i1 %.not1.i214, float %677, float %676, !dbg !52
  %678 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i216 = icmp eq i32 %678, 0, !dbg !52
  %679 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i215, float %674, float 0x3FC10B2820000000) #6, !dbg !52
  %680 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i215, float %674, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i217 = select i1 %.not2.i216, float %680, float %679, !dbg !52
  %681 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i218 = icmp eq i32 %681, 0, !dbg !52
  %682 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i217, float %674, float 0xBFD5553DA0000000) #6, !dbg !52
  %683 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i217, float %674, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i219 = select i1 %.not3.i218, float %683, float %682, !dbg !52
  %684 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i220 = icmp eq i32 %684, 0, !dbg !52
  %685 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i219, float %674, float 0.000000e+00) #6, !dbg !52
  %686 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i219, float %674, float 0.000000e+00) #6, !dbg !52
  %.04.i221 = select i1 %.not4.i220, float %686, float %685, !dbg !52
  %687 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i222 = icmp eq i32 %687, 0, !dbg !52
  %688 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i221, float %553, float %553) #6, !dbg !52
  %689 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i221, float %553, float %553) #6, !dbg !52
  %.02.i223 = select i1 %.not5.i222, float %689, float %688, !dbg !52
  br label %__nv_tanhf.exit224, !dbg !52

__nv_tanhf.exit224:                               ; preds = %__internal_fmad.exit1.i208, %__internal_fmad.exit3.i213
  %s.1.i212 = phi float [ %673, %__internal_fmad.exit1.i208 ], [ %.02.i223, %__internal_fmad.exit3.i213 ], !dbg !52
  %690 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i225 = icmp eq i32 %690, 0, !dbg !52
  %691 = tail call float @llvm.nvvm.fabs.ftz.f(float %554) #6, !dbg !52
  %692 = tail call float @llvm.nvvm.fabs.f(float %554) #6, !dbg !52
  %.01.i226 = select i1 %.not.i225, float %692, float %691, !dbg !52
  %693 = fcmp ult float %.01.i226, 0x3FE3333340000000, !dbg !52
  br i1 %693, label %__internal_fmad.exit3.i232, label %__internal_fmad.exit1.i227, !dbg !52

__internal_fmad.exit1.i227:                       ; preds = %__nv_tanhf.exit224
  %694 = fmul float %.01.i226, 0x4007154760000000, !dbg !52
  %695 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %694) #6, !dbg !52
  %696 = fadd float %695, 1.000000e+00, !dbg !52
  %697 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %696) #7, !dbg !52, !srcloc !28
  %698 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i228 = icmp eq i32 %698, 0, !dbg !52
  %699 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %697, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %700 = tail call float @llvm.nvvm.fma.rn.f(float %697, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i229 = select i1 %.not6.i228, float %700, float %699, !dbg !52
  %701 = fcmp oge float %.01.i226, 0x4022059680000000, !dbg !52
  %s.0.i230 = select i1 %701, float 1.000000e+00, float %.03.i229, !dbg !52
  %702 = bitcast float %s.0.i230 to i32, !dbg !52
  %703 = bitcast float %554 to i32, !dbg !52
  %704 = and i32 %703, -2147483648, !dbg !52
  %705 = or i32 %704, %702, !dbg !52
  %706 = bitcast i32 %705 to float, !dbg !52
  br label %__nv_tanhf.exit243, !dbg !52

__internal_fmad.exit3.i232:                       ; preds = %__nv_tanhf.exit224
  %707 = fmul float %554, %554, !dbg !52
  %708 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i233 = icmp eq i32 %708, 0, !dbg !52
  %709 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %707, float 0xBFAAC795C0000000) #6, !dbg !52
  %710 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %707, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i234 = select i1 %.not1.i233, float %710, float %709, !dbg !52
  %711 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i235 = icmp eq i32 %711, 0, !dbg !52
  %712 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i234, float %707, float 0x3FC10B2820000000) #6, !dbg !52
  %713 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i234, float %707, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i236 = select i1 %.not2.i235, float %713, float %712, !dbg !52
  %714 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i237 = icmp eq i32 %714, 0, !dbg !52
  %715 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i236, float %707, float 0xBFD5553DA0000000) #6, !dbg !52
  %716 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i236, float %707, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i238 = select i1 %.not3.i237, float %716, float %715, !dbg !52
  %717 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i239 = icmp eq i32 %717, 0, !dbg !52
  %718 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i238, float %707, float 0.000000e+00) #6, !dbg !52
  %719 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i238, float %707, float 0.000000e+00) #6, !dbg !52
  %.04.i240 = select i1 %.not4.i239, float %719, float %718, !dbg !52
  %720 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i241 = icmp eq i32 %720, 0, !dbg !52
  %721 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i240, float %554, float %554) #6, !dbg !52
  %722 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i240, float %554, float %554) #6, !dbg !52
  %.02.i242 = select i1 %.not5.i241, float %722, float %721, !dbg !52
  br label %__nv_tanhf.exit243, !dbg !52

__nv_tanhf.exit243:                               ; preds = %__internal_fmad.exit1.i227, %__internal_fmad.exit3.i232
  %s.1.i231 = phi float [ %706, %__internal_fmad.exit1.i227 ], [ %.02.i242, %__internal_fmad.exit3.i232 ], !dbg !52
  %723 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i244 = icmp eq i32 %723, 0, !dbg !52
  %724 = tail call float @llvm.nvvm.fabs.ftz.f(float %555) #6, !dbg !52
  %725 = tail call float @llvm.nvvm.fabs.f(float %555) #6, !dbg !52
  %.01.i245 = select i1 %.not.i244, float %725, float %724, !dbg !52
  %726 = fcmp ult float %.01.i245, 0x3FE3333340000000, !dbg !52
  br i1 %726, label %__internal_fmad.exit3.i251, label %__internal_fmad.exit1.i246, !dbg !52

__internal_fmad.exit1.i246:                       ; preds = %__nv_tanhf.exit243
  %727 = fmul float %.01.i245, 0x4007154760000000, !dbg !52
  %728 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %727) #6, !dbg !52
  %729 = fadd float %728, 1.000000e+00, !dbg !52
  %730 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %729) #7, !dbg !52, !srcloc !28
  %731 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i247 = icmp eq i32 %731, 0, !dbg !52
  %732 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %730, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %733 = tail call float @llvm.nvvm.fma.rn.f(float %730, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i248 = select i1 %.not6.i247, float %733, float %732, !dbg !52
  %734 = fcmp oge float %.01.i245, 0x4022059680000000, !dbg !52
  %s.0.i249 = select i1 %734, float 1.000000e+00, float %.03.i248, !dbg !52
  %735 = bitcast float %s.0.i249 to i32, !dbg !52
  %736 = bitcast float %555 to i32, !dbg !52
  %737 = and i32 %736, -2147483648, !dbg !52
  %738 = or i32 %737, %735, !dbg !52
  %739 = bitcast i32 %738 to float, !dbg !52
  br label %__nv_tanhf.exit262, !dbg !52

__internal_fmad.exit3.i251:                       ; preds = %__nv_tanhf.exit243
  %740 = fmul float %555, %555, !dbg !52
  %741 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i252 = icmp eq i32 %741, 0, !dbg !52
  %742 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %740, float 0xBFAAC795C0000000) #6, !dbg !52
  %743 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %740, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i253 = select i1 %.not1.i252, float %743, float %742, !dbg !52
  %744 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i254 = icmp eq i32 %744, 0, !dbg !52
  %745 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i253, float %740, float 0x3FC10B2820000000) #6, !dbg !52
  %746 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i253, float %740, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i255 = select i1 %.not2.i254, float %746, float %745, !dbg !52
  %747 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i256 = icmp eq i32 %747, 0, !dbg !52
  %748 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i255, float %740, float 0xBFD5553DA0000000) #6, !dbg !52
  %749 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i255, float %740, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i257 = select i1 %.not3.i256, float %749, float %748, !dbg !52
  %750 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i258 = icmp eq i32 %750, 0, !dbg !52
  %751 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i257, float %740, float 0.000000e+00) #6, !dbg !52
  %752 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i257, float %740, float 0.000000e+00) #6, !dbg !52
  %.04.i259 = select i1 %.not4.i258, float %752, float %751, !dbg !52
  %753 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i260 = icmp eq i32 %753, 0, !dbg !52
  %754 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i259, float %555, float %555) #6, !dbg !52
  %755 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i259, float %555, float %555) #6, !dbg !52
  %.02.i261 = select i1 %.not5.i260, float %755, float %754, !dbg !52
  br label %__nv_tanhf.exit262, !dbg !52

__nv_tanhf.exit262:                               ; preds = %__internal_fmad.exit1.i246, %__internal_fmad.exit3.i251
  %s.1.i250 = phi float [ %739, %__internal_fmad.exit1.i246 ], [ %.02.i261, %__internal_fmad.exit3.i251 ], !dbg !52
  %756 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i263 = icmp eq i32 %756, 0, !dbg !52
  %757 = tail call float @llvm.nvvm.fabs.ftz.f(float %556) #6, !dbg !52
  %758 = tail call float @llvm.nvvm.fabs.f(float %556) #6, !dbg !52
  %.01.i264 = select i1 %.not.i263, float %758, float %757, !dbg !52
  %759 = fcmp ult float %.01.i264, 0x3FE3333340000000, !dbg !52
  br i1 %759, label %__internal_fmad.exit3.i270, label %__internal_fmad.exit1.i265, !dbg !52

__internal_fmad.exit1.i265:                       ; preds = %__nv_tanhf.exit262
  %760 = fmul float %.01.i264, 0x4007154760000000, !dbg !52
  %761 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %760) #6, !dbg !52
  %762 = fadd float %761, 1.000000e+00, !dbg !52
  %763 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %762) #7, !dbg !52, !srcloc !28
  %764 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i266 = icmp eq i32 %764, 0, !dbg !52
  %765 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %763, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %766 = tail call float @llvm.nvvm.fma.rn.f(float %763, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i267 = select i1 %.not6.i266, float %766, float %765, !dbg !52
  %767 = fcmp oge float %.01.i264, 0x4022059680000000, !dbg !52
  %s.0.i268 = select i1 %767, float 1.000000e+00, float %.03.i267, !dbg !52
  %768 = bitcast float %s.0.i268 to i32, !dbg !52
  %769 = bitcast float %556 to i32, !dbg !52
  %770 = and i32 %769, -2147483648, !dbg !52
  %771 = or i32 %770, %768, !dbg !52
  %772 = bitcast i32 %771 to float, !dbg !52
  br label %__nv_tanhf.exit281, !dbg !52

__internal_fmad.exit3.i270:                       ; preds = %__nv_tanhf.exit262
  %773 = fmul float %556, %556, !dbg !52
  %774 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i271 = icmp eq i32 %774, 0, !dbg !52
  %775 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %773, float 0xBFAAC795C0000000) #6, !dbg !52
  %776 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %773, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i272 = select i1 %.not1.i271, float %776, float %775, !dbg !52
  %777 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i273 = icmp eq i32 %777, 0, !dbg !52
  %778 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i272, float %773, float 0x3FC10B2820000000) #6, !dbg !52
  %779 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i272, float %773, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i274 = select i1 %.not2.i273, float %779, float %778, !dbg !52
  %780 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i275 = icmp eq i32 %780, 0, !dbg !52
  %781 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i274, float %773, float 0xBFD5553DA0000000) #6, !dbg !52
  %782 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i274, float %773, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i276 = select i1 %.not3.i275, float %782, float %781, !dbg !52
  %783 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i277 = icmp eq i32 %783, 0, !dbg !52
  %784 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i276, float %773, float 0.000000e+00) #6, !dbg !52
  %785 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i276, float %773, float 0.000000e+00) #6, !dbg !52
  %.04.i278 = select i1 %.not4.i277, float %785, float %784, !dbg !52
  %786 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i279 = icmp eq i32 %786, 0, !dbg !52
  %787 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i278, float %556, float %556) #6, !dbg !52
  %788 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i278, float %556, float %556) #6, !dbg !52
  %.02.i280 = select i1 %.not5.i279, float %788, float %787, !dbg !52
  br label %__nv_tanhf.exit281, !dbg !52

__nv_tanhf.exit281:                               ; preds = %__internal_fmad.exit1.i265, %__internal_fmad.exit3.i270
  %s.1.i269 = phi float [ %772, %__internal_fmad.exit1.i265 ], [ %.02.i280, %__internal_fmad.exit3.i270 ], !dbg !52
  %789 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i282 = icmp eq i32 %789, 0, !dbg !52
  %790 = tail call float @llvm.nvvm.fabs.ftz.f(float %557) #6, !dbg !52
  %791 = tail call float @llvm.nvvm.fabs.f(float %557) #6, !dbg !52
  %.01.i283 = select i1 %.not.i282, float %791, float %790, !dbg !52
  %792 = fcmp ult float %.01.i283, 0x3FE3333340000000, !dbg !52
  br i1 %792, label %__internal_fmad.exit3.i289, label %__internal_fmad.exit1.i284, !dbg !52

__internal_fmad.exit1.i284:                       ; preds = %__nv_tanhf.exit281
  %793 = fmul float %.01.i283, 0x4007154760000000, !dbg !52
  %794 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %793) #6, !dbg !52
  %795 = fadd float %794, 1.000000e+00, !dbg !52
  %796 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %795) #7, !dbg !52, !srcloc !28
  %797 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i285 = icmp eq i32 %797, 0, !dbg !52
  %798 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %796, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %799 = tail call float @llvm.nvvm.fma.rn.f(float %796, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i286 = select i1 %.not6.i285, float %799, float %798, !dbg !52
  %800 = fcmp oge float %.01.i283, 0x4022059680000000, !dbg !52
  %s.0.i287 = select i1 %800, float 1.000000e+00, float %.03.i286, !dbg !52
  %801 = bitcast float %s.0.i287 to i32, !dbg !52
  %802 = bitcast float %557 to i32, !dbg !52
  %803 = and i32 %802, -2147483648, !dbg !52
  %804 = or i32 %803, %801, !dbg !52
  %805 = bitcast i32 %804 to float, !dbg !52
  br label %__nv_tanhf.exit300, !dbg !52

__internal_fmad.exit3.i289:                       ; preds = %__nv_tanhf.exit281
  %806 = fmul float %557, %557, !dbg !52
  %807 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i290 = icmp eq i32 %807, 0, !dbg !52
  %808 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %806, float 0xBFAAC795C0000000) #6, !dbg !52
  %809 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %806, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i291 = select i1 %.not1.i290, float %809, float %808, !dbg !52
  %810 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i292 = icmp eq i32 %810, 0, !dbg !52
  %811 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i291, float %806, float 0x3FC10B2820000000) #6, !dbg !52
  %812 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i291, float %806, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i293 = select i1 %.not2.i292, float %812, float %811, !dbg !52
  %813 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i294 = icmp eq i32 %813, 0, !dbg !52
  %814 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i293, float %806, float 0xBFD5553DA0000000) #6, !dbg !52
  %815 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i293, float %806, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i295 = select i1 %.not3.i294, float %815, float %814, !dbg !52
  %816 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i296 = icmp eq i32 %816, 0, !dbg !52
  %817 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i295, float %806, float 0.000000e+00) #6, !dbg !52
  %818 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i295, float %806, float 0.000000e+00) #6, !dbg !52
  %.04.i297 = select i1 %.not4.i296, float %818, float %817, !dbg !52
  %819 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i298 = icmp eq i32 %819, 0, !dbg !52
  %820 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i297, float %557, float %557) #6, !dbg !52
  %821 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i297, float %557, float %557) #6, !dbg !52
  %.02.i299 = select i1 %.not5.i298, float %821, float %820, !dbg !52
  br label %__nv_tanhf.exit300, !dbg !52

__nv_tanhf.exit300:                               ; preds = %__internal_fmad.exit1.i284, %__internal_fmad.exit3.i289
  %s.1.i288 = phi float [ %805, %__internal_fmad.exit1.i284 ], [ %.02.i299, %__internal_fmad.exit3.i289 ], !dbg !52
  %822 = fmul float %s.1.i155, 5.000000e+01, !dbg !53
  %823 = fmul float %s.1.i174, 5.000000e+01, !dbg !53
  %824 = fmul float %s.1.i193, 5.000000e+01, !dbg !53
  %825 = fmul float %s.1.i212, 5.000000e+01, !dbg !53
  %826 = fmul float %s.1.i231, 5.000000e+01, !dbg !53
  %827 = fmul float %s.1.i250, 5.000000e+01, !dbg !53
  %828 = fmul float %s.1.i269, 5.000000e+01, !dbg !53
  %829 = fmul float %s.1.i288, 5.000000e+01, !dbg !53
  %830 = fadd float %386, %822, !dbg !54
  %831 = fadd float %387, %823, !dbg !54
  %832 = fadd float %388, %824, !dbg !54
  %833 = fadd float %389, %825, !dbg !54
  %834 = fadd float %390, %826, !dbg !54
  %835 = fadd float %391, %827, !dbg !54
  %836 = fadd float %392, %828, !dbg !54
  %837 = fadd float %393, %829, !dbg !54
  %838 = fsub float %830, %25, !dbg !55
  %839 = fsub float %831, %25, !dbg !55
  %840 = fsub float %832, %25, !dbg !55
  %841 = fsub float %833, %25, !dbg !55
  %842 = fsub float %834, %25, !dbg !55
  %843 = fsub float %835, %25, !dbg !55
  %844 = fsub float %836, %25, !dbg !55
  %845 = fsub float %837, %25, !dbg !55
  %846 = fmul float %838, 0x3FF7154760000000, !dbg !56
  %847 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %846) #6, !dbg !56
  %848 = fmul float %839, 0x3FF7154760000000, !dbg !56
  %849 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %848) #6, !dbg !56
  %850 = fmul float %840, 0x3FF7154760000000, !dbg !56
  %851 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %850) #6, !dbg !56
  %852 = fmul float %841, 0x3FF7154760000000, !dbg !56
  %853 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %852) #6, !dbg !56
  %854 = fmul float %842, 0x3FF7154760000000, !dbg !56
  %855 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %854) #6, !dbg !56
  %856 = fmul float %843, 0x3FF7154760000000, !dbg !56
  %857 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %856) #6, !dbg !56
  %858 = fmul float %844, 0x3FF7154760000000, !dbg !56
  %859 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %858) #6, !dbg !56
  %860 = fmul float %845, 0x3FF7154760000000, !dbg !56
  %861 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %860) #6, !dbg !56
  %862 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %847, float %35) #6, !dbg !57
  %863 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %849, float %35) #6, !dbg !57
  %864 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %851, float %35) #6, !dbg !57
  %865 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %853, float %35) #6, !dbg !57
  %866 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %855, float %35) #6, !dbg !57
  %867 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %857, float %35) #6, !dbg !57
  %868 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %859, float %35) #6, !dbg !57
  %869 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %861, float %35) #6, !dbg !57
  %870 = fmul float %513, %862, !dbg !58
  %871 = fmul float %514, %863, !dbg !58
  %872 = fmul float %515, %864, !dbg !58
  %873 = fmul float %516, %865, !dbg !58
  %874 = fmul float %517, %866, !dbg !58
  %875 = fmul float %518, %867, !dbg !58
  %876 = fmul float %519, %868, !dbg !58
  %877 = fmul float %520, %869, !dbg !58
  %878 = fmul float %499, %862, !dbg !59
  %879 = fmul float %499, %863, !dbg !59
  %880 = fmul float %499, %864, !dbg !59
  %881 = fmul float %499, %865, !dbg !59
  %882 = fmul float %499, %866, !dbg !59
  %883 = fmul float %499, %867, !dbg !59
  %884 = fmul float %499, %868, !dbg !59
  %885 = fmul float %499, %869, !dbg !59
  %886 = fsub float %870, %878, !dbg !60
  %887 = fsub float %871, %879, !dbg !60
  %888 = fsub float %872, %880, !dbg !60
  %889 = fsub float %873, %881, !dbg !60
  %890 = fsub float %874, %882, !dbg !60
  %891 = fsub float %875, %883, !dbg !60
  %892 = fsub float %876, %884, !dbg !60
  %893 = fsub float %877, %885, !dbg !60
  %894 = fmul float %886, 5.000000e+01, !dbg !61
  %895 = fmul float %887, 5.000000e+01, !dbg !61
  %896 = fmul float %888, 5.000000e+01, !dbg !61
  %897 = fmul float %889, 5.000000e+01, !dbg !61
  %898 = fmul float %890, 5.000000e+01, !dbg !61
  %899 = fmul float %891, 5.000000e+01, !dbg !61
  %900 = fmul float %892, 5.000000e+01, !dbg !61
  %901 = fmul float %893, 5.000000e+01, !dbg !61
  %902 = fmul float %s.1.i155, %s.1.i155, !dbg !62
  %903 = fmul float %s.1.i174, %s.1.i174, !dbg !62
  %904 = fmul float %s.1.i193, %s.1.i193, !dbg !62
  %905 = fmul float %s.1.i212, %s.1.i212, !dbg !62
  %906 = fmul float %s.1.i231, %s.1.i231, !dbg !62
  %907 = fmul float %s.1.i250, %s.1.i250, !dbg !62
  %908 = fmul float %s.1.i269, %s.1.i269, !dbg !62
  %909 = fmul float %s.1.i288, %s.1.i288, !dbg !62
  %910 = fsub float 1.000000e+00, %902, !dbg !63
  %911 = fsub float 1.000000e+00, %903, !dbg !63
  %912 = fsub float 1.000000e+00, %904, !dbg !63
  %913 = fsub float 1.000000e+00, %905, !dbg !63
  %914 = fsub float 1.000000e+00, %906, !dbg !63
  %915 = fsub float 1.000000e+00, %907, !dbg !63
  %916 = fsub float 1.000000e+00, %908, !dbg !63
  %917 = fsub float 1.000000e+00, %909, !dbg !63
  %918 = fmul float %910, %894, !dbg !64
  %919 = fmul float %911, %895, !dbg !64
  %920 = fmul float %912, %896, !dbg !64
  %921 = fmul float %913, %897, !dbg !64
  %922 = fmul float %914, %898, !dbg !64
  %923 = fmul float %915, %899, !dbg !64
  %924 = fmul float %916, %900, !dbg !64
  %925 = fmul float %917, %901, !dbg !64
  %926 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %918, float 5.000000e+01) #6, !dbg !65
  %927 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %919, float 5.000000e+01) #6, !dbg !65
  %928 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %920, float 5.000000e+01) #6, !dbg !65
  %929 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %921, float 5.000000e+01) #6, !dbg !65
  %930 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %922, float 5.000000e+01) #6, !dbg !65
  %931 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %923, float 5.000000e+01) #6, !dbg !65
  %932 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %924, float 5.000000e+01) #6, !dbg !65
  %933 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %925, float 5.000000e+01) #6, !dbg !65
  %934 = fmul float %926, 6.250000e-02, !dbg !66
  %935 = fmul float %927, 6.250000e-02, !dbg !66
  %936 = fmul float %928, 6.250000e-02, !dbg !66
  %937 = fmul float %929, 6.250000e-02, !dbg !66
  %938 = fmul float %930, 6.250000e-02, !dbg !66
  %939 = fmul float %931, 6.250000e-02, !dbg !66
  %940 = fmul float %932, 6.250000e-02, !dbg !66
  %941 = fmul float %933, 6.250000e-02, !dbg !66
  %942 = getelementptr i16, ptr addrspace(1) %4, i64 %45, !dbg !67
  %943 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %934) #6, !dbg !68
  %944 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %935) #6, !dbg !68
  %945 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %936) #6, !dbg !68
  %946 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %937) #6, !dbg !68
  %947 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %938) #6, !dbg !68
  %948 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %939) #6, !dbg !68
  %949 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %940) #6, !dbg !68
  %950 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %941) #6, !dbg !68
  %951 = insertelement <2 x i16> undef, i16 %943, i64 0, !dbg !68
  %952 = insertelement <2 x i16> %951, i16 %944, i64 1, !dbg !68
  %953 = bitcast <2 x i16> %952 to i32, !dbg !68
  %954 = insertelement <2 x i16> undef, i16 %945, i64 0, !dbg !68
  %955 = insertelement <2 x i16> %954, i16 %946, i64 1, !dbg !68
  %956 = bitcast <2 x i16> %955 to i32, !dbg !68
  %957 = insertelement <2 x i16> undef, i16 %947, i64 0, !dbg !68
  %958 = insertelement <2 x i16> %957, i16 %948, i64 1, !dbg !68
  %959 = bitcast <2 x i16> %958 to i32, !dbg !68
  %960 = insertelement <2 x i16> undef, i16 %949, i64 0, !dbg !68
  %961 = insertelement <2 x i16> %960, i16 %950, i64 1, !dbg !68
  %962 = bitcast <2 x i16> %961 to i32, !dbg !68
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %953, i32 %956, i32 %959, i32 %962, ptr addrspace(1) %942, i1 true) #6, !dbg !68
  ret void, !dbg !69
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: alwaysinline nounwind
define float @__nv_tanhf(float %a) local_unnamed_addr #3 {
__nv_fabsf.exit:
  %0 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not = icmp eq i32 %0, 0
  %1 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #6
  %2 = tail call float @llvm.nvvm.fabs.f(float %a) #6
  %.01 = select i1 %.not, float %2, float %1
  %3 = fcmp ult float %.01, 0x3FE3333340000000
  br i1 %3, label %__internal_fmad.exit3, label %__internal_fmad.exit1

__internal_fmad.exit1:                            ; preds = %__nv_fabsf.exit
  %4 = fmul float %.01, 0x4007154760000000
  %5 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4) #6
  %6 = fadd float %5, 1.000000e+00
  %7 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6) #7, !srcloc !28
  %8 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not6 = icmp eq i32 %8, 0
  %9 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7, float -2.000000e+00, float 1.000000e+00) #6
  %10 = tail call float @llvm.nvvm.fma.rn.f(float %7, float -2.000000e+00, float 1.000000e+00) #6
  %.03 = select i1 %.not6, float %10, float %9
  %11 = fcmp oge float %.01, 0x4022059680000000
  %s.0 = select i1 %11, float 1.000000e+00, float %.03
  %12 = bitcast float %s.0 to i32
  %13 = bitcast float %a to i32
  %14 = and i32 %13, -2147483648
  %15 = or i32 %14, %12
  %16 = bitcast i32 %15 to float
  br label %33

__internal_fmad.exit3:                            ; preds = %__nv_fabsf.exit
  %17 = fmul float %a, %a
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not1 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #6
  %20 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #6
  %.06 = select i1 %.not1, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not2 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06, float %17, float 0x3FC10B2820000000) #6
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.06, float %17, float 0x3FC10B2820000000) #6
  %.05 = select i1 %.not2, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not3 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %17, float 0xBFD5553DA0000000) #6
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %17, float 0xBFD5553DA0000000) #6
  %.0 = select i1 %.not3, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not4 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0, float %17, float 0.000000e+00) #6
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.0, float %17, float 0.000000e+00) #6
  %.04 = select i1 %.not4, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not5 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04, float %a, float %a) #6
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.04, float %a, float %a) #6
  %.02 = select i1 %.not5, float %32, float %31
  br label %33

33:                                               ; preds = %__internal_fmad.exit3, %__internal_fmad.exit1
  %s.1 = phi float [ %16, %__internal_fmad.exit1 ], [ %.02, %__internal_fmad.exit3 ]
  ret float %s.1
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #6 = { nounwind }
attributes #7 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "ctjdeux2xot4m7bwjmdachx5g74cwsbqfks37m57dnj7wxjf44kl.py", directory: "/tmp/torchinductor_zeus/tj")
!4 = !{ptr @triton__0d1d2d3d4d5de6de, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2d3d4d5de6de, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2d3d4d5de6de", linkageName: "triton__0d1d2d3d4d5de6de", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 33, scope: !7)
!11 = !DILocation(line: 21, column: 28, scope: !7)
!12 = !DILocation(line: 26, column: 18, scope: !7)
!13 = !DILocation(line: 27, column: 31, scope: !7)
!14 = !DILocation(line: 27, column: 36, scope: !7)
!15 = !DILocation(line: 28, column: 31, scope: !7)
!16 = !DILocation(line: 28, column: 36, scope: !7)
!17 = !DILocation(line: 34, column: 45, scope: !7)
!18 = !DILocation(line: 34, column: 40, scope: !7)
!19 = !DILocation(line: 34, column: 34, scope: !7)
!20 = !DILocation(line: 34, column: 51, scope: !7)
!21 = !DILocation(line: 34, column: 102, scope: !7)
!22 = !DILocation(line: 35, column: 34, scope: !7)
!23 = !DILocation(line: 35, column: 51, scope: !7)
!24 = !DILocation(line: 35, column: 102, scope: !7)
!25 = !DILocation(line: 38, column: 22, scope: !7)
!26 = !DILocation(line: 40, column: 22, scope: !7)
!27 = !DILocation(line: 41, column: 28, scope: !7)
!28 = !{i32 21046}
!29 = !DILocation(line: 42, column: 22, scope: !7)
!30 = !DILocation(line: 45, column: 24, scope: !7)
!31 = !DILocation(line: 51, column: 39, scope: !7)
!32 = !DILocation(line: 52, column: 23, scope: !7)
!33 = !DILocation(line: 54, column: 24, scope: !7)
!34 = !DILocation(line: 55, column: 23, scope: !7)
!35 = !DILocation(line: 56, column: 24, scope: !7)
!36 = !DILocation(line: 57, column: 23, scope: !7)
!37 = !DILocation(line: 59, column: 25, scope: !7)
!38 = !DILocation(line: 233, column: 15, scope: !39, inlinedAt: !42)
!39 = distinct !DILexicalBlockFile(scope: !41, file: !40, discriminator: 0)
!40 = !DIFile(filename: "standard.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/triton/language")
!41 = distinct !DILexicalBlockFile(scope: !7, file: !40, discriminator: 0)
!42 = !DILocation(line: 243, column: 36, scope: !39, inlinedAt: !43)
!43 = !DILocation(line: 61, column: 27, scope: !39)
!44 = !DILocation(line: 243, column: 36, scope: !41, inlinedAt: !45)
!45 = !DILocation(line: 61, column: 27, scope: !41)
!46 = !DILocation(line: 66, column: 52, scope: !7)
!47 = !DILocation(line: 66, column: 104, scope: !7)
!48 = !DILocation(line: 67, column: 52, scope: !7)
!49 = !DILocation(line: 67, column: 104, scope: !7)
!50 = !DILocation(line: 70, column: 24, scope: !7)
!51 = !DILocation(line: 72, column: 24, scope: !7)
!52 = !DILocation(line: 73, column: 29, scope: !7)
!53 = !DILocation(line: 74, column: 24, scope: !7)
!54 = !DILocation(line: 84, column: 24, scope: !7)
!55 = !DILocation(line: 86, column: 24, scope: !7)
!56 = !DILocation(line: 87, column: 23, scope: !7)
!57 = !DILocation(line: 88, column: 24, scope: !7)
!58 = !DILocation(line: 89, column: 24, scope: !7)
!59 = !DILocation(line: 90, column: 24, scope: !7)
!60 = !DILocation(line: 91, column: 24, scope: !7)
!61 = !DILocation(line: 93, column: 24, scope: !7)
!62 = !DILocation(line: 96, column: 24, scope: !7)
!63 = !DILocation(line: 97, column: 24, scope: !7)
!64 = !DILocation(line: 98, column: 24, scope: !7)
!65 = !DILocation(line: 100, column: 24, scope: !7)
!66 = !DILocation(line: 101, column: 24, scope: !7)
!67 = !DILocation(line: 102, column: 29, scope: !7)
!68 = !DILocation(line: 102, column: 53, scope: !7)
!69 = !DILocation(line: 62, column: 4, scope: !7)
