; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8]
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2de3de(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = lshr i32 %5, 5, !dbg !10
  %urem = shl i32 %5, 3, !dbg !10
  %7 = and i32 %urem, 2040, !dbg !10
  %8 = or i32 %7, 1, !dbg !10
  %9 = or i32 %7, 2, !dbg !10
  %10 = or i32 %7, 3, !dbg !10
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #6, !dbg !11
  %12 = srem i32 %11, 8192, !dbg !12
  %13 = shl i32 %11, 13, !dbg !13
  %14 = sub nsw i32 %8, %12
  %15 = sub nsw i32 %9, %12
  %16 = sub nsw i32 %10, %12
  %17 = insertelement <4 x i32> poison, i32 %7, i64 0, !dbg !10
  %18 = shufflevector <4 x i32> %17, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !10
  %19 = or <4 x i32> %18, <i32 7, i32 6, i32 5, i32 4>, !dbg !10
  %20 = insertelement <4 x i32> poison, i32 %12, i64 0
  %21 = shufflevector <4 x i32> %20, <4 x i32> poison, <4 x i32> zeroinitializer
  %22 = sub nsw <4 x i32> %19, %21
  %invariant.op = sub nsw i32 0, %14, !dbg !14
  %invariant.op498 = sub nsw i32 0, %15, !dbg !14
  %invariant.op499 = sub nsw i32 0, %16, !dbg !14
  %23 = sub nsw <4 x i32> zeroinitializer, %22, !dbg !14
  %24 = insertelement <2 x i32> <i32 poison, i32 0>, i32 %invariant.op, i64 0, !dbg !15
  br label %25, !dbg !14

25:                                               ; preds = %4, %__nv_tanhf.exit466
  %26 = phi float [ 0xFFF0000000000000, %4 ], [ %374, %__nv_tanhf.exit466 ]
  %27 = phi float [ 0xFFF0000000000000, %4 ], [ %375, %__nv_tanhf.exit466 ]
  %28 = phi i32 [ 0, %4 ], [ %377, %__nv_tanhf.exit466 ]
  %29 = phi <2 x float> [ <float 0xFFF0000000000000, float 0xFFF0000000000000>, %4 ], [ %373, %__nv_tanhf.exit466 ]
  %30 = phi <4 x float> [ <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, %4 ], [ %376, %__nv_tanhf.exit466 ]
  %31 = or i32 %28, %7, !dbg !16
  %32 = add i32 %31, %13, !dbg !17
  %33 = sext i32 %32 to i64, !dbg !18
  %34 = getelementptr i16, ptr addrspace(1) %0, i64 %33, !dbg !18
  %35 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %34, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !19
  %36 = extractvalue { i32, i32, i32, i32 } %35, 0, !dbg !19
  %37 = extractvalue { i32, i32, i32, i32 } %35, 1, !dbg !19
  %38 = extractvalue { i32, i32, i32, i32 } %35, 2, !dbg !19
  %39 = extractvalue { i32, i32, i32, i32 } %35, 3, !dbg !19
  %40 = trunc i32 %36 to i16, !dbg !19
  %extelt.offset10 = lshr i32 %36, 16, !dbg !19
  %41 = trunc i32 %extelt.offset10 to i16, !dbg !19
  %42 = trunc i32 %37 to i16, !dbg !19
  %extelt.offset11 = lshr i32 %37, 16, !dbg !19
  %43 = trunc i32 %extelt.offset11 to i16, !dbg !19
  %44 = trunc i32 %38 to i16, !dbg !19
  %extelt.offset12 = lshr i32 %38, 16, !dbg !19
  %45 = trunc i32 %extelt.offset12 to i16, !dbg !19
  %46 = trunc i32 %39 to i16, !dbg !19
  %extelt.offset13 = lshr i32 %39, 16, !dbg !19
  %47 = trunc i32 %extelt.offset13 to i16, !dbg !19
  %48 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %40) #6, !dbg !20
  %49 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %41) #6, !dbg !20
  %50 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %42) #6, !dbg !20
  %51 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %43) #6, !dbg !20
  %52 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %44) #6, !dbg !20
  %53 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %45) #6, !dbg !20
  %54 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %46) #6, !dbg !20
  %55 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %47) #6, !dbg !20
  %56 = fmul float %48, 6.250000e-02, !dbg !21
  %57 = fmul float %49, 6.250000e-02, !dbg !21
  %58 = fmul float %50, 6.250000e-02, !dbg !21
  %59 = fmul float %51, 6.250000e-02, !dbg !21
  %60 = fmul float %52, 6.250000e-02, !dbg !21
  %61 = fmul float %53, 6.250000e-02, !dbg !21
  %62 = fmul float %54, 6.250000e-02, !dbg !21
  %63 = fmul float %55, 6.250000e-02, !dbg !21
  %64 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %56, float 5.000000e+01) #6, !dbg !22
  %65 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %57, float 5.000000e+01) #6, !dbg !22
  %66 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %58, float 5.000000e+01) #6, !dbg !22
  %67 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %59, float 5.000000e+01) #6, !dbg !22
  %68 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %60, float 5.000000e+01) #6, !dbg !22
  %69 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %61, float 5.000000e+01) #6, !dbg !22
  %70 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %62, float 5.000000e+01) #6, !dbg !22
  %71 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %63, float 5.000000e+01) #6, !dbg !22
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i315 = icmp eq i32 %72, 0, !dbg !23
  %73 = tail call float @llvm.nvvm.fabs.ftz.f(float %64) #6, !dbg !23
  %74 = tail call float @llvm.nvvm.fabs.f(float %64) #6, !dbg !23
  %.01.i316 = select i1 %.not.i315, float %74, float %73, !dbg !23
  %75 = fcmp ult float %.01.i316, 0x3FE3333340000000, !dbg !23
  br i1 %75, label %__internal_fmad.exit3.i322, label %__internal_fmad.exit1.i317, !dbg !23

__internal_fmad.exit1.i317:                       ; preds = %25
  %76 = fmul float %.01.i316, 0x4007154760000000, !dbg !23
  %77 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %76) #6, !dbg !23
  %78 = fadd float %77, 1.000000e+00, !dbg !23
  %79 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %78) #7, !dbg !23, !srcloc !24
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i318 = icmp eq i32 %80, 0, !dbg !23
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %79, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %79, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i319 = select i1 %.not6.i318, float %82, float %81, !dbg !23
  %83 = fcmp oge float %.01.i316, 0x4022059680000000, !dbg !23
  %s.0.i320 = select i1 %83, float 1.000000e+00, float %.03.i319, !dbg !23
  %84 = bitcast float %s.0.i320 to i32, !dbg !23
  %85 = bitcast float %64 to i32, !dbg !23
  %86 = and i32 %85, -2147483648, !dbg !23
  %87 = or i32 %86, %84, !dbg !23
  %88 = bitcast i32 %87 to float, !dbg !23
  br label %__nv_tanhf.exit333, !dbg !23

__internal_fmad.exit3.i322:                       ; preds = %25
  %89 = fmul float %64, %64, !dbg !23
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i323 = icmp eq i32 %90, 0, !dbg !23
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %89, float 0xBFAAC795C0000000) #6, !dbg !23
  %92 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %89, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i324 = select i1 %.not1.i323, float %92, float %91, !dbg !23
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i325 = icmp eq i32 %93, 0, !dbg !23
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i324, float %89, float 0x3FC10B2820000000) #6, !dbg !23
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i324, float %89, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i326 = select i1 %.not2.i325, float %95, float %94, !dbg !23
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i327 = icmp eq i32 %96, 0, !dbg !23
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i326, float %89, float 0xBFD5553DA0000000) #6, !dbg !23
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i326, float %89, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i328 = select i1 %.not3.i327, float %98, float %97, !dbg !23
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i329 = icmp eq i32 %99, 0, !dbg !23
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i328, float %89, float 0.000000e+00) #6, !dbg !23
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i328, float %89, float 0.000000e+00) #6, !dbg !23
  %.04.i330 = select i1 %.not4.i329, float %101, float %100, !dbg !23
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i331 = icmp eq i32 %102, 0, !dbg !23
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i330, float %64, float %64) #6, !dbg !23
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i330, float %64, float %64) #6, !dbg !23
  %.02.i332 = select i1 %.not5.i331, float %104, float %103, !dbg !23
  br label %__nv_tanhf.exit333, !dbg !23

__nv_tanhf.exit333:                               ; preds = %__internal_fmad.exit1.i317, %__internal_fmad.exit3.i322
  %s.1.i321 = phi float [ %88, %__internal_fmad.exit1.i317 ], [ %.02.i332, %__internal_fmad.exit3.i322 ], !dbg !23
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i334 = icmp eq i32 %105, 0, !dbg !23
  %106 = tail call float @llvm.nvvm.fabs.ftz.f(float %65) #6, !dbg !23
  %107 = tail call float @llvm.nvvm.fabs.f(float %65) #6, !dbg !23
  %.01.i335 = select i1 %.not.i334, float %107, float %106, !dbg !23
  %108 = fcmp ult float %.01.i335, 0x3FE3333340000000, !dbg !23
  br i1 %108, label %__internal_fmad.exit3.i341, label %__internal_fmad.exit1.i336, !dbg !23

__internal_fmad.exit1.i336:                       ; preds = %__nv_tanhf.exit333
  %109 = fmul float %.01.i335, 0x4007154760000000, !dbg !23
  %110 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %109) #6, !dbg !23
  %111 = fadd float %110, 1.000000e+00, !dbg !23
  %112 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %111) #7, !dbg !23, !srcloc !24
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i337 = icmp eq i32 %113, 0, !dbg !23
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %112, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %112, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i338 = select i1 %.not6.i337, float %115, float %114, !dbg !23
  %116 = fcmp oge float %.01.i335, 0x4022059680000000, !dbg !23
  %s.0.i339 = select i1 %116, float 1.000000e+00, float %.03.i338, !dbg !23
  %117 = bitcast float %s.0.i339 to i32, !dbg !23
  %118 = bitcast float %65 to i32, !dbg !23
  %119 = and i32 %118, -2147483648, !dbg !23
  %120 = or i32 %119, %117, !dbg !23
  %121 = bitcast i32 %120 to float, !dbg !23
  br label %__nv_tanhf.exit352, !dbg !23

__internal_fmad.exit3.i341:                       ; preds = %__nv_tanhf.exit333
  %122 = fmul float %65, %65, !dbg !23
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i342 = icmp eq i32 %123, 0, !dbg !23
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %122, float 0xBFAAC795C0000000) #6, !dbg !23
  %125 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %122, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i343 = select i1 %.not1.i342, float %125, float %124, !dbg !23
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i344 = icmp eq i32 %126, 0, !dbg !23
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i343, float %122, float 0x3FC10B2820000000) #6, !dbg !23
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i343, float %122, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i345 = select i1 %.not2.i344, float %128, float %127, !dbg !23
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i346 = icmp eq i32 %129, 0, !dbg !23
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i345, float %122, float 0xBFD5553DA0000000) #6, !dbg !23
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i345, float %122, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i347 = select i1 %.not3.i346, float %131, float %130, !dbg !23
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i348 = icmp eq i32 %132, 0, !dbg !23
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i347, float %122, float 0.000000e+00) #6, !dbg !23
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i347, float %122, float 0.000000e+00) #6, !dbg !23
  %.04.i349 = select i1 %.not4.i348, float %134, float %133, !dbg !23
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i350 = icmp eq i32 %135, 0, !dbg !23
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i349, float %65, float %65) #6, !dbg !23
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i349, float %65, float %65) #6, !dbg !23
  %.02.i351 = select i1 %.not5.i350, float %137, float %136, !dbg !23
  br label %__nv_tanhf.exit352, !dbg !23

__nv_tanhf.exit352:                               ; preds = %__internal_fmad.exit1.i336, %__internal_fmad.exit3.i341
  %s.1.i340 = phi float [ %121, %__internal_fmad.exit1.i336 ], [ %.02.i351, %__internal_fmad.exit3.i341 ], !dbg !23
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i353 = icmp eq i32 %138, 0, !dbg !23
  %139 = tail call float @llvm.nvvm.fabs.ftz.f(float %66) #6, !dbg !23
  %140 = tail call float @llvm.nvvm.fabs.f(float %66) #6, !dbg !23
  %.01.i354 = select i1 %.not.i353, float %140, float %139, !dbg !23
  %141 = fcmp ult float %.01.i354, 0x3FE3333340000000, !dbg !23
  br i1 %141, label %__internal_fmad.exit3.i360, label %__internal_fmad.exit1.i355, !dbg !23

__internal_fmad.exit1.i355:                       ; preds = %__nv_tanhf.exit352
  %142 = fmul float %.01.i354, 0x4007154760000000, !dbg !23
  %143 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %142) #6, !dbg !23
  %144 = fadd float %143, 1.000000e+00, !dbg !23
  %145 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %144) #7, !dbg !23, !srcloc !24
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i356 = icmp eq i32 %146, 0, !dbg !23
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %145, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %145, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i357 = select i1 %.not6.i356, float %148, float %147, !dbg !23
  %149 = fcmp oge float %.01.i354, 0x4022059680000000, !dbg !23
  %s.0.i358 = select i1 %149, float 1.000000e+00, float %.03.i357, !dbg !23
  %150 = bitcast float %s.0.i358 to i32, !dbg !23
  %151 = bitcast float %66 to i32, !dbg !23
  %152 = and i32 %151, -2147483648, !dbg !23
  %153 = or i32 %152, %150, !dbg !23
  %154 = bitcast i32 %153 to float, !dbg !23
  br label %__nv_tanhf.exit371, !dbg !23

__internal_fmad.exit3.i360:                       ; preds = %__nv_tanhf.exit352
  %155 = fmul float %66, %66, !dbg !23
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i361 = icmp eq i32 %156, 0, !dbg !23
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %155, float 0xBFAAC795C0000000) #6, !dbg !23
  %158 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %155, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i362 = select i1 %.not1.i361, float %158, float %157, !dbg !23
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i363 = icmp eq i32 %159, 0, !dbg !23
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i362, float %155, float 0x3FC10B2820000000) #6, !dbg !23
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i362, float %155, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i364 = select i1 %.not2.i363, float %161, float %160, !dbg !23
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i365 = icmp eq i32 %162, 0, !dbg !23
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i364, float %155, float 0xBFD5553DA0000000) #6, !dbg !23
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i364, float %155, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i366 = select i1 %.not3.i365, float %164, float %163, !dbg !23
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i367 = icmp eq i32 %165, 0, !dbg !23
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i366, float %155, float 0.000000e+00) #6, !dbg !23
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i366, float %155, float 0.000000e+00) #6, !dbg !23
  %.04.i368 = select i1 %.not4.i367, float %167, float %166, !dbg !23
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i369 = icmp eq i32 %168, 0, !dbg !23
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i368, float %66, float %66) #6, !dbg !23
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i368, float %66, float %66) #6, !dbg !23
  %.02.i370 = select i1 %.not5.i369, float %170, float %169, !dbg !23
  br label %__nv_tanhf.exit371, !dbg !23

__nv_tanhf.exit371:                               ; preds = %__internal_fmad.exit1.i355, %__internal_fmad.exit3.i360
  %s.1.i359 = phi float [ %154, %__internal_fmad.exit1.i355 ], [ %.02.i370, %__internal_fmad.exit3.i360 ], !dbg !23
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i372 = icmp eq i32 %171, 0, !dbg !23
  %172 = tail call float @llvm.nvvm.fabs.ftz.f(float %67) #6, !dbg !23
  %173 = tail call float @llvm.nvvm.fabs.f(float %67) #6, !dbg !23
  %.01.i373 = select i1 %.not.i372, float %173, float %172, !dbg !23
  %174 = fcmp ult float %.01.i373, 0x3FE3333340000000, !dbg !23
  br i1 %174, label %__internal_fmad.exit3.i379, label %__internal_fmad.exit1.i374, !dbg !23

__internal_fmad.exit1.i374:                       ; preds = %__nv_tanhf.exit371
  %175 = fmul float %.01.i373, 0x4007154760000000, !dbg !23
  %176 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %175) #6, !dbg !23
  %177 = fadd float %176, 1.000000e+00, !dbg !23
  %178 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %177) #7, !dbg !23, !srcloc !24
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i375 = icmp eq i32 %179, 0, !dbg !23
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %178, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %178, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i376 = select i1 %.not6.i375, float %181, float %180, !dbg !23
  %182 = fcmp oge float %.01.i373, 0x4022059680000000, !dbg !23
  %s.0.i377 = select i1 %182, float 1.000000e+00, float %.03.i376, !dbg !23
  %183 = bitcast float %s.0.i377 to i32, !dbg !23
  %184 = bitcast float %67 to i32, !dbg !23
  %185 = and i32 %184, -2147483648, !dbg !23
  %186 = or i32 %185, %183, !dbg !23
  %187 = bitcast i32 %186 to float, !dbg !23
  br label %__nv_tanhf.exit390, !dbg !23

__internal_fmad.exit3.i379:                       ; preds = %__nv_tanhf.exit371
  %188 = fmul float %67, %67, !dbg !23
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i380 = icmp eq i32 %189, 0, !dbg !23
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %188, float 0xBFAAC795C0000000) #6, !dbg !23
  %191 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %188, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i381 = select i1 %.not1.i380, float %191, float %190, !dbg !23
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i382 = icmp eq i32 %192, 0, !dbg !23
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i381, float %188, float 0x3FC10B2820000000) #6, !dbg !23
  %194 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i381, float %188, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i383 = select i1 %.not2.i382, float %194, float %193, !dbg !23
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i384 = icmp eq i32 %195, 0, !dbg !23
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i383, float %188, float 0xBFD5553DA0000000) #6, !dbg !23
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i383, float %188, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i385 = select i1 %.not3.i384, float %197, float %196, !dbg !23
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i386 = icmp eq i32 %198, 0, !dbg !23
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i385, float %188, float 0.000000e+00) #6, !dbg !23
  %200 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i385, float %188, float 0.000000e+00) #6, !dbg !23
  %.04.i387 = select i1 %.not4.i386, float %200, float %199, !dbg !23
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i388 = icmp eq i32 %201, 0, !dbg !23
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i387, float %67, float %67) #6, !dbg !23
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i387, float %67, float %67) #6, !dbg !23
  %.02.i389 = select i1 %.not5.i388, float %203, float %202, !dbg !23
  br label %__nv_tanhf.exit390, !dbg !23

__nv_tanhf.exit390:                               ; preds = %__internal_fmad.exit1.i374, %__internal_fmad.exit3.i379
  %s.1.i378 = phi float [ %187, %__internal_fmad.exit1.i374 ], [ %.02.i389, %__internal_fmad.exit3.i379 ], !dbg !23
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i391 = icmp eq i32 %204, 0, !dbg !23
  %205 = tail call float @llvm.nvvm.fabs.ftz.f(float %68) #6, !dbg !23
  %206 = tail call float @llvm.nvvm.fabs.f(float %68) #6, !dbg !23
  %.01.i392 = select i1 %.not.i391, float %206, float %205, !dbg !23
  %207 = fcmp ult float %.01.i392, 0x3FE3333340000000, !dbg !23
  br i1 %207, label %__internal_fmad.exit3.i398, label %__internal_fmad.exit1.i393, !dbg !23

__internal_fmad.exit1.i393:                       ; preds = %__nv_tanhf.exit390
  %208 = fmul float %.01.i392, 0x4007154760000000, !dbg !23
  %209 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %208) #6, !dbg !23
  %210 = fadd float %209, 1.000000e+00, !dbg !23
  %211 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %210) #7, !dbg !23, !srcloc !24
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i394 = icmp eq i32 %212, 0, !dbg !23
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %211, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %214 = tail call float @llvm.nvvm.fma.rn.f(float %211, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i395 = select i1 %.not6.i394, float %214, float %213, !dbg !23
  %215 = fcmp oge float %.01.i392, 0x4022059680000000, !dbg !23
  %s.0.i396 = select i1 %215, float 1.000000e+00, float %.03.i395, !dbg !23
  %216 = bitcast float %s.0.i396 to i32, !dbg !23
  %217 = bitcast float %68 to i32, !dbg !23
  %218 = and i32 %217, -2147483648, !dbg !23
  %219 = or i32 %218, %216, !dbg !23
  %220 = bitcast i32 %219 to float, !dbg !23
  br label %__nv_tanhf.exit409, !dbg !23

__internal_fmad.exit3.i398:                       ; preds = %__nv_tanhf.exit390
  %221 = fmul float %68, %68, !dbg !23
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i399 = icmp eq i32 %222, 0, !dbg !23
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %221, float 0xBFAAC795C0000000) #6, !dbg !23
  %224 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %221, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i400 = select i1 %.not1.i399, float %224, float %223, !dbg !23
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i401 = icmp eq i32 %225, 0, !dbg !23
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i400, float %221, float 0x3FC10B2820000000) #6, !dbg !23
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i400, float %221, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i402 = select i1 %.not2.i401, float %227, float %226, !dbg !23
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i403 = icmp eq i32 %228, 0, !dbg !23
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i402, float %221, float 0xBFD5553DA0000000) #6, !dbg !23
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i402, float %221, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i404 = select i1 %.not3.i403, float %230, float %229, !dbg !23
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i405 = icmp eq i32 %231, 0, !dbg !23
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i404, float %221, float 0.000000e+00) #6, !dbg !23
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i404, float %221, float 0.000000e+00) #6, !dbg !23
  %.04.i406 = select i1 %.not4.i405, float %233, float %232, !dbg !23
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i407 = icmp eq i32 %234, 0, !dbg !23
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i406, float %68, float %68) #6, !dbg !23
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i406, float %68, float %68) #6, !dbg !23
  %.02.i408 = select i1 %.not5.i407, float %236, float %235, !dbg !23
  br label %__nv_tanhf.exit409, !dbg !23

__nv_tanhf.exit409:                               ; preds = %__internal_fmad.exit1.i393, %__internal_fmad.exit3.i398
  %s.1.i397 = phi float [ %220, %__internal_fmad.exit1.i393 ], [ %.02.i408, %__internal_fmad.exit3.i398 ], !dbg !23
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i410 = icmp eq i32 %237, 0, !dbg !23
  %238 = tail call float @llvm.nvvm.fabs.ftz.f(float %69) #6, !dbg !23
  %239 = tail call float @llvm.nvvm.fabs.f(float %69) #6, !dbg !23
  %.01.i411 = select i1 %.not.i410, float %239, float %238, !dbg !23
  %240 = fcmp ult float %.01.i411, 0x3FE3333340000000, !dbg !23
  br i1 %240, label %__internal_fmad.exit3.i417, label %__internal_fmad.exit1.i412, !dbg !23

__internal_fmad.exit1.i412:                       ; preds = %__nv_tanhf.exit409
  %241 = fmul float %.01.i411, 0x4007154760000000, !dbg !23
  %242 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %241) #6, !dbg !23
  %243 = fadd float %242, 1.000000e+00, !dbg !23
  %244 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %243) #7, !dbg !23, !srcloc !24
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i413 = icmp eq i32 %245, 0, !dbg !23
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %244, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %244, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i414 = select i1 %.not6.i413, float %247, float %246, !dbg !23
  %248 = fcmp oge float %.01.i411, 0x4022059680000000, !dbg !23
  %s.0.i415 = select i1 %248, float 1.000000e+00, float %.03.i414, !dbg !23
  %249 = bitcast float %s.0.i415 to i32, !dbg !23
  %250 = bitcast float %69 to i32, !dbg !23
  %251 = and i32 %250, -2147483648, !dbg !23
  %252 = or i32 %251, %249, !dbg !23
  %253 = bitcast i32 %252 to float, !dbg !23
  br label %__nv_tanhf.exit428, !dbg !23

__internal_fmad.exit3.i417:                       ; preds = %__nv_tanhf.exit409
  %254 = fmul float %69, %69, !dbg !23
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i418 = icmp eq i32 %255, 0, !dbg !23
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %254, float 0xBFAAC795C0000000) #6, !dbg !23
  %257 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %254, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i419 = select i1 %.not1.i418, float %257, float %256, !dbg !23
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i420 = icmp eq i32 %258, 0, !dbg !23
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i419, float %254, float 0x3FC10B2820000000) #6, !dbg !23
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i419, float %254, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i421 = select i1 %.not2.i420, float %260, float %259, !dbg !23
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i422 = icmp eq i32 %261, 0, !dbg !23
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i421, float %254, float 0xBFD5553DA0000000) #6, !dbg !23
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i421, float %254, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i423 = select i1 %.not3.i422, float %263, float %262, !dbg !23
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i424 = icmp eq i32 %264, 0, !dbg !23
  %265 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i423, float %254, float 0.000000e+00) #6, !dbg !23
  %266 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i423, float %254, float 0.000000e+00) #6, !dbg !23
  %.04.i425 = select i1 %.not4.i424, float %266, float %265, !dbg !23
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i426 = icmp eq i32 %267, 0, !dbg !23
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i425, float %69, float %69) #6, !dbg !23
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i425, float %69, float %69) #6, !dbg !23
  %.02.i427 = select i1 %.not5.i426, float %269, float %268, !dbg !23
  br label %__nv_tanhf.exit428, !dbg !23

__nv_tanhf.exit428:                               ; preds = %__internal_fmad.exit1.i412, %__internal_fmad.exit3.i417
  %s.1.i416 = phi float [ %253, %__internal_fmad.exit1.i412 ], [ %.02.i427, %__internal_fmad.exit3.i417 ], !dbg !23
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i429 = icmp eq i32 %270, 0, !dbg !23
  %271 = tail call float @llvm.nvvm.fabs.ftz.f(float %70) #6, !dbg !23
  %272 = tail call float @llvm.nvvm.fabs.f(float %70) #6, !dbg !23
  %.01.i430 = select i1 %.not.i429, float %272, float %271, !dbg !23
  %273 = fcmp ult float %.01.i430, 0x3FE3333340000000, !dbg !23
  br i1 %273, label %__internal_fmad.exit3.i436, label %__internal_fmad.exit1.i431, !dbg !23

__internal_fmad.exit1.i431:                       ; preds = %__nv_tanhf.exit428
  %274 = fmul float %.01.i430, 0x4007154760000000, !dbg !23
  %275 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %274) #6, !dbg !23
  %276 = fadd float %275, 1.000000e+00, !dbg !23
  %277 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %276) #7, !dbg !23, !srcloc !24
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i432 = icmp eq i32 %278, 0, !dbg !23
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %277, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %277, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i433 = select i1 %.not6.i432, float %280, float %279, !dbg !23
  %281 = fcmp oge float %.01.i430, 0x4022059680000000, !dbg !23
  %s.0.i434 = select i1 %281, float 1.000000e+00, float %.03.i433, !dbg !23
  %282 = bitcast float %s.0.i434 to i32, !dbg !23
  %283 = bitcast float %70 to i32, !dbg !23
  %284 = and i32 %283, -2147483648, !dbg !23
  %285 = or i32 %284, %282, !dbg !23
  %286 = bitcast i32 %285 to float, !dbg !23
  br label %__nv_tanhf.exit447, !dbg !23

__internal_fmad.exit3.i436:                       ; preds = %__nv_tanhf.exit428
  %287 = fmul float %70, %70, !dbg !23
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i437 = icmp eq i32 %288, 0, !dbg !23
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %287, float 0xBFAAC795C0000000) #6, !dbg !23
  %290 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %287, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i438 = select i1 %.not1.i437, float %290, float %289, !dbg !23
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i439 = icmp eq i32 %291, 0, !dbg !23
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i438, float %287, float 0x3FC10B2820000000) #6, !dbg !23
  %293 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i438, float %287, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i440 = select i1 %.not2.i439, float %293, float %292, !dbg !23
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i441 = icmp eq i32 %294, 0, !dbg !23
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i440, float %287, float 0xBFD5553DA0000000) #6, !dbg !23
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i440, float %287, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i442 = select i1 %.not3.i441, float %296, float %295, !dbg !23
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i443 = icmp eq i32 %297, 0, !dbg !23
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i442, float %287, float 0.000000e+00) #6, !dbg !23
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i442, float %287, float 0.000000e+00) #6, !dbg !23
  %.04.i444 = select i1 %.not4.i443, float %299, float %298, !dbg !23
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i445 = icmp eq i32 %300, 0, !dbg !23
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i444, float %70, float %70) #6, !dbg !23
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i444, float %70, float %70) #6, !dbg !23
  %.02.i446 = select i1 %.not5.i445, float %302, float %301, !dbg !23
  br label %__nv_tanhf.exit447, !dbg !23

__nv_tanhf.exit447:                               ; preds = %__internal_fmad.exit1.i431, %__internal_fmad.exit3.i436
  %s.1.i435 = phi float [ %286, %__internal_fmad.exit1.i431 ], [ %.02.i446, %__internal_fmad.exit3.i436 ], !dbg !23
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i448 = icmp eq i32 %303, 0, !dbg !23
  %304 = tail call float @llvm.nvvm.fabs.ftz.f(float %71) #6, !dbg !23
  %305 = tail call float @llvm.nvvm.fabs.f(float %71) #6, !dbg !23
  %.01.i449 = select i1 %.not.i448, float %305, float %304, !dbg !23
  %306 = fcmp ult float %.01.i449, 0x3FE3333340000000, !dbg !23
  br i1 %306, label %__internal_fmad.exit3.i455, label %__internal_fmad.exit1.i450, !dbg !23

__internal_fmad.exit1.i450:                       ; preds = %__nv_tanhf.exit447
  %307 = fmul float %.01.i449, 0x4007154760000000, !dbg !23
  %308 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %307) #6, !dbg !23
  %309 = fadd float %308, 1.000000e+00, !dbg !23
  %310 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %309) #7, !dbg !23, !srcloc !24
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i451 = icmp eq i32 %311, 0, !dbg !23
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %310, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %313 = tail call float @llvm.nvvm.fma.rn.f(float %310, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i452 = select i1 %.not6.i451, float %313, float %312, !dbg !23
  %314 = fcmp oge float %.01.i449, 0x4022059680000000, !dbg !23
  %s.0.i453 = select i1 %314, float 1.000000e+00, float %.03.i452, !dbg !23
  %315 = bitcast float %s.0.i453 to i32, !dbg !23
  %316 = bitcast float %71 to i32, !dbg !23
  %317 = and i32 %316, -2147483648, !dbg !23
  %318 = or i32 %317, %315, !dbg !23
  %319 = bitcast i32 %318 to float, !dbg !23
  br label %__nv_tanhf.exit466, !dbg !23

__internal_fmad.exit3.i455:                       ; preds = %__nv_tanhf.exit447
  %320 = fmul float %71, %71, !dbg !23
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i456 = icmp eq i32 %321, 0, !dbg !23
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %320, float 0xBFAAC795C0000000) #6, !dbg !23
  %323 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %320, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i457 = select i1 %.not1.i456, float %323, float %322, !dbg !23
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i458 = icmp eq i32 %324, 0, !dbg !23
  %325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i457, float %320, float 0x3FC10B2820000000) #6, !dbg !23
  %326 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i457, float %320, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i459 = select i1 %.not2.i458, float %326, float %325, !dbg !23
  %327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i460 = icmp eq i32 %327, 0, !dbg !23
  %328 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i459, float %320, float 0xBFD5553DA0000000) #6, !dbg !23
  %329 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i459, float %320, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i461 = select i1 %.not3.i460, float %329, float %328, !dbg !23
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i462 = icmp eq i32 %330, 0, !dbg !23
  %331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i461, float %320, float 0.000000e+00) #6, !dbg !23
  %332 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i461, float %320, float 0.000000e+00) #6, !dbg !23
  %.04.i463 = select i1 %.not4.i462, float %332, float %331, !dbg !23
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i464 = icmp eq i32 %333, 0, !dbg !23
  %334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i463, float %71, float %71) #6, !dbg !23
  %335 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i463, float %71, float %71) #6, !dbg !23
  %.02.i465 = select i1 %.not5.i464, float %335, float %334, !dbg !23
  br label %__nv_tanhf.exit466, !dbg !23

__nv_tanhf.exit466:                               ; preds = %__internal_fmad.exit1.i450, %__internal_fmad.exit3.i455
  %s.1.i454 = phi float [ %319, %__internal_fmad.exit1.i450 ], [ %.02.i465, %__internal_fmad.exit3.i455 ], !dbg !23
  %336 = insertelement <2 x float> poison, float %s.1.i340, i64 0, !dbg !25
  %337 = insertelement <2 x float> %336, float %s.1.i321, i64 1, !dbg !25
  %338 = fmul <2 x float> %337, <float 5.000000e+01, float 5.000000e+01>, !dbg !25
  %339 = fmul float %s.1.i359, 5.000000e+01, !dbg !25
  %340 = fmul float %s.1.i378, 5.000000e+01, !dbg !25
  %341 = insertelement <4 x float> poison, float %s.1.i454, i64 0, !dbg !25
  %342 = insertelement <4 x float> %341, float %s.1.i435, i64 1, !dbg !25
  %343 = insertelement <4 x float> %342, float %s.1.i416, i64 2, !dbg !25
  %344 = insertelement <4 x float> %343, float %s.1.i397, i64 3, !dbg !25
  %345 = fmul <4 x float> %344, <float 5.000000e+01, float 5.000000e+01, float 5.000000e+01, float 5.000000e+01>, !dbg !25
  %346 = sub i32 %31, %12, !dbg !26
  %347 = icmp sgt i32 %28, %invariant.op498, !dbg !15
  %348 = icmp sgt i32 %28, %invariant.op499, !dbg !15
  %349 = insertelement <4 x i32> poison, i32 %28, i64 0, !dbg !15
  %350 = shufflevector <4 x i32> %349, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !15
  %351 = icmp sgt <4 x i32> %350, %23, !dbg !15
  %352 = select i1 %347, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !27
  %353 = select i1 %348, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !27
  %354 = fadd float %352, %339, !dbg !28
  %355 = fadd float %353, %340, !dbg !28
  %356 = fcmp ule float %26, %354, !dbg !29
  %357 = fcmp ule float %27, %355, !dbg !29
  %358 = fcmp ord <2 x float> %29, zeroinitializer, !dbg !33
  %359 = fcmp ord float %26, 0.000000e+00, !dbg !33
  %360 = fcmp ord float %27, 0.000000e+00, !dbg !33
  %361 = fcmp ord <4 x float> %30, zeroinitializer, !dbg !33
  %362 = insertelement <2 x i32> poison, i32 %28, i64 0, !dbg !15
  %363 = insertelement <2 x i32> %362, i32 %346, i64 1, !dbg !15
  %364 = icmp sgt <2 x i32> %363, %24, !dbg !15
  %365 = select <2 x i1> %364, <2 x float> <float 0xC7EFE00000000000, float 0xC7EFE00000000000>, <2 x float> zeroinitializer, !dbg !27
  %366 = fadd <2 x float> %365, %338, !dbg !28
  %367 = fcmp ule <2 x float> %29, %366, !dbg !29
  %368 = and <2 x i1> %358, %367, !dbg !34
  %.not19 = and i1 %359, %356, !dbg !34
  %.not21 = and i1 %360, %357, !dbg !34
  %369 = select <4 x i1> %351, <4 x float> <float 0xC7EFE00000000000, float 0xC7EFE00000000000, float 0xC7EFE00000000000, float 0xC7EFE00000000000>, <4 x float> zeroinitializer, !dbg !27
  %370 = fadd <4 x float> %369, %345, !dbg !28
  %371 = fcmp ule <4 x float> %30, %370, !dbg !29
  %372 = and <4 x i1> %361, %371, !dbg !35
  %373 = select <2 x i1> %368, <2 x float> %366, <2 x float> %29, !dbg !35
  %374 = select i1 %.not19, float %354, float %26, !dbg !35
  %375 = select i1 %.not21, float %355, float %27, !dbg !35
  %376 = select <4 x i1> %372, <4 x float> %370, <4 x float> %30, !dbg !35
  %377 = add nuw nsw i32 %28, 2048, !dbg !14
  %378 = icmp ult i32 %28, 6144, !dbg !14
  br i1 %378, label %25, label %379, !dbg !14

379:                                              ; preds = %__nv_tanhf.exit466
  %380 = and i32 %5, 31, !dbg !10
  %381 = and i32 %6, 7, !dbg !10
  %382 = shufflevector <2 x float> %373, <2 x float> <float poison, float 0.000000e+00>, <2 x i32> <i32 1, i32 3>, !dbg !36
  %383 = fcmp ogt <2 x float> %382, %373, !dbg !36
  %384 = fcmp uno <2 x float> %382, %373, !dbg !36
  %shift = shufflevector <2 x i1> %384, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %385 = or <2 x i1> %383, %shift, !dbg !40
  %386 = extractelement <2 x i1> %385, i64 0, !dbg !40
  %387 = extractelement <2 x float> %373, i64 0, !dbg !41
  %388 = extractelement <2 x float> %373, i64 1, !dbg !41
  %389 = select i1 %386, float %388, float %387, !dbg !41
  %390 = fcmp ogt float %389, %374, !dbg !36
  %391 = fcmp uno float %389, 0.000000e+00, !dbg !42
  %392 = or i1 %390, %391, !dbg !40
  %393 = select i1 %392, float %389, float %374, !dbg !41
  %394 = fcmp ogt float %393, %375, !dbg !36
  %395 = fcmp uno float %393, 0.000000e+00, !dbg !42
  %396 = or i1 %394, %395, !dbg !40
  %397 = select i1 %396, float %393, float %375, !dbg !41
  %398 = extractelement <4 x float> %376, i64 3, !dbg !36
  %399 = fcmp ogt float %397, %398, !dbg !36
  %400 = fcmp uno float %397, 0.000000e+00, !dbg !42
  %401 = or i1 %399, %400, !dbg !40
  %402 = select i1 %401, float %397, float %398, !dbg !41
  %403 = extractelement <4 x float> %376, i64 2, !dbg !36
  %404 = fcmp ogt float %402, %403, !dbg !36
  %405 = fcmp uno float %402, 0.000000e+00, !dbg !42
  %406 = or i1 %404, %405, !dbg !40
  %407 = select i1 %406, float %402, float %403, !dbg !41
  %408 = extractelement <4 x float> %376, i64 1, !dbg !36
  %409 = fcmp ogt float %407, %408, !dbg !36
  %410 = fcmp uno float %407, 0.000000e+00, !dbg !42
  %411 = or i1 %409, %410, !dbg !40
  %412 = select i1 %411, float %407, float %408, !dbg !41
  %413 = extractelement <4 x float> %376, i64 0, !dbg !36
  %414 = fcmp ogt float %412, %413, !dbg !36
  %415 = fcmp uno float %412, 0.000000e+00, !dbg !42
  %416 = or i1 %414, %415, !dbg !40
  %417 = select i1 %416, float %412, float %413, !dbg !41
  %418 = bitcast float %417 to i32, !dbg !43
  %419 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %418, i32 16, i32 31), !dbg !43
  %420 = bitcast i32 %419 to float, !dbg !43
  %421 = fcmp ogt float %417, %420, !dbg !36
  %422 = fcmp uno float %417, 0.000000e+00, !dbg !42
  %423 = or i1 %422, %421, !dbg !40
  %424 = select i1 %423, float %417, float %420, !dbg !41
  %425 = bitcast float %424 to i32, !dbg !43
  %426 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %425, i32 8, i32 31), !dbg !43
  %427 = bitcast i32 %426 to float, !dbg !43
  %428 = fcmp ogt float %424, %427, !dbg !36
  %429 = fcmp uno float %424, 0.000000e+00, !dbg !42
  %430 = or i1 %428, %429, !dbg !40
  %431 = select i1 %430, float %424, float %427, !dbg !41
  %432 = bitcast float %431 to i32, !dbg !43
  %433 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %432, i32 4, i32 31), !dbg !43
  %434 = bitcast i32 %433 to float, !dbg !43
  %435 = fcmp ogt float %431, %434, !dbg !36
  %436 = fcmp uno float %431, 0.000000e+00, !dbg !42
  %437 = or i1 %435, %436, !dbg !40
  %438 = select i1 %437, float %431, float %434, !dbg !41
  %439 = bitcast float %438 to i32, !dbg !43
  %440 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %439, i32 2, i32 31), !dbg !43
  %441 = bitcast i32 %440 to float, !dbg !43
  %442 = fcmp ogt float %438, %441, !dbg !36
  %443 = fcmp uno float %438, 0.000000e+00, !dbg !42
  %444 = or i1 %442, %443, !dbg !40
  %445 = select i1 %444, float %438, float %441, !dbg !41
  %446 = bitcast float %445 to i32, !dbg !43
  %447 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %446, i32 1, i32 31), !dbg !43
  %448 = bitcast i32 %447 to float, !dbg !43
  %449 = fcmp ogt float %445, %448, !dbg !36
  %450 = fcmp uno float %445, 0.000000e+00, !dbg !42
  %451 = or i1 %449, %450, !dbg !40
  %452 = select i1 %451, float %445, float %448, !dbg !41
  %453 = icmp eq i32 %380, 0, !dbg !43
  %454 = zext nneg i32 %381 to i64, !dbg !43
  %455 = getelementptr float, ptr addrspace(3) @global_smem, i64 %454, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %455, float %452, i1 %453) #6, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %456 = icmp slt i32 %5, 8, !dbg !43
  %457 = sext i32 %5 to i64, !dbg !43
  %458 = getelementptr float, ptr addrspace(3) @global_smem, i64 %457, !dbg !43
  %459 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %458, i1 %456) #6, !dbg !43
  %460 = bitcast float %459 to i32, !dbg !43
  %461 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %460, i32 4, i32 31), !dbg !43
  %462 = bitcast i32 %461 to float, !dbg !43
  %463 = fcmp ogt float %459, %462, !dbg !36
  %464 = fcmp uno float %459, 0.000000e+00, !dbg !42
  %465 = or i1 %464, %463, !dbg !40
  %466 = select i1 %465, float %459, float %462, !dbg !41
  %467 = bitcast float %466 to i32, !dbg !43
  %468 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %467, i32 2, i32 31), !dbg !43
  %469 = bitcast i32 %468 to float, !dbg !43
  %470 = fcmp ogt float %466, %469, !dbg !36
  %471 = fcmp uno float %466, 0.000000e+00, !dbg !42
  %472 = or i1 %470, %471, !dbg !40
  %473 = select i1 %472, float %466, float %469, !dbg !41
  %474 = bitcast float %473 to i32, !dbg !43
  %475 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %474, i32 1, i32 31), !dbg !43
  %476 = bitcast i32 %475 to float, !dbg !43
  %477 = fcmp ogt float %473, %476, !dbg !36
  %478 = fcmp uno float %473, 0.000000e+00, !dbg !42
  %479 = or i1 %477, %478, !dbg !40
  %480 = select i1 %479, float %473, float %476, !dbg !41
  %481 = and i32 %5, 7, !dbg !43
  %482 = icmp eq i32 %481, 0, !dbg !43
  %483 = and i1 %456, %482, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %458, float %480, i1 %483) #6, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %484 = load float, ptr addrspace(3) @global_smem, align 4, !dbg !43
  %invariant.op504 = sub nsw i32 0, %14, !dbg !45
  %invariant.op505 = sub nsw i32 0, %15, !dbg !45
  %invariant.op506 = sub nsw i32 0, %16, !dbg !45
  %485 = extractelement <4 x i32> %22, i64 3, !dbg !45
  %invariant.op507 = sub nsw i32 0, %485, !dbg !45
  %486 = extractelement <4 x i32> %22, i64 2, !dbg !45
  %invariant.op508 = sub nsw i32 0, %486, !dbg !45
  %487 = extractelement <4 x i32> %22, i64 1, !dbg !45
  %invariant.op509 = sub nsw i32 0, %487, !dbg !45
  %488 = extractelement <4 x i32> %22, i64 0, !dbg !45
  %invariant.op510 = sub nsw i32 0, %488, !dbg !45
  br label %489, !dbg !45

489:                                              ; preds = %379, %__nv_tanhf.exit314
  %490 = phi float [ 0.000000e+00, %379 ], [ %861, %__nv_tanhf.exit314 ]
  %491 = phi float [ 0.000000e+00, %379 ], [ %862, %__nv_tanhf.exit314 ]
  %492 = phi float [ 0.000000e+00, %379 ], [ %863, %__nv_tanhf.exit314 ]
  %493 = phi float [ 0.000000e+00, %379 ], [ %864, %__nv_tanhf.exit314 ]
  %494 = phi float [ 0.000000e+00, %379 ], [ %865, %__nv_tanhf.exit314 ]
  %495 = phi float [ 0.000000e+00, %379 ], [ %866, %__nv_tanhf.exit314 ]
  %496 = phi float [ 0.000000e+00, %379 ], [ %867, %__nv_tanhf.exit314 ]
  %497 = phi float [ 0.000000e+00, %379 ], [ %868, %__nv_tanhf.exit314 ]
  %498 = phi i32 [ 0, %379 ], [ %869, %__nv_tanhf.exit314 ]
  %499 = or i32 %498, %7, !dbg !46
  %500 = add i32 %499, %13, !dbg !47
  %501 = sext i32 %500 to i64, !dbg !48
  %502 = getelementptr i16, ptr addrspace(1) %0, i64 %501, !dbg !48
  %503 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %502, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !49
  %504 = extractvalue { i32, i32, i32, i32 } %503, 0, !dbg !49
  %505 = extractvalue { i32, i32, i32, i32 } %503, 1, !dbg !49
  %506 = extractvalue { i32, i32, i32, i32 } %503, 2, !dbg !49
  %507 = extractvalue { i32, i32, i32, i32 } %503, 3, !dbg !49
  %508 = trunc i32 %504 to i16, !dbg !49
  %extelt.offset6 = lshr i32 %504, 16, !dbg !49
  %509 = trunc i32 %extelt.offset6 to i16, !dbg !49
  %510 = trunc i32 %505 to i16, !dbg !49
  %extelt.offset7 = lshr i32 %505, 16, !dbg !49
  %511 = trunc i32 %extelt.offset7 to i16, !dbg !49
  %512 = trunc i32 %506 to i16, !dbg !49
  %extelt.offset8 = lshr i32 %506, 16, !dbg !49
  %513 = trunc i32 %extelt.offset8 to i16, !dbg !49
  %514 = trunc i32 %507 to i16, !dbg !49
  %extelt.offset9 = lshr i32 %507, 16, !dbg !49
  %515 = trunc i32 %extelt.offset9 to i16, !dbg !49
  %516 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %508) #6, !dbg !50
  %517 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %509) #6, !dbg !50
  %518 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %510) #6, !dbg !50
  %519 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %511) #6, !dbg !50
  %520 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %512) #6, !dbg !50
  %521 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %513) #6, !dbg !50
  %522 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %514) #6, !dbg !50
  %523 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %515) #6, !dbg !50
  %524 = fmul float %516, 6.250000e-02, !dbg !51
  %525 = fmul float %517, 6.250000e-02, !dbg !51
  %526 = fmul float %518, 6.250000e-02, !dbg !51
  %527 = fmul float %519, 6.250000e-02, !dbg !51
  %528 = fmul float %520, 6.250000e-02, !dbg !51
  %529 = fmul float %521, 6.250000e-02, !dbg !51
  %530 = fmul float %522, 6.250000e-02, !dbg !51
  %531 = fmul float %523, 6.250000e-02, !dbg !51
  %532 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %524, float 5.000000e+01) #6, !dbg !52
  %533 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %525, float 5.000000e+01) #6, !dbg !52
  %534 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %526, float 5.000000e+01) #6, !dbg !52
  %535 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %527, float 5.000000e+01) #6, !dbg !52
  %536 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %528, float 5.000000e+01) #6, !dbg !52
  %537 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %529, float 5.000000e+01) #6, !dbg !52
  %538 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %530, float 5.000000e+01) #6, !dbg !52
  %539 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %531, float 5.000000e+01) #6, !dbg !52
  %540 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i163 = icmp eq i32 %540, 0, !dbg !53
  %541 = tail call float @llvm.nvvm.fabs.ftz.f(float %532) #6, !dbg !53
  %542 = tail call float @llvm.nvvm.fabs.f(float %532) #6, !dbg !53
  %.01.i164 = select i1 %.not.i163, float %542, float %541, !dbg !53
  %543 = fcmp ult float %.01.i164, 0x3FE3333340000000, !dbg !53
  br i1 %543, label %__internal_fmad.exit3.i170, label %__internal_fmad.exit1.i165, !dbg !53

__internal_fmad.exit1.i165:                       ; preds = %489
  %544 = fmul float %.01.i164, 0x4007154760000000, !dbg !53
  %545 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %544) #6, !dbg !53
  %546 = fadd float %545, 1.000000e+00, !dbg !53
  %547 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %546) #7, !dbg !53, !srcloc !24
  %548 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i166 = icmp eq i32 %548, 0, !dbg !53
  %549 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %547, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %550 = tail call float @llvm.nvvm.fma.rn.f(float %547, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i167 = select i1 %.not6.i166, float %550, float %549, !dbg !53
  %551 = fcmp oge float %.01.i164, 0x4022059680000000, !dbg !53
  %s.0.i168 = select i1 %551, float 1.000000e+00, float %.03.i167, !dbg !53
  %552 = bitcast float %s.0.i168 to i32, !dbg !53
  %553 = bitcast float %532 to i32, !dbg !53
  %554 = and i32 %553, -2147483648, !dbg !53
  %555 = or i32 %554, %552, !dbg !53
  %556 = bitcast i32 %555 to float, !dbg !53
  br label %__nv_tanhf.exit181, !dbg !53

__internal_fmad.exit3.i170:                       ; preds = %489
  %557 = fmul float %532, %532, !dbg !53
  %558 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i171 = icmp eq i32 %558, 0, !dbg !53
  %559 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %557, float 0xBFAAC795C0000000) #6, !dbg !53
  %560 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %557, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i172 = select i1 %.not1.i171, float %560, float %559, !dbg !53
  %561 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i173 = icmp eq i32 %561, 0, !dbg !53
  %562 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i172, float %557, float 0x3FC10B2820000000) #6, !dbg !53
  %563 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i172, float %557, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i174 = select i1 %.not2.i173, float %563, float %562, !dbg !53
  %564 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i175 = icmp eq i32 %564, 0, !dbg !53
  %565 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i174, float %557, float 0xBFD5553DA0000000) #6, !dbg !53
  %566 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i174, float %557, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i176 = select i1 %.not3.i175, float %566, float %565, !dbg !53
  %567 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i177 = icmp eq i32 %567, 0, !dbg !53
  %568 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i176, float %557, float 0.000000e+00) #6, !dbg !53
  %569 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i176, float %557, float 0.000000e+00) #6, !dbg !53
  %.04.i178 = select i1 %.not4.i177, float %569, float %568, !dbg !53
  %570 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i179 = icmp eq i32 %570, 0, !dbg !53
  %571 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i178, float %532, float %532) #6, !dbg !53
  %572 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i178, float %532, float %532) #6, !dbg !53
  %.02.i180 = select i1 %.not5.i179, float %572, float %571, !dbg !53
  br label %__nv_tanhf.exit181, !dbg !53

__nv_tanhf.exit181:                               ; preds = %__internal_fmad.exit1.i165, %__internal_fmad.exit3.i170
  %s.1.i169 = phi float [ %556, %__internal_fmad.exit1.i165 ], [ %.02.i180, %__internal_fmad.exit3.i170 ], !dbg !53
  %573 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i182 = icmp eq i32 %573, 0, !dbg !53
  %574 = tail call float @llvm.nvvm.fabs.ftz.f(float %533) #6, !dbg !53
  %575 = tail call float @llvm.nvvm.fabs.f(float %533) #6, !dbg !53
  %.01.i183 = select i1 %.not.i182, float %575, float %574, !dbg !53
  %576 = fcmp ult float %.01.i183, 0x3FE3333340000000, !dbg !53
  br i1 %576, label %__internal_fmad.exit3.i189, label %__internal_fmad.exit1.i184, !dbg !53

__internal_fmad.exit1.i184:                       ; preds = %__nv_tanhf.exit181
  %577 = fmul float %.01.i183, 0x4007154760000000, !dbg !53
  %578 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %577) #6, !dbg !53
  %579 = fadd float %578, 1.000000e+00, !dbg !53
  %580 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %579) #7, !dbg !53, !srcloc !24
  %581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i185 = icmp eq i32 %581, 0, !dbg !53
  %582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %580, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %583 = tail call float @llvm.nvvm.fma.rn.f(float %580, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i186 = select i1 %.not6.i185, float %583, float %582, !dbg !53
  %584 = fcmp oge float %.01.i183, 0x4022059680000000, !dbg !53
  %s.0.i187 = select i1 %584, float 1.000000e+00, float %.03.i186, !dbg !53
  %585 = bitcast float %s.0.i187 to i32, !dbg !53
  %586 = bitcast float %533 to i32, !dbg !53
  %587 = and i32 %586, -2147483648, !dbg !53
  %588 = or i32 %587, %585, !dbg !53
  %589 = bitcast i32 %588 to float, !dbg !53
  br label %__nv_tanhf.exit200, !dbg !53

__internal_fmad.exit3.i189:                       ; preds = %__nv_tanhf.exit181
  %590 = fmul float %533, %533, !dbg !53
  %591 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i190 = icmp eq i32 %591, 0, !dbg !53
  %592 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %590, float 0xBFAAC795C0000000) #6, !dbg !53
  %593 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %590, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i191 = select i1 %.not1.i190, float %593, float %592, !dbg !53
  %594 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i192 = icmp eq i32 %594, 0, !dbg !53
  %595 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i191, float %590, float 0x3FC10B2820000000) #6, !dbg !53
  %596 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i191, float %590, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i193 = select i1 %.not2.i192, float %596, float %595, !dbg !53
  %597 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i194 = icmp eq i32 %597, 0, !dbg !53
  %598 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i193, float %590, float 0xBFD5553DA0000000) #6, !dbg !53
  %599 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i193, float %590, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i195 = select i1 %.not3.i194, float %599, float %598, !dbg !53
  %600 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i196 = icmp eq i32 %600, 0, !dbg !53
  %601 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i195, float %590, float 0.000000e+00) #6, !dbg !53
  %602 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i195, float %590, float 0.000000e+00) #6, !dbg !53
  %.04.i197 = select i1 %.not4.i196, float %602, float %601, !dbg !53
  %603 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i198 = icmp eq i32 %603, 0, !dbg !53
  %604 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i197, float %533, float %533) #6, !dbg !53
  %605 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i197, float %533, float %533) #6, !dbg !53
  %.02.i199 = select i1 %.not5.i198, float %605, float %604, !dbg !53
  br label %__nv_tanhf.exit200, !dbg !53

__nv_tanhf.exit200:                               ; preds = %__internal_fmad.exit1.i184, %__internal_fmad.exit3.i189
  %s.1.i188 = phi float [ %589, %__internal_fmad.exit1.i184 ], [ %.02.i199, %__internal_fmad.exit3.i189 ], !dbg !53
  %606 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i201 = icmp eq i32 %606, 0, !dbg !53
  %607 = tail call float @llvm.nvvm.fabs.ftz.f(float %534) #6, !dbg !53
  %608 = tail call float @llvm.nvvm.fabs.f(float %534) #6, !dbg !53
  %.01.i202 = select i1 %.not.i201, float %608, float %607, !dbg !53
  %609 = fcmp ult float %.01.i202, 0x3FE3333340000000, !dbg !53
  br i1 %609, label %__internal_fmad.exit3.i208, label %__internal_fmad.exit1.i203, !dbg !53

__internal_fmad.exit1.i203:                       ; preds = %__nv_tanhf.exit200
  %610 = fmul float %.01.i202, 0x4007154760000000, !dbg !53
  %611 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %610) #6, !dbg !53
  %612 = fadd float %611, 1.000000e+00, !dbg !53
  %613 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %612) #7, !dbg !53, !srcloc !24
  %614 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i204 = icmp eq i32 %614, 0, !dbg !53
  %615 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %613, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %616 = tail call float @llvm.nvvm.fma.rn.f(float %613, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i205 = select i1 %.not6.i204, float %616, float %615, !dbg !53
  %617 = fcmp oge float %.01.i202, 0x4022059680000000, !dbg !53
  %s.0.i206 = select i1 %617, float 1.000000e+00, float %.03.i205, !dbg !53
  %618 = bitcast float %s.0.i206 to i32, !dbg !53
  %619 = bitcast float %534 to i32, !dbg !53
  %620 = and i32 %619, -2147483648, !dbg !53
  %621 = or i32 %620, %618, !dbg !53
  %622 = bitcast i32 %621 to float, !dbg !53
  br label %__nv_tanhf.exit219, !dbg !53

__internal_fmad.exit3.i208:                       ; preds = %__nv_tanhf.exit200
  %623 = fmul float %534, %534, !dbg !53
  %624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i209 = icmp eq i32 %624, 0, !dbg !53
  %625 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %623, float 0xBFAAC795C0000000) #6, !dbg !53
  %626 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %623, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i210 = select i1 %.not1.i209, float %626, float %625, !dbg !53
  %627 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i211 = icmp eq i32 %627, 0, !dbg !53
  %628 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i210, float %623, float 0x3FC10B2820000000) #6, !dbg !53
  %629 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i210, float %623, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i212 = select i1 %.not2.i211, float %629, float %628, !dbg !53
  %630 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i213 = icmp eq i32 %630, 0, !dbg !53
  %631 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i212, float %623, float 0xBFD5553DA0000000) #6, !dbg !53
  %632 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i212, float %623, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i214 = select i1 %.not3.i213, float %632, float %631, !dbg !53
  %633 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i215 = icmp eq i32 %633, 0, !dbg !53
  %634 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i214, float %623, float 0.000000e+00) #6, !dbg !53
  %635 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i214, float %623, float 0.000000e+00) #6, !dbg !53
  %.04.i216 = select i1 %.not4.i215, float %635, float %634, !dbg !53
  %636 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i217 = icmp eq i32 %636, 0, !dbg !53
  %637 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i216, float %534, float %534) #6, !dbg !53
  %638 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i216, float %534, float %534) #6, !dbg !53
  %.02.i218 = select i1 %.not5.i217, float %638, float %637, !dbg !53
  br label %__nv_tanhf.exit219, !dbg !53

__nv_tanhf.exit219:                               ; preds = %__internal_fmad.exit1.i203, %__internal_fmad.exit3.i208
  %s.1.i207 = phi float [ %622, %__internal_fmad.exit1.i203 ], [ %.02.i218, %__internal_fmad.exit3.i208 ], !dbg !53
  %639 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i220 = icmp eq i32 %639, 0, !dbg !53
  %640 = tail call float @llvm.nvvm.fabs.ftz.f(float %535) #6, !dbg !53
  %641 = tail call float @llvm.nvvm.fabs.f(float %535) #6, !dbg !53
  %.01.i221 = select i1 %.not.i220, float %641, float %640, !dbg !53
  %642 = fcmp ult float %.01.i221, 0x3FE3333340000000, !dbg !53
  br i1 %642, label %__internal_fmad.exit3.i227, label %__internal_fmad.exit1.i222, !dbg !53

__internal_fmad.exit1.i222:                       ; preds = %__nv_tanhf.exit219
  %643 = fmul float %.01.i221, 0x4007154760000000, !dbg !53
  %644 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %643) #6, !dbg !53
  %645 = fadd float %644, 1.000000e+00, !dbg !53
  %646 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %645) #7, !dbg !53, !srcloc !24
  %647 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i223 = icmp eq i32 %647, 0, !dbg !53
  %648 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %646, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %649 = tail call float @llvm.nvvm.fma.rn.f(float %646, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i224 = select i1 %.not6.i223, float %649, float %648, !dbg !53
  %650 = fcmp oge float %.01.i221, 0x4022059680000000, !dbg !53
  %s.0.i225 = select i1 %650, float 1.000000e+00, float %.03.i224, !dbg !53
  %651 = bitcast float %s.0.i225 to i32, !dbg !53
  %652 = bitcast float %535 to i32, !dbg !53
  %653 = and i32 %652, -2147483648, !dbg !53
  %654 = or i32 %653, %651, !dbg !53
  %655 = bitcast i32 %654 to float, !dbg !53
  br label %__nv_tanhf.exit238, !dbg !53

__internal_fmad.exit3.i227:                       ; preds = %__nv_tanhf.exit219
  %656 = fmul float %535, %535, !dbg !53
  %657 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i228 = icmp eq i32 %657, 0, !dbg !53
  %658 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %656, float 0xBFAAC795C0000000) #6, !dbg !53
  %659 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %656, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i229 = select i1 %.not1.i228, float %659, float %658, !dbg !53
  %660 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i230 = icmp eq i32 %660, 0, !dbg !53
  %661 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i229, float %656, float 0x3FC10B2820000000) #6, !dbg !53
  %662 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i229, float %656, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i231 = select i1 %.not2.i230, float %662, float %661, !dbg !53
  %663 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i232 = icmp eq i32 %663, 0, !dbg !53
  %664 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i231, float %656, float 0xBFD5553DA0000000) #6, !dbg !53
  %665 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i231, float %656, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i233 = select i1 %.not3.i232, float %665, float %664, !dbg !53
  %666 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i234 = icmp eq i32 %666, 0, !dbg !53
  %667 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i233, float %656, float 0.000000e+00) #6, !dbg !53
  %668 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i233, float %656, float 0.000000e+00) #6, !dbg !53
  %.04.i235 = select i1 %.not4.i234, float %668, float %667, !dbg !53
  %669 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i236 = icmp eq i32 %669, 0, !dbg !53
  %670 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i235, float %535, float %535) #6, !dbg !53
  %671 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i235, float %535, float %535) #6, !dbg !53
  %.02.i237 = select i1 %.not5.i236, float %671, float %670, !dbg !53
  br label %__nv_tanhf.exit238, !dbg !53

__nv_tanhf.exit238:                               ; preds = %__internal_fmad.exit1.i222, %__internal_fmad.exit3.i227
  %s.1.i226 = phi float [ %655, %__internal_fmad.exit1.i222 ], [ %.02.i237, %__internal_fmad.exit3.i227 ], !dbg !53
  %672 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i239 = icmp eq i32 %672, 0, !dbg !53
  %673 = tail call float @llvm.nvvm.fabs.ftz.f(float %536) #6, !dbg !53
  %674 = tail call float @llvm.nvvm.fabs.f(float %536) #6, !dbg !53
  %.01.i240 = select i1 %.not.i239, float %674, float %673, !dbg !53
  %675 = fcmp ult float %.01.i240, 0x3FE3333340000000, !dbg !53
  br i1 %675, label %__internal_fmad.exit3.i246, label %__internal_fmad.exit1.i241, !dbg !53

__internal_fmad.exit1.i241:                       ; preds = %__nv_tanhf.exit238
  %676 = fmul float %.01.i240, 0x4007154760000000, !dbg !53
  %677 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %676) #6, !dbg !53
  %678 = fadd float %677, 1.000000e+00, !dbg !53
  %679 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %678) #7, !dbg !53, !srcloc !24
  %680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i242 = icmp eq i32 %680, 0, !dbg !53
  %681 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %679, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %682 = tail call float @llvm.nvvm.fma.rn.f(float %679, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i243 = select i1 %.not6.i242, float %682, float %681, !dbg !53
  %683 = fcmp oge float %.01.i240, 0x4022059680000000, !dbg !53
  %s.0.i244 = select i1 %683, float 1.000000e+00, float %.03.i243, !dbg !53
  %684 = bitcast float %s.0.i244 to i32, !dbg !53
  %685 = bitcast float %536 to i32, !dbg !53
  %686 = and i32 %685, -2147483648, !dbg !53
  %687 = or i32 %686, %684, !dbg !53
  %688 = bitcast i32 %687 to float, !dbg !53
  br label %__nv_tanhf.exit257, !dbg !53

__internal_fmad.exit3.i246:                       ; preds = %__nv_tanhf.exit238
  %689 = fmul float %536, %536, !dbg !53
  %690 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i247 = icmp eq i32 %690, 0, !dbg !53
  %691 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %689, float 0xBFAAC795C0000000) #6, !dbg !53
  %692 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %689, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i248 = select i1 %.not1.i247, float %692, float %691, !dbg !53
  %693 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i249 = icmp eq i32 %693, 0, !dbg !53
  %694 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i248, float %689, float 0x3FC10B2820000000) #6, !dbg !53
  %695 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i248, float %689, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i250 = select i1 %.not2.i249, float %695, float %694, !dbg !53
  %696 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i251 = icmp eq i32 %696, 0, !dbg !53
  %697 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i250, float %689, float 0xBFD5553DA0000000) #6, !dbg !53
  %698 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i250, float %689, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i252 = select i1 %.not3.i251, float %698, float %697, !dbg !53
  %699 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i253 = icmp eq i32 %699, 0, !dbg !53
  %700 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i252, float %689, float 0.000000e+00) #6, !dbg !53
  %701 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i252, float %689, float 0.000000e+00) #6, !dbg !53
  %.04.i254 = select i1 %.not4.i253, float %701, float %700, !dbg !53
  %702 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i255 = icmp eq i32 %702, 0, !dbg !53
  %703 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i254, float %536, float %536) #6, !dbg !53
  %704 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i254, float %536, float %536) #6, !dbg !53
  %.02.i256 = select i1 %.not5.i255, float %704, float %703, !dbg !53
  br label %__nv_tanhf.exit257, !dbg !53

__nv_tanhf.exit257:                               ; preds = %__internal_fmad.exit1.i241, %__internal_fmad.exit3.i246
  %s.1.i245 = phi float [ %688, %__internal_fmad.exit1.i241 ], [ %.02.i256, %__internal_fmad.exit3.i246 ], !dbg !53
  %705 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i258 = icmp eq i32 %705, 0, !dbg !53
  %706 = tail call float @llvm.nvvm.fabs.ftz.f(float %537) #6, !dbg !53
  %707 = tail call float @llvm.nvvm.fabs.f(float %537) #6, !dbg !53
  %.01.i259 = select i1 %.not.i258, float %707, float %706, !dbg !53
  %708 = fcmp ult float %.01.i259, 0x3FE3333340000000, !dbg !53
  br i1 %708, label %__internal_fmad.exit3.i265, label %__internal_fmad.exit1.i260, !dbg !53

__internal_fmad.exit1.i260:                       ; preds = %__nv_tanhf.exit257
  %709 = fmul float %.01.i259, 0x4007154760000000, !dbg !53
  %710 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %709) #6, !dbg !53
  %711 = fadd float %710, 1.000000e+00, !dbg !53
  %712 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %711) #7, !dbg !53, !srcloc !24
  %713 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i261 = icmp eq i32 %713, 0, !dbg !53
  %714 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %712, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %715 = tail call float @llvm.nvvm.fma.rn.f(float %712, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i262 = select i1 %.not6.i261, float %715, float %714, !dbg !53
  %716 = fcmp oge float %.01.i259, 0x4022059680000000, !dbg !53
  %s.0.i263 = select i1 %716, float 1.000000e+00, float %.03.i262, !dbg !53
  %717 = bitcast float %s.0.i263 to i32, !dbg !53
  %718 = bitcast float %537 to i32, !dbg !53
  %719 = and i32 %718, -2147483648, !dbg !53
  %720 = or i32 %719, %717, !dbg !53
  %721 = bitcast i32 %720 to float, !dbg !53
  br label %__nv_tanhf.exit276, !dbg !53

__internal_fmad.exit3.i265:                       ; preds = %__nv_tanhf.exit257
  %722 = fmul float %537, %537, !dbg !53
  %723 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i266 = icmp eq i32 %723, 0, !dbg !53
  %724 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %722, float 0xBFAAC795C0000000) #6, !dbg !53
  %725 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %722, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i267 = select i1 %.not1.i266, float %725, float %724, !dbg !53
  %726 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i268 = icmp eq i32 %726, 0, !dbg !53
  %727 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i267, float %722, float 0x3FC10B2820000000) #6, !dbg !53
  %728 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i267, float %722, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i269 = select i1 %.not2.i268, float %728, float %727, !dbg !53
  %729 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i270 = icmp eq i32 %729, 0, !dbg !53
  %730 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i269, float %722, float 0xBFD5553DA0000000) #6, !dbg !53
  %731 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i269, float %722, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i271 = select i1 %.not3.i270, float %731, float %730, !dbg !53
  %732 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i272 = icmp eq i32 %732, 0, !dbg !53
  %733 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i271, float %722, float 0.000000e+00) #6, !dbg !53
  %734 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i271, float %722, float 0.000000e+00) #6, !dbg !53
  %.04.i273 = select i1 %.not4.i272, float %734, float %733, !dbg !53
  %735 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i274 = icmp eq i32 %735, 0, !dbg !53
  %736 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i273, float %537, float %537) #6, !dbg !53
  %737 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i273, float %537, float %537) #6, !dbg !53
  %.02.i275 = select i1 %.not5.i274, float %737, float %736, !dbg !53
  br label %__nv_tanhf.exit276, !dbg !53

__nv_tanhf.exit276:                               ; preds = %__internal_fmad.exit1.i260, %__internal_fmad.exit3.i265
  %s.1.i264 = phi float [ %721, %__internal_fmad.exit1.i260 ], [ %.02.i275, %__internal_fmad.exit3.i265 ], !dbg !53
  %738 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i277 = icmp eq i32 %738, 0, !dbg !53
  %739 = tail call float @llvm.nvvm.fabs.ftz.f(float %538) #6, !dbg !53
  %740 = tail call float @llvm.nvvm.fabs.f(float %538) #6, !dbg !53
  %.01.i278 = select i1 %.not.i277, float %740, float %739, !dbg !53
  %741 = fcmp ult float %.01.i278, 0x3FE3333340000000, !dbg !53
  br i1 %741, label %__internal_fmad.exit3.i284, label %__internal_fmad.exit1.i279, !dbg !53

__internal_fmad.exit1.i279:                       ; preds = %__nv_tanhf.exit276
  %742 = fmul float %.01.i278, 0x4007154760000000, !dbg !53
  %743 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %742) #6, !dbg !53
  %744 = fadd float %743, 1.000000e+00, !dbg !53
  %745 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %744) #7, !dbg !53, !srcloc !24
  %746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i280 = icmp eq i32 %746, 0, !dbg !53
  %747 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %745, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %748 = tail call float @llvm.nvvm.fma.rn.f(float %745, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i281 = select i1 %.not6.i280, float %748, float %747, !dbg !53
  %749 = fcmp oge float %.01.i278, 0x4022059680000000, !dbg !53
  %s.0.i282 = select i1 %749, float 1.000000e+00, float %.03.i281, !dbg !53
  %750 = bitcast float %s.0.i282 to i32, !dbg !53
  %751 = bitcast float %538 to i32, !dbg !53
  %752 = and i32 %751, -2147483648, !dbg !53
  %753 = or i32 %752, %750, !dbg !53
  %754 = bitcast i32 %753 to float, !dbg !53
  br label %__nv_tanhf.exit295, !dbg !53

__internal_fmad.exit3.i284:                       ; preds = %__nv_tanhf.exit276
  %755 = fmul float %538, %538, !dbg !53
  %756 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i285 = icmp eq i32 %756, 0, !dbg !53
  %757 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %755, float 0xBFAAC795C0000000) #6, !dbg !53
  %758 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %755, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i286 = select i1 %.not1.i285, float %758, float %757, !dbg !53
  %759 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i287 = icmp eq i32 %759, 0, !dbg !53
  %760 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i286, float %755, float 0x3FC10B2820000000) #6, !dbg !53
  %761 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i286, float %755, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i288 = select i1 %.not2.i287, float %761, float %760, !dbg !53
  %762 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i289 = icmp eq i32 %762, 0, !dbg !53
  %763 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i288, float %755, float 0xBFD5553DA0000000) #6, !dbg !53
  %764 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i288, float %755, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i290 = select i1 %.not3.i289, float %764, float %763, !dbg !53
  %765 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i291 = icmp eq i32 %765, 0, !dbg !53
  %766 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i290, float %755, float 0.000000e+00) #6, !dbg !53
  %767 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i290, float %755, float 0.000000e+00) #6, !dbg !53
  %.04.i292 = select i1 %.not4.i291, float %767, float %766, !dbg !53
  %768 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i293 = icmp eq i32 %768, 0, !dbg !53
  %769 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i292, float %538, float %538) #6, !dbg !53
  %770 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i292, float %538, float %538) #6, !dbg !53
  %.02.i294 = select i1 %.not5.i293, float %770, float %769, !dbg !53
  br label %__nv_tanhf.exit295, !dbg !53

__nv_tanhf.exit295:                               ; preds = %__internal_fmad.exit1.i279, %__internal_fmad.exit3.i284
  %s.1.i283 = phi float [ %754, %__internal_fmad.exit1.i279 ], [ %.02.i294, %__internal_fmad.exit3.i284 ], !dbg !53
  %771 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i296 = icmp eq i32 %771, 0, !dbg !53
  %772 = tail call float @llvm.nvvm.fabs.ftz.f(float %539) #6, !dbg !53
  %773 = tail call float @llvm.nvvm.fabs.f(float %539) #6, !dbg !53
  %.01.i297 = select i1 %.not.i296, float %773, float %772, !dbg !53
  %774 = fcmp ult float %.01.i297, 0x3FE3333340000000, !dbg !53
  br i1 %774, label %__internal_fmad.exit3.i303, label %__internal_fmad.exit1.i298, !dbg !53

__internal_fmad.exit1.i298:                       ; preds = %__nv_tanhf.exit295
  %775 = fmul float %.01.i297, 0x4007154760000000, !dbg !53
  %776 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %775) #6, !dbg !53
  %777 = fadd float %776, 1.000000e+00, !dbg !53
  %778 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %777) #7, !dbg !53, !srcloc !24
  %779 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i299 = icmp eq i32 %779, 0, !dbg !53
  %780 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %778, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %781 = tail call float @llvm.nvvm.fma.rn.f(float %778, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i300 = select i1 %.not6.i299, float %781, float %780, !dbg !53
  %782 = fcmp oge float %.01.i297, 0x4022059680000000, !dbg !53
  %s.0.i301 = select i1 %782, float 1.000000e+00, float %.03.i300, !dbg !53
  %783 = bitcast float %s.0.i301 to i32, !dbg !53
  %784 = bitcast float %539 to i32, !dbg !53
  %785 = and i32 %784, -2147483648, !dbg !53
  %786 = or i32 %785, %783, !dbg !53
  %787 = bitcast i32 %786 to float, !dbg !53
  br label %__nv_tanhf.exit314, !dbg !53

__internal_fmad.exit3.i303:                       ; preds = %__nv_tanhf.exit295
  %788 = fmul float %539, %539, !dbg !53
  %789 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i304 = icmp eq i32 %789, 0, !dbg !53
  %790 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %788, float 0xBFAAC795C0000000) #6, !dbg !53
  %791 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %788, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i305 = select i1 %.not1.i304, float %791, float %790, !dbg !53
  %792 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i306 = icmp eq i32 %792, 0, !dbg !53
  %793 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i305, float %788, float 0x3FC10B2820000000) #6, !dbg !53
  %794 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i305, float %788, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i307 = select i1 %.not2.i306, float %794, float %793, !dbg !53
  %795 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i308 = icmp eq i32 %795, 0, !dbg !53
  %796 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i307, float %788, float 0xBFD5553DA0000000) #6, !dbg !53
  %797 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i307, float %788, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i309 = select i1 %.not3.i308, float %797, float %796, !dbg !53
  %798 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i310 = icmp eq i32 %798, 0, !dbg !53
  %799 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i309, float %788, float 0.000000e+00) #6, !dbg !53
  %800 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i309, float %788, float 0.000000e+00) #6, !dbg !53
  %.04.i311 = select i1 %.not4.i310, float %800, float %799, !dbg !53
  %801 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i312 = icmp eq i32 %801, 0, !dbg !53
  %802 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i311, float %539, float %539) #6, !dbg !53
  %803 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i311, float %539, float %539) #6, !dbg !53
  %.02.i313 = select i1 %.not5.i312, float %803, float %802, !dbg !53
  br label %__nv_tanhf.exit314, !dbg !53

__nv_tanhf.exit314:                               ; preds = %__internal_fmad.exit1.i298, %__internal_fmad.exit3.i303
  %s.1.i302 = phi float [ %787, %__internal_fmad.exit1.i298 ], [ %.02.i313, %__internal_fmad.exit3.i303 ], !dbg !53
  %804 = fmul float %s.1.i169, 5.000000e+01, !dbg !54
  %805 = fmul float %s.1.i188, 5.000000e+01, !dbg !54
  %806 = fmul float %s.1.i207, 5.000000e+01, !dbg !54
  %807 = fmul float %s.1.i226, 5.000000e+01, !dbg !54
  %808 = fmul float %s.1.i245, 5.000000e+01, !dbg !54
  %809 = fmul float %s.1.i264, 5.000000e+01, !dbg !54
  %810 = fmul float %s.1.i283, 5.000000e+01, !dbg !54
  %811 = fmul float %s.1.i302, 5.000000e+01, !dbg !54
  %812 = sub i32 %499, %12, !dbg !55
  %813 = icmp sgt i32 %812, 0, !dbg !56
  %814 = icmp sgt i32 %498, %invariant.op504, !dbg !56
  %815 = icmp sgt i32 %498, %invariant.op505, !dbg !56
  %816 = icmp sgt i32 %498, %invariant.op506, !dbg !56
  %817 = icmp sgt i32 %498, %invariant.op507, !dbg !56
  %818 = icmp sgt i32 %498, %invariant.op508, !dbg !56
  %819 = icmp sgt i32 %498, %invariant.op509, !dbg !56
  %820 = icmp sgt i32 %498, %invariant.op510, !dbg !56
  %821 = select i1 %813, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %822 = select i1 %814, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %823 = select i1 %815, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %824 = select i1 %816, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %825 = select i1 %817, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %826 = select i1 %818, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %827 = select i1 %819, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %828 = select i1 %820, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %829 = fadd float %821, %804, !dbg !58
  %830 = fadd float %822, %805, !dbg !58
  %831 = fadd float %823, %806, !dbg !58
  %832 = fadd float %824, %807, !dbg !58
  %833 = fadd float %825, %808, !dbg !58
  %834 = fadd float %826, %809, !dbg !58
  %835 = fadd float %827, %810, !dbg !58
  %836 = fadd float %828, %811, !dbg !58
  %837 = fsub float %829, %484, !dbg !59
  %838 = fsub float %830, %484, !dbg !59
  %839 = fsub float %831, %484, !dbg !59
  %840 = fsub float %832, %484, !dbg !59
  %841 = fsub float %833, %484, !dbg !59
  %842 = fsub float %834, %484, !dbg !59
  %843 = fsub float %835, %484, !dbg !59
  %844 = fsub float %836, %484, !dbg !59
  %845 = fmul float %837, 0x3FF7154760000000, !dbg !60
  %846 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %845) #6, !dbg !60
  %847 = fmul float %838, 0x3FF7154760000000, !dbg !60
  %848 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %847) #6, !dbg !60
  %849 = fmul float %839, 0x3FF7154760000000, !dbg !60
  %850 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %849) #6, !dbg !60
  %851 = fmul float %840, 0x3FF7154760000000, !dbg !60
  %852 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %851) #6, !dbg !60
  %853 = fmul float %841, 0x3FF7154760000000, !dbg !60
  %854 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %853) #6, !dbg !60
  %855 = fmul float %842, 0x3FF7154760000000, !dbg !60
  %856 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %855) #6, !dbg !60
  %857 = fmul float %843, 0x3FF7154760000000, !dbg !60
  %858 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %857) #6, !dbg !60
  %859 = fmul float %844, 0x3FF7154760000000, !dbg !60
  %860 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %859) #6, !dbg !60
  %861 = fadd float %490, %846, !dbg !61
  %862 = fadd float %491, %848, !dbg !61
  %863 = fadd float %492, %850, !dbg !61
  %864 = fadd float %493, %852, !dbg !61
  %865 = fadd float %494, %854, !dbg !61
  %866 = fadd float %495, %856, !dbg !61
  %867 = fadd float %496, %858, !dbg !61
  %868 = fadd float %497, %860, !dbg !61
  %869 = add nuw nsw i32 %498, 2048, !dbg !45
  %870 = icmp ult i32 %498, 6144, !dbg !45
  br i1 %870, label %489, label %871, !dbg !45

871:                                              ; preds = %__nv_tanhf.exit314
  tail call void @llvm.nvvm.barrier0(), !dbg !62
  %872 = fadd float %861, %862, !dbg !66
  %873 = fadd float %863, %872, !dbg !66
  %874 = fadd float %864, %873, !dbg !66
  %875 = fadd float %865, %874, !dbg !66
  %876 = fadd float %866, %875, !dbg !66
  %877 = fadd float %867, %876, !dbg !66
  %878 = fadd float %868, %877, !dbg !66
  %879 = bitcast float %878 to i32, !dbg !62
  %880 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %879, i32 16, i32 31), !dbg !62
  %881 = bitcast i32 %880 to float, !dbg !62
  %882 = fadd float %878, %881, !dbg !66
  %883 = bitcast float %882 to i32, !dbg !62
  %884 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %883, i32 8, i32 31), !dbg !62
  %885 = bitcast i32 %884 to float, !dbg !62
  %886 = fadd float %882, %885, !dbg !66
  %887 = bitcast float %886 to i32, !dbg !62
  %888 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %887, i32 4, i32 31), !dbg !62
  %889 = bitcast i32 %888 to float, !dbg !62
  %890 = fadd float %886, %889, !dbg !66
  %891 = bitcast float %890 to i32, !dbg !62
  %892 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %891, i32 2, i32 31), !dbg !62
  %893 = bitcast i32 %892 to float, !dbg !62
  %894 = fadd float %890, %893, !dbg !66
  %895 = bitcast float %894 to i32, !dbg !62
  %896 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %895, i32 1, i32 31), !dbg !62
  %897 = bitcast i32 %896 to float, !dbg !62
  %898 = fadd float %894, %897, !dbg !66
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %455, float %898, i1 %453) #6, !dbg !62
  tail call void @llvm.nvvm.barrier0(), !dbg !62
  %899 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %458, i1 %456) #6, !dbg !62
  %900 = bitcast float %899 to i32, !dbg !62
  %901 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %900, i32 4, i32 31), !dbg !62
  %902 = bitcast i32 %901 to float, !dbg !62
  %903 = fadd float %899, %902, !dbg !66
  %904 = bitcast float %903 to i32, !dbg !62
  %905 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %904, i32 2, i32 31), !dbg !62
  %906 = bitcast i32 %905 to float, !dbg !62
  %907 = fadd float %903, %906, !dbg !66
  %908 = bitcast float %907 to i32, !dbg !62
  %909 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %908, i32 1, i32 31), !dbg !62
  %910 = bitcast i32 %909 to float, !dbg !62
  %911 = fadd float %907, %910, !dbg !66
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %458, float %911, i1 %483) #6, !dbg !62
  tail call void @llvm.nvvm.barrier0(), !dbg !62
  %912 = load float, ptr addrspace(3) @global_smem, align 4, !dbg !62
  %invariant.op511 = sub nsw i32 0, %14, !dbg !70
  %invariant.op512 = sub nsw i32 0, %15, !dbg !70
  %invariant.op513 = sub nsw i32 0, %16, !dbg !70
  %invariant.op514 = sub nsw i32 0, %485, !dbg !70
  %invariant.op515 = sub nsw i32 0, %486, !dbg !70
  %invariant.op516 = sub nsw i32 0, %487, !dbg !70
  %invariant.op517 = sub nsw i32 0, %488, !dbg !70
  br label %913, !dbg !70

913:                                              ; preds = %871, %__nv_tanhf.exit162
  %914 = phi i32 [ 0, %871 ], [ %1306, %__nv_tanhf.exit162 ]
  %915 = or i32 %914, %7, !dbg !71
  %916 = add i32 %915, %13, !dbg !72
  %917 = sext i32 %916 to i64, !dbg !73
  %918 = getelementptr i16, ptr addrspace(1) %0, i64 %917, !dbg !73
  %919 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %918, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !74
  %920 = extractvalue { i32, i32, i32, i32 } %919, 0, !dbg !74
  %921 = extractvalue { i32, i32, i32, i32 } %919, 1, !dbg !74
  %922 = extractvalue { i32, i32, i32, i32 } %919, 2, !dbg !74
  %923 = extractvalue { i32, i32, i32, i32 } %919, 3, !dbg !74
  %924 = trunc i32 %920 to i16, !dbg !74
  %extelt.offset = lshr i32 %920, 16, !dbg !74
  %925 = trunc i32 %extelt.offset to i16, !dbg !74
  %926 = trunc i32 %921 to i16, !dbg !74
  %extelt.offset3 = lshr i32 %921, 16, !dbg !74
  %927 = trunc i32 %extelt.offset3 to i16, !dbg !74
  %928 = trunc i32 %922 to i16, !dbg !74
  %extelt.offset4 = lshr i32 %922, 16, !dbg !74
  %929 = trunc i32 %extelt.offset4 to i16, !dbg !74
  %930 = trunc i32 %923 to i16, !dbg !74
  %extelt.offset5 = lshr i32 %923, 16, !dbg !74
  %931 = trunc i32 %extelt.offset5 to i16, !dbg !74
  %932 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %924) #6, !dbg !75
  %933 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %925) #6, !dbg !75
  %934 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %926) #6, !dbg !75
  %935 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %927) #6, !dbg !75
  %936 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %928) #6, !dbg !75
  %937 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %929) #6, !dbg !75
  %938 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %930) #6, !dbg !75
  %939 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %931) #6, !dbg !75
  %940 = fmul float %932, 6.250000e-02, !dbg !76
  %941 = fmul float %933, 6.250000e-02, !dbg !76
  %942 = fmul float %934, 6.250000e-02, !dbg !76
  %943 = fmul float %935, 6.250000e-02, !dbg !76
  %944 = fmul float %936, 6.250000e-02, !dbg !76
  %945 = fmul float %937, 6.250000e-02, !dbg !76
  %946 = fmul float %938, 6.250000e-02, !dbg !76
  %947 = fmul float %939, 6.250000e-02, !dbg !76
  %948 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %940, float 5.000000e+01) #6, !dbg !77
  %949 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %941, float 5.000000e+01) #6, !dbg !77
  %950 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %942, float 5.000000e+01) #6, !dbg !77
  %951 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %943, float 5.000000e+01) #6, !dbg !77
  %952 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %944, float 5.000000e+01) #6, !dbg !77
  %953 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %945, float 5.000000e+01) #6, !dbg !77
  %954 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %946, float 5.000000e+01) #6, !dbg !77
  %955 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %947, float 5.000000e+01) #6, !dbg !77
  %956 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i = icmp eq i32 %956, 0, !dbg !78
  %957 = tail call float @llvm.nvvm.fabs.ftz.f(float %948) #6, !dbg !78
  %958 = tail call float @llvm.nvvm.fabs.f(float %948) #6, !dbg !78
  %.01.i = select i1 %.not.i, float %958, float %957, !dbg !78
  %959 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !78
  br i1 %959, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !78

__internal_fmad.exit1.i:                          ; preds = %913
  %960 = fmul float %.01.i, 0x4007154760000000, !dbg !78
  %961 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %960) #6, !dbg !78
  %962 = fadd float %961, 1.000000e+00, !dbg !78
  %963 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %962) #7, !dbg !78, !srcloc !24
  %964 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i = icmp eq i32 %964, 0, !dbg !78
  %965 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %963, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %966 = tail call float @llvm.nvvm.fma.rn.f(float %963, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i = select i1 %.not6.i, float %966, float %965, !dbg !78
  %967 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !78
  %s.0.i = select i1 %967, float 1.000000e+00, float %.03.i, !dbg !78
  %968 = bitcast float %s.0.i to i32, !dbg !78
  %969 = bitcast float %948 to i32, !dbg !78
  %970 = and i32 %969, -2147483648, !dbg !78
  %971 = or i32 %970, %968, !dbg !78
  %972 = bitcast i32 %971 to float, !dbg !78
  br label %__nv_tanhf.exit, !dbg !78

__internal_fmad.exit3.i:                          ; preds = %913
  %973 = fmul float %948, %948, !dbg !78
  %974 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i = icmp eq i32 %974, 0, !dbg !78
  %975 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %973, float 0xBFAAC795C0000000) #6, !dbg !78
  %976 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %973, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i = select i1 %.not1.i, float %976, float %975, !dbg !78
  %977 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i = icmp eq i32 %977, 0, !dbg !78
  %978 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %973, float 0x3FC10B2820000000) #6, !dbg !78
  %979 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %973, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i = select i1 %.not2.i, float %979, float %978, !dbg !78
  %980 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i = icmp eq i32 %980, 0, !dbg !78
  %981 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %973, float 0xBFD5553DA0000000) #6, !dbg !78
  %982 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %973, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i = select i1 %.not3.i, float %982, float %981, !dbg !78
  %983 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i = icmp eq i32 %983, 0, !dbg !78
  %984 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %973, float 0.000000e+00) #6, !dbg !78
  %985 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %973, float 0.000000e+00) #6, !dbg !78
  %.04.i = select i1 %.not4.i, float %985, float %984, !dbg !78
  %986 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i = icmp eq i32 %986, 0, !dbg !78
  %987 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %948, float %948) #6, !dbg !78
  %988 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %948, float %948) #6, !dbg !78
  %.02.i = select i1 %.not5.i, float %988, float %987, !dbg !78
  br label %__nv_tanhf.exit, !dbg !78

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %972, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !78
  %989 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i30 = icmp eq i32 %989, 0, !dbg !78
  %990 = tail call float @llvm.nvvm.fabs.ftz.f(float %949) #6, !dbg !78
  %991 = tail call float @llvm.nvvm.fabs.f(float %949) #6, !dbg !78
  %.01.i31 = select i1 %.not.i30, float %991, float %990, !dbg !78
  %992 = fcmp ult float %.01.i31, 0x3FE3333340000000, !dbg !78
  br i1 %992, label %__internal_fmad.exit3.i37, label %__internal_fmad.exit1.i32, !dbg !78

__internal_fmad.exit1.i32:                        ; preds = %__nv_tanhf.exit
  %993 = fmul float %.01.i31, 0x4007154760000000, !dbg !78
  %994 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %993) #6, !dbg !78
  %995 = fadd float %994, 1.000000e+00, !dbg !78
  %996 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %995) #7, !dbg !78, !srcloc !24
  %997 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i33 = icmp eq i32 %997, 0, !dbg !78
  %998 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %996, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %999 = tail call float @llvm.nvvm.fma.rn.f(float %996, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i34 = select i1 %.not6.i33, float %999, float %998, !dbg !78
  %1000 = fcmp oge float %.01.i31, 0x4022059680000000, !dbg !78
  %s.0.i35 = select i1 %1000, float 1.000000e+00, float %.03.i34, !dbg !78
  %1001 = bitcast float %s.0.i35 to i32, !dbg !78
  %1002 = bitcast float %949 to i32, !dbg !78
  %1003 = and i32 %1002, -2147483648, !dbg !78
  %1004 = or i32 %1003, %1001, !dbg !78
  %1005 = bitcast i32 %1004 to float, !dbg !78
  br label %__nv_tanhf.exit48, !dbg !78

__internal_fmad.exit3.i37:                        ; preds = %__nv_tanhf.exit
  %1006 = fmul float %949, %949, !dbg !78
  %1007 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i38 = icmp eq i32 %1007, 0, !dbg !78
  %1008 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1006, float 0xBFAAC795C0000000) #6, !dbg !78
  %1009 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1006, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i39 = select i1 %.not1.i38, float %1009, float %1008, !dbg !78
  %1010 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i40 = icmp eq i32 %1010, 0, !dbg !78
  %1011 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i39, float %1006, float 0x3FC10B2820000000) #6, !dbg !78
  %1012 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i39, float %1006, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i41 = select i1 %.not2.i40, float %1012, float %1011, !dbg !78
  %1013 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i42 = icmp eq i32 %1013, 0, !dbg !78
  %1014 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i41, float %1006, float 0xBFD5553DA0000000) #6, !dbg !78
  %1015 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i41, float %1006, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i43 = select i1 %.not3.i42, float %1015, float %1014, !dbg !78
  %1016 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i44 = icmp eq i32 %1016, 0, !dbg !78
  %1017 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i43, float %1006, float 0.000000e+00) #6, !dbg !78
  %1018 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i43, float %1006, float 0.000000e+00) #6, !dbg !78
  %.04.i45 = select i1 %.not4.i44, float %1018, float %1017, !dbg !78
  %1019 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i46 = icmp eq i32 %1019, 0, !dbg !78
  %1020 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i45, float %949, float %949) #6, !dbg !78
  %1021 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i45, float %949, float %949) #6, !dbg !78
  %.02.i47 = select i1 %.not5.i46, float %1021, float %1020, !dbg !78
  br label %__nv_tanhf.exit48, !dbg !78

__nv_tanhf.exit48:                                ; preds = %__internal_fmad.exit1.i32, %__internal_fmad.exit3.i37
  %s.1.i36 = phi float [ %1005, %__internal_fmad.exit1.i32 ], [ %.02.i47, %__internal_fmad.exit3.i37 ], !dbg !78
  %1022 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i49 = icmp eq i32 %1022, 0, !dbg !78
  %1023 = tail call float @llvm.nvvm.fabs.ftz.f(float %950) #6, !dbg !78
  %1024 = tail call float @llvm.nvvm.fabs.f(float %950) #6, !dbg !78
  %.01.i50 = select i1 %.not.i49, float %1024, float %1023, !dbg !78
  %1025 = fcmp ult float %.01.i50, 0x3FE3333340000000, !dbg !78
  br i1 %1025, label %__internal_fmad.exit3.i56, label %__internal_fmad.exit1.i51, !dbg !78

__internal_fmad.exit1.i51:                        ; preds = %__nv_tanhf.exit48
  %1026 = fmul float %.01.i50, 0x4007154760000000, !dbg !78
  %1027 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1026) #6, !dbg !78
  %1028 = fadd float %1027, 1.000000e+00, !dbg !78
  %1029 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1028) #7, !dbg !78, !srcloc !24
  %1030 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i52 = icmp eq i32 %1030, 0, !dbg !78
  %1031 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1029, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %1032 = tail call float @llvm.nvvm.fma.rn.f(float %1029, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i53 = select i1 %.not6.i52, float %1032, float %1031, !dbg !78
  %1033 = fcmp oge float %.01.i50, 0x4022059680000000, !dbg !78
  %s.0.i54 = select i1 %1033, float 1.000000e+00, float %.03.i53, !dbg !78
  %1034 = bitcast float %s.0.i54 to i32, !dbg !78
  %1035 = bitcast float %950 to i32, !dbg !78
  %1036 = and i32 %1035, -2147483648, !dbg !78
  %1037 = or i32 %1036, %1034, !dbg !78
  %1038 = bitcast i32 %1037 to float, !dbg !78
  br label %__nv_tanhf.exit67, !dbg !78

__internal_fmad.exit3.i56:                        ; preds = %__nv_tanhf.exit48
  %1039 = fmul float %950, %950, !dbg !78
  %1040 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i57 = icmp eq i32 %1040, 0, !dbg !78
  %1041 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1039, float 0xBFAAC795C0000000) #6, !dbg !78
  %1042 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1039, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i58 = select i1 %.not1.i57, float %1042, float %1041, !dbg !78
  %1043 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i59 = icmp eq i32 %1043, 0, !dbg !78
  %1044 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i58, float %1039, float 0x3FC10B2820000000) #6, !dbg !78
  %1045 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i58, float %1039, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i60 = select i1 %.not2.i59, float %1045, float %1044, !dbg !78
  %1046 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i61 = icmp eq i32 %1046, 0, !dbg !78
  %1047 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i60, float %1039, float 0xBFD5553DA0000000) #6, !dbg !78
  %1048 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i60, float %1039, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i62 = select i1 %.not3.i61, float %1048, float %1047, !dbg !78
  %1049 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i63 = icmp eq i32 %1049, 0, !dbg !78
  %1050 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i62, float %1039, float 0.000000e+00) #6, !dbg !78
  %1051 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i62, float %1039, float 0.000000e+00) #6, !dbg !78
  %.04.i64 = select i1 %.not4.i63, float %1051, float %1050, !dbg !78
  %1052 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i65 = icmp eq i32 %1052, 0, !dbg !78
  %1053 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i64, float %950, float %950) #6, !dbg !78
  %1054 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i64, float %950, float %950) #6, !dbg !78
  %.02.i66 = select i1 %.not5.i65, float %1054, float %1053, !dbg !78
  br label %__nv_tanhf.exit67, !dbg !78

__nv_tanhf.exit67:                                ; preds = %__internal_fmad.exit1.i51, %__internal_fmad.exit3.i56
  %s.1.i55 = phi float [ %1038, %__internal_fmad.exit1.i51 ], [ %.02.i66, %__internal_fmad.exit3.i56 ], !dbg !78
  %1055 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i68 = icmp eq i32 %1055, 0, !dbg !78
  %1056 = tail call float @llvm.nvvm.fabs.ftz.f(float %951) #6, !dbg !78
  %1057 = tail call float @llvm.nvvm.fabs.f(float %951) #6, !dbg !78
  %.01.i69 = select i1 %.not.i68, float %1057, float %1056, !dbg !78
  %1058 = fcmp ult float %.01.i69, 0x3FE3333340000000, !dbg !78
  br i1 %1058, label %__internal_fmad.exit3.i75, label %__internal_fmad.exit1.i70, !dbg !78

__internal_fmad.exit1.i70:                        ; preds = %__nv_tanhf.exit67
  %1059 = fmul float %.01.i69, 0x4007154760000000, !dbg !78
  %1060 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1059) #6, !dbg !78
  %1061 = fadd float %1060, 1.000000e+00, !dbg !78
  %1062 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1061) #7, !dbg !78, !srcloc !24
  %1063 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i71 = icmp eq i32 %1063, 0, !dbg !78
  %1064 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1062, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %1065 = tail call float @llvm.nvvm.fma.rn.f(float %1062, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i72 = select i1 %.not6.i71, float %1065, float %1064, !dbg !78
  %1066 = fcmp oge float %.01.i69, 0x4022059680000000, !dbg !78
  %s.0.i73 = select i1 %1066, float 1.000000e+00, float %.03.i72, !dbg !78
  %1067 = bitcast float %s.0.i73 to i32, !dbg !78
  %1068 = bitcast float %951 to i32, !dbg !78
  %1069 = and i32 %1068, -2147483648, !dbg !78
  %1070 = or i32 %1069, %1067, !dbg !78
  %1071 = bitcast i32 %1070 to float, !dbg !78
  br label %__nv_tanhf.exit86, !dbg !78

__internal_fmad.exit3.i75:                        ; preds = %__nv_tanhf.exit67
  %1072 = fmul float %951, %951, !dbg !78
  %1073 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i76 = icmp eq i32 %1073, 0, !dbg !78
  %1074 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1072, float 0xBFAAC795C0000000) #6, !dbg !78
  %1075 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1072, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i77 = select i1 %.not1.i76, float %1075, float %1074, !dbg !78
  %1076 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i78 = icmp eq i32 %1076, 0, !dbg !78
  %1077 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i77, float %1072, float 0x3FC10B2820000000) #6, !dbg !78
  %1078 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i77, float %1072, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i79 = select i1 %.not2.i78, float %1078, float %1077, !dbg !78
  %1079 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i80 = icmp eq i32 %1079, 0, !dbg !78
  %1080 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i79, float %1072, float 0xBFD5553DA0000000) #6, !dbg !78
  %1081 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i79, float %1072, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i81 = select i1 %.not3.i80, float %1081, float %1080, !dbg !78
  %1082 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i82 = icmp eq i32 %1082, 0, !dbg !78
  %1083 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i81, float %1072, float 0.000000e+00) #6, !dbg !78
  %1084 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i81, float %1072, float 0.000000e+00) #6, !dbg !78
  %.04.i83 = select i1 %.not4.i82, float %1084, float %1083, !dbg !78
  %1085 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i84 = icmp eq i32 %1085, 0, !dbg !78
  %1086 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i83, float %951, float %951) #6, !dbg !78
  %1087 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i83, float %951, float %951) #6, !dbg !78
  %.02.i85 = select i1 %.not5.i84, float %1087, float %1086, !dbg !78
  br label %__nv_tanhf.exit86, !dbg !78

__nv_tanhf.exit86:                                ; preds = %__internal_fmad.exit1.i70, %__internal_fmad.exit3.i75
  %s.1.i74 = phi float [ %1071, %__internal_fmad.exit1.i70 ], [ %.02.i85, %__internal_fmad.exit3.i75 ], !dbg !78
  %1088 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i87 = icmp eq i32 %1088, 0, !dbg !78
  %1089 = tail call float @llvm.nvvm.fabs.ftz.f(float %952) #6, !dbg !78
  %1090 = tail call float @llvm.nvvm.fabs.f(float %952) #6, !dbg !78
  %.01.i88 = select i1 %.not.i87, float %1090, float %1089, !dbg !78
  %1091 = fcmp ult float %.01.i88, 0x3FE3333340000000, !dbg !78
  br i1 %1091, label %__internal_fmad.exit3.i94, label %__internal_fmad.exit1.i89, !dbg !78

__internal_fmad.exit1.i89:                        ; preds = %__nv_tanhf.exit86
  %1092 = fmul float %.01.i88, 0x4007154760000000, !dbg !78
  %1093 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1092) #6, !dbg !78
  %1094 = fadd float %1093, 1.000000e+00, !dbg !78
  %1095 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1094) #7, !dbg !78, !srcloc !24
  %1096 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i90 = icmp eq i32 %1096, 0, !dbg !78
  %1097 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1095, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %1098 = tail call float @llvm.nvvm.fma.rn.f(float %1095, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i91 = select i1 %.not6.i90, float %1098, float %1097, !dbg !78
  %1099 = fcmp oge float %.01.i88, 0x4022059680000000, !dbg !78
  %s.0.i92 = select i1 %1099, float 1.000000e+00, float %.03.i91, !dbg !78
  %1100 = bitcast float %s.0.i92 to i32, !dbg !78
  %1101 = bitcast float %952 to i32, !dbg !78
  %1102 = and i32 %1101, -2147483648, !dbg !78
  %1103 = or i32 %1102, %1100, !dbg !78
  %1104 = bitcast i32 %1103 to float, !dbg !78
  br label %__nv_tanhf.exit105, !dbg !78

__internal_fmad.exit3.i94:                        ; preds = %__nv_tanhf.exit86
  %1105 = fmul float %952, %952, !dbg !78
  %1106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i95 = icmp eq i32 %1106, 0, !dbg !78
  %1107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1105, float 0xBFAAC795C0000000) #6, !dbg !78
  %1108 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1105, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i96 = select i1 %.not1.i95, float %1108, float %1107, !dbg !78
  %1109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i97 = icmp eq i32 %1109, 0, !dbg !78
  %1110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i96, float %1105, float 0x3FC10B2820000000) #6, !dbg !78
  %1111 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i96, float %1105, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i98 = select i1 %.not2.i97, float %1111, float %1110, !dbg !78
  %1112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i99 = icmp eq i32 %1112, 0, !dbg !78
  %1113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i98, float %1105, float 0xBFD5553DA0000000) #6, !dbg !78
  %1114 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i98, float %1105, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i100 = select i1 %.not3.i99, float %1114, float %1113, !dbg !78
  %1115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i101 = icmp eq i32 %1115, 0, !dbg !78
  %1116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i100, float %1105, float 0.000000e+00) #6, !dbg !78
  %1117 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i100, float %1105, float 0.000000e+00) #6, !dbg !78
  %.04.i102 = select i1 %.not4.i101, float %1117, float %1116, !dbg !78
  %1118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i103 = icmp eq i32 %1118, 0, !dbg !78
  %1119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i102, float %952, float %952) #6, !dbg !78
  %1120 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i102, float %952, float %952) #6, !dbg !78
  %.02.i104 = select i1 %.not5.i103, float %1120, float %1119, !dbg !78
  br label %__nv_tanhf.exit105, !dbg !78

__nv_tanhf.exit105:                               ; preds = %__internal_fmad.exit1.i89, %__internal_fmad.exit3.i94
  %s.1.i93 = phi float [ %1104, %__internal_fmad.exit1.i89 ], [ %.02.i104, %__internal_fmad.exit3.i94 ], !dbg !78
  %1121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i106 = icmp eq i32 %1121, 0, !dbg !78
  %1122 = tail call float @llvm.nvvm.fabs.ftz.f(float %953) #6, !dbg !78
  %1123 = tail call float @llvm.nvvm.fabs.f(float %953) #6, !dbg !78
  %.01.i107 = select i1 %.not.i106, float %1123, float %1122, !dbg !78
  %1124 = fcmp ult float %.01.i107, 0x3FE3333340000000, !dbg !78
  br i1 %1124, label %__internal_fmad.exit3.i113, label %__internal_fmad.exit1.i108, !dbg !78

__internal_fmad.exit1.i108:                       ; preds = %__nv_tanhf.exit105
  %1125 = fmul float %.01.i107, 0x4007154760000000, !dbg !78
  %1126 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1125) #6, !dbg !78
  %1127 = fadd float %1126, 1.000000e+00, !dbg !78
  %1128 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1127) #7, !dbg !78, !srcloc !24
  %1129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i109 = icmp eq i32 %1129, 0, !dbg !78
  %1130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1128, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %1131 = tail call float @llvm.nvvm.fma.rn.f(float %1128, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i110 = select i1 %.not6.i109, float %1131, float %1130, !dbg !78
  %1132 = fcmp oge float %.01.i107, 0x4022059680000000, !dbg !78
  %s.0.i111 = select i1 %1132, float 1.000000e+00, float %.03.i110, !dbg !78
  %1133 = bitcast float %s.0.i111 to i32, !dbg !78
  %1134 = bitcast float %953 to i32, !dbg !78
  %1135 = and i32 %1134, -2147483648, !dbg !78
  %1136 = or i32 %1135, %1133, !dbg !78
  %1137 = bitcast i32 %1136 to float, !dbg !78
  br label %__nv_tanhf.exit124, !dbg !78

__internal_fmad.exit3.i113:                       ; preds = %__nv_tanhf.exit105
  %1138 = fmul float %953, %953, !dbg !78
  %1139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i114 = icmp eq i32 %1139, 0, !dbg !78
  %1140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1138, float 0xBFAAC795C0000000) #6, !dbg !78
  %1141 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1138, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i115 = select i1 %.not1.i114, float %1141, float %1140, !dbg !78
  %1142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i116 = icmp eq i32 %1142, 0, !dbg !78
  %1143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i115, float %1138, float 0x3FC10B2820000000) #6, !dbg !78
  %1144 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i115, float %1138, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i117 = select i1 %.not2.i116, float %1144, float %1143, !dbg !78
  %1145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i118 = icmp eq i32 %1145, 0, !dbg !78
  %1146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i117, float %1138, float 0xBFD5553DA0000000) #6, !dbg !78
  %1147 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i117, float %1138, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i119 = select i1 %.not3.i118, float %1147, float %1146, !dbg !78
  %1148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i120 = icmp eq i32 %1148, 0, !dbg !78
  %1149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i119, float %1138, float 0.000000e+00) #6, !dbg !78
  %1150 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i119, float %1138, float 0.000000e+00) #6, !dbg !78
  %.04.i121 = select i1 %.not4.i120, float %1150, float %1149, !dbg !78
  %1151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i122 = icmp eq i32 %1151, 0, !dbg !78
  %1152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i121, float %953, float %953) #6, !dbg !78
  %1153 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i121, float %953, float %953) #6, !dbg !78
  %.02.i123 = select i1 %.not5.i122, float %1153, float %1152, !dbg !78
  br label %__nv_tanhf.exit124, !dbg !78

__nv_tanhf.exit124:                               ; preds = %__internal_fmad.exit1.i108, %__internal_fmad.exit3.i113
  %s.1.i112 = phi float [ %1137, %__internal_fmad.exit1.i108 ], [ %.02.i123, %__internal_fmad.exit3.i113 ], !dbg !78
  %1154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i125 = icmp eq i32 %1154, 0, !dbg !78
  %1155 = tail call float @llvm.nvvm.fabs.ftz.f(float %954) #6, !dbg !78
  %1156 = tail call float @llvm.nvvm.fabs.f(float %954) #6, !dbg !78
  %.01.i126 = select i1 %.not.i125, float %1156, float %1155, !dbg !78
  %1157 = fcmp ult float %.01.i126, 0x3FE3333340000000, !dbg !78
  br i1 %1157, label %__internal_fmad.exit3.i132, label %__internal_fmad.exit1.i127, !dbg !78

__internal_fmad.exit1.i127:                       ; preds = %__nv_tanhf.exit124
  %1158 = fmul float %.01.i126, 0x4007154760000000, !dbg !78
  %1159 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1158) #6, !dbg !78
  %1160 = fadd float %1159, 1.000000e+00, !dbg !78
  %1161 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1160) #7, !dbg !78, !srcloc !24
  %1162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i128 = icmp eq i32 %1162, 0, !dbg !78
  %1163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1161, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %1164 = tail call float @llvm.nvvm.fma.rn.f(float %1161, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i129 = select i1 %.not6.i128, float %1164, float %1163, !dbg !78
  %1165 = fcmp oge float %.01.i126, 0x4022059680000000, !dbg !78
  %s.0.i130 = select i1 %1165, float 1.000000e+00, float %.03.i129, !dbg !78
  %1166 = bitcast float %s.0.i130 to i32, !dbg !78
  %1167 = bitcast float %954 to i32, !dbg !78
  %1168 = and i32 %1167, -2147483648, !dbg !78
  %1169 = or i32 %1168, %1166, !dbg !78
  %1170 = bitcast i32 %1169 to float, !dbg !78
  br label %__nv_tanhf.exit143, !dbg !78

__internal_fmad.exit3.i132:                       ; preds = %__nv_tanhf.exit124
  %1171 = fmul float %954, %954, !dbg !78
  %1172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i133 = icmp eq i32 %1172, 0, !dbg !78
  %1173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1171, float 0xBFAAC795C0000000) #6, !dbg !78
  %1174 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1171, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i134 = select i1 %.not1.i133, float %1174, float %1173, !dbg !78
  %1175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i135 = icmp eq i32 %1175, 0, !dbg !78
  %1176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i134, float %1171, float 0x3FC10B2820000000) #6, !dbg !78
  %1177 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i134, float %1171, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i136 = select i1 %.not2.i135, float %1177, float %1176, !dbg !78
  %1178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i137 = icmp eq i32 %1178, 0, !dbg !78
  %1179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i136, float %1171, float 0xBFD5553DA0000000) #6, !dbg !78
  %1180 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i136, float %1171, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i138 = select i1 %.not3.i137, float %1180, float %1179, !dbg !78
  %1181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i139 = icmp eq i32 %1181, 0, !dbg !78
  %1182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i138, float %1171, float 0.000000e+00) #6, !dbg !78
  %1183 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i138, float %1171, float 0.000000e+00) #6, !dbg !78
  %.04.i140 = select i1 %.not4.i139, float %1183, float %1182, !dbg !78
  %1184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i141 = icmp eq i32 %1184, 0, !dbg !78
  %1185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i140, float %954, float %954) #6, !dbg !78
  %1186 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i140, float %954, float %954) #6, !dbg !78
  %.02.i142 = select i1 %.not5.i141, float %1186, float %1185, !dbg !78
  br label %__nv_tanhf.exit143, !dbg !78

__nv_tanhf.exit143:                               ; preds = %__internal_fmad.exit1.i127, %__internal_fmad.exit3.i132
  %s.1.i131 = phi float [ %1170, %__internal_fmad.exit1.i127 ], [ %.02.i142, %__internal_fmad.exit3.i132 ], !dbg !78
  %1187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i144 = icmp eq i32 %1187, 0, !dbg !78
  %1188 = tail call float @llvm.nvvm.fabs.ftz.f(float %955) #6, !dbg !78
  %1189 = tail call float @llvm.nvvm.fabs.f(float %955) #6, !dbg !78
  %.01.i145 = select i1 %.not.i144, float %1189, float %1188, !dbg !78
  %1190 = fcmp ult float %.01.i145, 0x3FE3333340000000, !dbg !78
  br i1 %1190, label %__internal_fmad.exit3.i151, label %__internal_fmad.exit1.i146, !dbg !78

__internal_fmad.exit1.i146:                       ; preds = %__nv_tanhf.exit143
  %1191 = fmul float %.01.i145, 0x4007154760000000, !dbg !78
  %1192 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1191) #6, !dbg !78
  %1193 = fadd float %1192, 1.000000e+00, !dbg !78
  %1194 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1193) #7, !dbg !78, !srcloc !24
  %1195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i147 = icmp eq i32 %1195, 0, !dbg !78
  %1196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1194, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %1197 = tail call float @llvm.nvvm.fma.rn.f(float %1194, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i148 = select i1 %.not6.i147, float %1197, float %1196, !dbg !78
  %1198 = fcmp oge float %.01.i145, 0x4022059680000000, !dbg !78
  %s.0.i149 = select i1 %1198, float 1.000000e+00, float %.03.i148, !dbg !78
  %1199 = bitcast float %s.0.i149 to i32, !dbg !78
  %1200 = bitcast float %955 to i32, !dbg !78
  %1201 = and i32 %1200, -2147483648, !dbg !78
  %1202 = or i32 %1201, %1199, !dbg !78
  %1203 = bitcast i32 %1202 to float, !dbg !78
  br label %__nv_tanhf.exit162, !dbg !78

__internal_fmad.exit3.i151:                       ; preds = %__nv_tanhf.exit143
  %1204 = fmul float %955, %955, !dbg !78
  %1205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i152 = icmp eq i32 %1205, 0, !dbg !78
  %1206 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1204, float 0xBFAAC795C0000000) #6, !dbg !78
  %1207 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1204, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i153 = select i1 %.not1.i152, float %1207, float %1206, !dbg !78
  %1208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i154 = icmp eq i32 %1208, 0, !dbg !78
  %1209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i153, float %1204, float 0x3FC10B2820000000) #6, !dbg !78
  %1210 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i153, float %1204, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i155 = select i1 %.not2.i154, float %1210, float %1209, !dbg !78
  %1211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i156 = icmp eq i32 %1211, 0, !dbg !78
  %1212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i155, float %1204, float 0xBFD5553DA0000000) #6, !dbg !78
  %1213 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i155, float %1204, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i157 = select i1 %.not3.i156, float %1213, float %1212, !dbg !78
  %1214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i158 = icmp eq i32 %1214, 0, !dbg !78
  %1215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i157, float %1204, float 0.000000e+00) #6, !dbg !78
  %1216 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i157, float %1204, float 0.000000e+00) #6, !dbg !78
  %.04.i159 = select i1 %.not4.i158, float %1216, float %1215, !dbg !78
  %1217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i160 = icmp eq i32 %1217, 0, !dbg !78
  %1218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i159, float %955, float %955) #6, !dbg !78
  %1219 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i159, float %955, float %955) #6, !dbg !78
  %.02.i161 = select i1 %.not5.i160, float %1219, float %1218, !dbg !78
  br label %__nv_tanhf.exit162, !dbg !78

__nv_tanhf.exit162:                               ; preds = %__internal_fmad.exit1.i146, %__internal_fmad.exit3.i151
  %s.1.i150 = phi float [ %1203, %__internal_fmad.exit1.i146 ], [ %.02.i161, %__internal_fmad.exit3.i151 ], !dbg !78
  %1220 = fmul float %s.1.i, 5.000000e+01, !dbg !79
  %1221 = fmul float %s.1.i36, 5.000000e+01, !dbg !79
  %1222 = fmul float %s.1.i55, 5.000000e+01, !dbg !79
  %1223 = fmul float %s.1.i74, 5.000000e+01, !dbg !79
  %1224 = fmul float %s.1.i93, 5.000000e+01, !dbg !79
  %1225 = fmul float %s.1.i112, 5.000000e+01, !dbg !79
  %1226 = fmul float %s.1.i131, 5.000000e+01, !dbg !79
  %1227 = fmul float %s.1.i150, 5.000000e+01, !dbg !79
  %1228 = sub i32 %915, %12, !dbg !80
  %1229 = icmp sgt i32 %1228, 0, !dbg !81
  %1230 = icmp sgt i32 %914, %invariant.op511, !dbg !81
  %1231 = icmp sgt i32 %914, %invariant.op512, !dbg !81
  %1232 = icmp sgt i32 %914, %invariant.op513, !dbg !81
  %1233 = icmp sgt i32 %914, %invariant.op514, !dbg !81
  %1234 = icmp sgt i32 %914, %invariant.op515, !dbg !81
  %1235 = icmp sgt i32 %914, %invariant.op516, !dbg !81
  %1236 = icmp sgt i32 %914, %invariant.op517, !dbg !81
  %1237 = select i1 %1229, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1238 = select i1 %1230, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1239 = select i1 %1231, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1240 = select i1 %1232, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1241 = select i1 %1233, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1242 = select i1 %1234, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1243 = select i1 %1235, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1244 = select i1 %1236, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1245 = fadd float %1237, %1220, !dbg !83
  %1246 = fadd float %1238, %1221, !dbg !83
  %1247 = fadd float %1239, %1222, !dbg !83
  %1248 = fadd float %1240, %1223, !dbg !83
  %1249 = fadd float %1241, %1224, !dbg !83
  %1250 = fadd float %1242, %1225, !dbg !83
  %1251 = fadd float %1243, %1226, !dbg !83
  %1252 = fadd float %1244, %1227, !dbg !83
  %1253 = fsub float %1245, %484, !dbg !84
  %1254 = fsub float %1246, %484, !dbg !84
  %1255 = fsub float %1247, %484, !dbg !84
  %1256 = fsub float %1248, %484, !dbg !84
  %1257 = fsub float %1249, %484, !dbg !84
  %1258 = fsub float %1250, %484, !dbg !84
  %1259 = fsub float %1251, %484, !dbg !84
  %1260 = fsub float %1252, %484, !dbg !84
  %1261 = fmul float %1253, 0x3FF7154760000000, !dbg !85
  %1262 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1261) #6, !dbg !85
  %1263 = fmul float %1254, 0x3FF7154760000000, !dbg !85
  %1264 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1263) #6, !dbg !85
  %1265 = fmul float %1255, 0x3FF7154760000000, !dbg !85
  %1266 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1265) #6, !dbg !85
  %1267 = fmul float %1256, 0x3FF7154760000000, !dbg !85
  %1268 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1267) #6, !dbg !85
  %1269 = fmul float %1257, 0x3FF7154760000000, !dbg !85
  %1270 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1269) #6, !dbg !85
  %1271 = fmul float %1258, 0x3FF7154760000000, !dbg !85
  %1272 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1271) #6, !dbg !85
  %1273 = fmul float %1259, 0x3FF7154760000000, !dbg !85
  %1274 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1273) #6, !dbg !85
  %1275 = fmul float %1260, 0x3FF7154760000000, !dbg !85
  %1276 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1275) #6, !dbg !85
  %1277 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1262, float %912) #6, !dbg !86
  %1278 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1264, float %912) #6, !dbg !86
  %1279 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1266, float %912) #6, !dbg !86
  %1280 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1268, float %912) #6, !dbg !86
  %1281 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1270, float %912) #6, !dbg !86
  %1282 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1272, float %912) #6, !dbg !86
  %1283 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1274, float %912) #6, !dbg !86
  %1284 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1276, float %912) #6, !dbg !86
  %1285 = getelementptr i16, ptr addrspace(1) %1, i64 %917, !dbg !87
  %1286 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1277) #6, !dbg !88
  %1287 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1278) #6, !dbg !88
  %1288 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1279) #6, !dbg !88
  %1289 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1280) #6, !dbg !88
  %1290 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1281) #6, !dbg !88
  %1291 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1282) #6, !dbg !88
  %1292 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1283) #6, !dbg !88
  %1293 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1284) #6, !dbg !88
  %1294 = insertelement <2 x i16> undef, i16 %1286, i64 0, !dbg !88
  %1295 = insertelement <2 x i16> %1294, i16 %1287, i64 1, !dbg !88
  %1296 = bitcast <2 x i16> %1295 to i32, !dbg !88
  %1297 = insertelement <2 x i16> undef, i16 %1288, i64 0, !dbg !88
  %1298 = insertelement <2 x i16> %1297, i16 %1289, i64 1, !dbg !88
  %1299 = bitcast <2 x i16> %1298 to i32, !dbg !88
  %1300 = insertelement <2 x i16> undef, i16 %1290, i64 0, !dbg !88
  %1301 = insertelement <2 x i16> %1300, i16 %1291, i64 1, !dbg !88
  %1302 = bitcast <2 x i16> %1301 to i32, !dbg !88
  %1303 = insertelement <2 x i16> undef, i16 %1292, i64 0, !dbg !88
  %1304 = insertelement <2 x i16> %1303, i16 %1293, i64 1, !dbg !88
  %1305 = bitcast <2 x i16> %1304 to i32, !dbg !88
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1296, i32 %1299, i32 %1302, i32 %1305, ptr addrspace(1) %1285, i1 true) #6, !dbg !88
  %1306 = add nuw nsw i32 %914, 2048, !dbg !70
  %1307 = icmp ult i32 %914, 6144, !dbg !70
  br i1 %1307, label %913, label %1308, !dbg !70

1308:                                             ; preds = %__nv_tanhf.exit162
  ret void, !dbg !89
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: alwaysinline nounwind
define float @__nv_tanhf(float %a) local_unnamed_addr #3 {
__nv_fabsf.exit:
  %0 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not = icmp eq i32 %0, 0
  %1 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #6
  %2 = tail call float @llvm.nvvm.fabs.f(float %a) #6
  %.01 = select i1 %.not, float %2, float %1
  %3 = fcmp ult float %.01, 0x3FE3333340000000
  br i1 %3, label %__internal_fmad.exit3, label %__internal_fmad.exit1

__internal_fmad.exit1:                            ; preds = %__nv_fabsf.exit
  %4 = fmul float %.01, 0x4007154760000000
  %5 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4) #6
  %6 = fadd float %5, 1.000000e+00
  %7 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6) #7, !srcloc !24
  %8 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not6 = icmp eq i32 %8, 0
  %9 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7, float -2.000000e+00, float 1.000000e+00) #6
  %10 = tail call float @llvm.nvvm.fma.rn.f(float %7, float -2.000000e+00, float 1.000000e+00) #6
  %.03 = select i1 %.not6, float %10, float %9
  %11 = fcmp oge float %.01, 0x4022059680000000
  %s.0 = select i1 %11, float 1.000000e+00, float %.03
  %12 = bitcast float %s.0 to i32
  %13 = bitcast float %a to i32
  %14 = and i32 %13, -2147483648
  %15 = or i32 %14, %12
  %16 = bitcast i32 %15 to float
  br label %33

__internal_fmad.exit3:                            ; preds = %__nv_fabsf.exit
  %17 = fmul float %a, %a
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not1 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #6
  %20 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #6
  %.06 = select i1 %.not1, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not2 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06, float %17, float 0x3FC10B2820000000) #6
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.06, float %17, float 0x3FC10B2820000000) #6
  %.05 = select i1 %.not2, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not3 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %17, float 0xBFD5553DA0000000) #6
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %17, float 0xBFD5553DA0000000) #6
  %.0 = select i1 %.not3, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not4 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0, float %17, float 0.000000e+00) #6
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.0, float %17, float 0.000000e+00) #6
  %.04 = select i1 %.not4, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not5 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04, float %a, float %a) #6
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.04, float %a, float %a) #6
  %.02 = select i1 %.not5, float %32, float %31
  br label %33

33:                                               ; preds = %__internal_fmad.exit3, %__internal_fmad.exit1
  %s.1 = phi float [ %16, %__internal_fmad.exit1 ], [ %.02, %__internal_fmad.exit3 ]
  ret float %s.1
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #6 = { nounwind }
attributes #7 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "c4mwtuq5xoysh6cmmpe4cidd54bll6rqoa7xie7bae3lkedwe33q.py", directory: "/tmp/torchinductor_zeus/4m")
!4 = !{ptr @triton__0d1d2de3de, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2de3de, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2de3de", linkageName: "triton__0d1d2de3de", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 33, scope: !7)
!11 = !DILocation(line: 21, column: 28, scope: !7)
!12 = !DILocation(line: 26, column: 18, scope: !7)
!13 = !DILocation(line: 32, column: 45, scope: !7)
!14 = !DILocation(line: 28, column: 36, scope: !7)
!15 = !DILocation(line: 41, column: 23, scope: !7)
!16 = !DILocation(line: 29, column: 27, scope: !7)
!17 = !DILocation(line: 32, column: 40, scope: !7)
!18 = !DILocation(line: 32, column: 34, scope: !7)
!19 = !DILocation(line: 32, column: 51, scope: !7)
!20 = !DILocation(line: 32, column: 102, scope: !7)
!21 = !DILocation(line: 34, column: 22, scope: !7)
!22 = !DILocation(line: 36, column: 22, scope: !7)
!23 = !DILocation(line: 37, column: 28, scope: !7)
!24 = !{i32 21046}
!25 = !DILocation(line: 38, column: 22, scope: !7)
!26 = !DILocation(line: 39, column: 21, scope: !7)
!27 = !DILocation(line: 47, column: 39, scope: !7)
!28 = !DILocation(line: 48, column: 23, scope: !7)
!29 = !DILocation(line: 36, column: 15, scope: !30, inlinedAt: !32)
!30 = distinct !DILexicalBlockFile(scope: !7, file: !31, discriminator: 0)
!31 = !DIFile(filename: "triton_helpers.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/torch/_inductor")
!32 = !DILocation(line: 51, column: 47, scope: !30)
!33 = !DILocation(line: 38, column: 21, scope: !30, inlinedAt: !32)
!34 = !DILocation(line: 38, column: 16, scope: !30, inlinedAt: !32)
!35 = !DILocation(line: 0, scope: !7)
!36 = !DILocation(line: 36, column: 15, scope: !37, inlinedAt: !38)
!37 = distinct !DILexicalBlockFile(scope: !30, file: !31, discriminator: 0)
!38 = !DILocation(line: 49, column: 29, scope: !37, inlinedAt: !39)
!39 = !DILocation(line: 53, column: 40, scope: !37)
!40 = !DILocation(line: 38, column: 16, scope: !37, inlinedAt: !38)
!41 = !DILocation(line: 39, column: 29, scope: !37, inlinedAt: !38)
!42 = !DILocation(line: 38, column: 21, scope: !37, inlinedAt: !38)
!43 = !DILocation(line: 49, column: 29, scope: !30, inlinedAt: !44)
!44 = !DILocation(line: 53, column: 40, scope: !30)
!45 = !DILocation(line: 55, column: 36, scope: !7)
!46 = !DILocation(line: 56, column: 27, scope: !7)
!47 = !DILocation(line: 59, column: 41, scope: !7)
!48 = !DILocation(line: 59, column: 35, scope: !7)
!49 = !DILocation(line: 59, column: 52, scope: !7)
!50 = !DILocation(line: 59, column: 103, scope: !7)
!51 = !DILocation(line: 61, column: 24, scope: !7)
!52 = !DILocation(line: 63, column: 24, scope: !7)
!53 = !DILocation(line: 64, column: 29, scope: !7)
!54 = !DILocation(line: 65, column: 24, scope: !7)
!55 = !DILocation(line: 66, column: 22, scope: !7)
!56 = !DILocation(line: 68, column: 25, scope: !7)
!57 = !DILocation(line: 74, column: 39, scope: !7)
!58 = !DILocation(line: 75, column: 24, scope: !7)
!59 = !DILocation(line: 77, column: 24, scope: !7)
!60 = !DILocation(line: 78, column: 23, scope: !7)
!61 = !DILocation(line: 81, column: 40, scope: !7)
!62 = !DILocation(line: 243, column: 36, scope: !63, inlinedAt: !65)
!63 = distinct !DILexicalBlockFile(scope: !7, file: !64, discriminator: 0)
!64 = !DIFile(filename: "standard.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/triton/language")
!65 = !DILocation(line: 82, column: 27, scope: !63)
!66 = !DILocation(line: 233, column: 15, scope: !67, inlinedAt: !68)
!67 = distinct !DILexicalBlockFile(scope: !63, file: !64, discriminator: 0)
!68 = !DILocation(line: 243, column: 36, scope: !67, inlinedAt: !69)
!69 = !DILocation(line: 82, column: 27, scope: !67)
!70 = !DILocation(line: 83, column: 36, scope: !7)
!71 = !DILocation(line: 84, column: 27, scope: !7)
!72 = !DILocation(line: 87, column: 41, scope: !7)
!73 = !DILocation(line: 87, column: 35, scope: !7)
!74 = !DILocation(line: 87, column: 52, scope: !7)
!75 = !DILocation(line: 87, column: 104, scope: !7)
!76 = !DILocation(line: 89, column: 24, scope: !7)
!77 = !DILocation(line: 91, column: 24, scope: !7)
!78 = !DILocation(line: 92, column: 29, scope: !7)
!79 = !DILocation(line: 93, column: 24, scope: !7)
!80 = !DILocation(line: 94, column: 22, scope: !7)
!81 = !DILocation(line: 96, column: 25, scope: !7)
!82 = !DILocation(line: 102, column: 39, scope: !7)
!83 = !DILocation(line: 103, column: 24, scope: !7)
!84 = !DILocation(line: 105, column: 24, scope: !7)
!85 = !DILocation(line: 106, column: 23, scope: !7)
!86 = !DILocation(line: 107, column: 24, scope: !7)
!87 = !DILocation(line: 109, column: 29, scope: !7)
!88 = !DILocation(line: 109, column: 53, scope: !7)
!89 = !DILocation(line: 83, column: 4, scope: !7)
