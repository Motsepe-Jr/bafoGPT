; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton__0d1d2d3d4de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !5 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %7 = and i32 %6, 127, !dbg !8
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !9
  %9 = shl i32 %8, 7, !dbg !10
  %10 = or i32 %9, %7, !dbg !11
  %11 = icmp slt i32 %10, 2304, !dbg !12
  %12 = sext i32 %10 to i64, !dbg !13
  %13 = getelementptr i16, ptr addrspace(1) %0, i64 %12, !dbg !13
  %14 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %13, i1 %11) #1, !dbg !14
  %15 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %14) #1, !dbg !15
  %16 = getelementptr float, ptr addrspace(1) %1, i64 %12, !dbg !16
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %11) #1, !dbg !17
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #1, !dbg !18
  %19 = add i32 %10, 2304, !dbg !19
  %20 = sext i32 %19 to i64, !dbg !20
  %21 = getelementptr i16, ptr addrspace(1) %0, i64 %20, !dbg !20
  %22 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %21, i1 %11) #1, !dbg !21
  %23 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %22) #1, !dbg !22
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !23
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %11) #1, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %2, i64 1, !dbg !25
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #1, !dbg !26
  %28 = add i32 %10, 4608, !dbg !27
  %29 = sext i32 %28 to i64, !dbg !28
  %30 = getelementptr i16, ptr addrspace(1) %0, i64 %29, !dbg !28
  %31 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %30, i1 %11) #1, !dbg !29
  %32 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %31) #1, !dbg !30
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !31
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %11) #1, !dbg !32
  %35 = getelementptr float, ptr addrspace(1) %2, i64 2, !dbg !33
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #1, !dbg !34
  %37 = add i32 %10, 6912, !dbg !35
  %38 = sext i32 %37 to i64, !dbg !36
  %39 = getelementptr i16, ptr addrspace(1) %0, i64 %38, !dbg !36
  %40 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %39, i1 %11) #1, !dbg !37
  %41 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %40) #1, !dbg !38
  %42 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !39
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %11) #1, !dbg !40
  %44 = getelementptr float, ptr addrspace(1) %2, i64 3, !dbg !41
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #1, !dbg !42
  %46 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !17
  %47 = insertelement <2 x i32> %46, i32 %25, i64 1, !dbg !17
  %48 = bitcast <2 x i32> %47 to <2 x float>, !dbg !17
  %49 = insertelement <2 x i32> poison, i32 %18, i64 0, !dbg !18
  %50 = insertelement <2 x i32> %49, i32 %27, i64 1, !dbg !18
  %51 = bitcast <2 x i32> %50 to <2 x float>, !dbg !18
  %52 = fmul <2 x float> %48, %51, !dbg !43
  %53 = insertelement <2 x float> poison, float %15, i64 0, !dbg !44
  %54 = insertelement <2 x float> %53, float %23, i64 1, !dbg !44
  %55 = fmul <2 x float> %54, %52, !dbg !44
  %shift = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !45
  %56 = fadd <2 x float> %55, %shift, !dbg !45
  %57 = insertelement <2 x i32> poison, i32 %34, i64 0, !dbg !32
  %58 = insertelement <2 x i32> %57, i32 %43, i64 1, !dbg !32
  %59 = bitcast <2 x i32> %58 to <2 x float>, !dbg !32
  %60 = insertelement <2 x i32> poison, i32 %36, i64 0, !dbg !34
  %61 = insertelement <2 x i32> %60, i32 %45, i64 1, !dbg !34
  %62 = bitcast <2 x i32> %61 to <2 x float>, !dbg !34
  %63 = fmul <2 x float> %59, %62, !dbg !46
  %64 = insertelement <2 x float> poison, float %32, i64 0, !dbg !47
  %65 = insertelement <2 x float> %64, float %41, i64 1, !dbg !47
  %66 = fmul <2 x float> %65, %63, !dbg !47
  %67 = fadd <2 x float> %56, %66, !dbg !48
  %shift1 = shufflevector <2 x float> %66, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !49
  %68 = fadd <2 x float> %67, %shift1, !dbg !49
  %69 = getelementptr float, ptr addrspace(1) %3, i64 %12, !dbg !50
  %bc = bitcast <2 x float> %68 to <2 x i32>, !dbg !51
  %70 = extractelement <2 x i32> %bc, i64 0, !dbg !51
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %70, ptr addrspace(1) %69, i1 %11) #1, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "cfbd456mqgp5oqsfofzgfjugqsvqp2w7rxesbhwvoklgebsfi7wb.py", directory: "/tmp/torchinductor_zeus/fb")
!3 = !{ptr @triton__0d1d2d3d4de, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d2d3d4de, !"maxntidx", i32 128}
!5 = distinct !DISubprogram(name: "triton__0d1d2d3d4de", linkageName: "triton__0d1d2d3d4de", scope: !2, file: !2, line: 18, type: !6, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 21, column: 36, scope: !5)
!9 = !DILocation(line: 20, column: 28, scope: !5)
!10 = !DILocation(line: 20, column: 33, scope: !5)
!11 = !DILocation(line: 21, column: 23, scope: !5)
!12 = !DILocation(line: 22, column: 21, scope: !5)
!13 = !DILocation(line: 24, column: 30, scope: !5)
!14 = !DILocation(line: 24, column: 35, scope: !5)
!15 = !DILocation(line: 24, column: 45, scope: !5)
!16 = !DILocation(line: 25, column: 30, scope: !5)
!17 = !DILocation(line: 25, column: 35, scope: !5)
!18 = !DILocation(line: 26, column: 19, scope: !5)
!19 = !DILocation(line: 28, column: 37, scope: !5)
!20 = !DILocation(line: 28, column: 30, scope: !5)
!21 = !DILocation(line: 28, column: 42, scope: !5)
!22 = !DILocation(line: 28, column: 52, scope: !5)
!23 = !DILocation(line: 29, column: 30, scope: !5)
!24 = !DILocation(line: 29, column: 42, scope: !5)
!25 = !DILocation(line: 30, column: 31, scope: !5)
!26 = !DILocation(line: 30, column: 20, scope: !5)
!27 = !DILocation(line: 32, column: 38, scope: !5)
!28 = !DILocation(line: 32, column: 31, scope: !5)
!29 = !DILocation(line: 32, column: 43, scope: !5)
!30 = !DILocation(line: 32, column: 53, scope: !5)
!31 = !DILocation(line: 33, column: 31, scope: !5)
!32 = !DILocation(line: 33, column: 43, scope: !5)
!33 = !DILocation(line: 34, column: 31, scope: !5)
!34 = !DILocation(line: 34, column: 20, scope: !5)
!35 = !DILocation(line: 36, column: 38, scope: !5)
!36 = !DILocation(line: 36, column: 31, scope: !5)
!37 = !DILocation(line: 36, column: 43, scope: !5)
!38 = !DILocation(line: 36, column: 53, scope: !5)
!39 = !DILocation(line: 37, column: 31, scope: !5)
!40 = !DILocation(line: 37, column: 43, scope: !5)
!41 = !DILocation(line: 38, column: 31, scope: !5)
!42 = !DILocation(line: 38, column: 20, scope: !5)
!43 = !DILocation(line: 41, column: 18, scope: !5)
!44 = !DILocation(line: 42, column: 18, scope: !5)
!45 = !DILocation(line: 46, column: 19, scope: !5)
!46 = !DILocation(line: 48, column: 20, scope: !5)
!47 = !DILocation(line: 49, column: 20, scope: !5)
!48 = !DILocation(line: 50, column: 20, scope: !5)
!49 = !DILocation(line: 54, column: 20, scope: !5)
!50 = !DILocation(line: 55, column: 25, scope: !5)
!51 = !DILocation(line: 55, column: 37, scope: !5)
!52 = !DILocation(line: 55, column: 4, scope: !5)
