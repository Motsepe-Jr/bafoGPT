; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8]
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2d3d4de5de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %8 = lshr i32 %7, 5, !dbg !10
  %urem = shl i32 %7, 2, !dbg !10
  %9 = and i32 %urem, 1020, !dbg !10
  %10 = or i32 %9, 1, !dbg !10
  %11 = or i32 %9, 2, !dbg !10
  %12 = or i32 %9, 3, !dbg !10
  %13 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #6, !dbg !11
  %14 = srem i32 %13, 8192, !dbg !12
  %15 = shl i32 %13, 13, !dbg !13
  %16 = sub nsw i32 %10, %14
  %17 = sub nsw i32 %11, %14
  %18 = sub nsw i32 %12, %14
  %invariant.op = sub nsw i32 0, %16, !dbg !14
  %invariant.op240 = sub nsw i32 0, %17, !dbg !14
  %invariant.op241 = sub nsw i32 0, %18, !dbg !14
  %19 = insertelement <2 x i32> <i32 poison, i32 0>, i32 %invariant.op, i64 0, !dbg !15
  br label %20, !dbg !14

20:                                               ; preds = %6, %__nv_tanhf.exit224
  %21 = phi float [ 0xFFF0000000000000, %6 ], [ %205, %__nv_tanhf.exit224 ]
  %22 = phi float [ 0xFFF0000000000000, %6 ], [ %206, %__nv_tanhf.exit224 ]
  %23 = phi i32 [ 0, %6 ], [ %207, %__nv_tanhf.exit224 ]
  %24 = phi <2 x float> [ <float 0xFFF0000000000000, float 0xFFF0000000000000>, %6 ], [ %204, %__nv_tanhf.exit224 ]
  %25 = or i32 %23, %9, !dbg !16
  %26 = add i32 %25, %15, !dbg !17
  %27 = sext i32 %26 to i64, !dbg !18
  %28 = getelementptr i16, ptr addrspace(1) %0, i64 %27, !dbg !18
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %28, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !19
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !19
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !19
  %32 = trunc i32 %30 to i16, !dbg !19
  %extelt.offset6 = lshr i32 %30, 16, !dbg !19
  %33 = trunc i32 %extelt.offset6 to i16, !dbg !19
  %34 = trunc i32 %31 to i16, !dbg !19
  %extelt.offset7 = lshr i32 %31, 16, !dbg !19
  %35 = trunc i32 %extelt.offset7 to i16, !dbg !19
  %36 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %32) #6, !dbg !20
  %37 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %33) #6, !dbg !20
  %38 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %34) #6, !dbg !20
  %39 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %35) #6, !dbg !20
  %40 = fmul float %36, 6.250000e-02, !dbg !21
  %41 = fmul float %37, 6.250000e-02, !dbg !21
  %42 = fmul float %38, 6.250000e-02, !dbg !21
  %43 = fmul float %39, 6.250000e-02, !dbg !21
  %44 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %40, float 5.000000e+01) #6, !dbg !22
  %45 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %41, float 5.000000e+01) #6, !dbg !22
  %46 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %42, float 5.000000e+01) #6, !dbg !22
  %47 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %43, float 5.000000e+01) #6, !dbg !22
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i149 = icmp eq i32 %48, 0, !dbg !23
  %49 = tail call float @llvm.nvvm.fabs.ftz.f(float %44) #6, !dbg !23
  %50 = tail call float @llvm.nvvm.fabs.f(float %44) #6, !dbg !23
  %.01.i150 = select i1 %.not.i149, float %50, float %49, !dbg !23
  %51 = fcmp ult float %.01.i150, 0x3FE3333340000000, !dbg !23
  br i1 %51, label %__internal_fmad.exit3.i156, label %__internal_fmad.exit1.i151, !dbg !23

__internal_fmad.exit1.i151:                       ; preds = %20
  %52 = fmul float %.01.i150, 0x4007154760000000, !dbg !23
  %53 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %52) #6, !dbg !23
  %54 = fadd float %53, 1.000000e+00, !dbg !23
  %55 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %54) #7, !dbg !23, !srcloc !24
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i152 = icmp eq i32 %56, 0, !dbg !23
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %55, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %55, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i153 = select i1 %.not6.i152, float %58, float %57, !dbg !23
  %59 = fcmp oge float %.01.i150, 0x4022059680000000, !dbg !23
  %s.0.i154 = select i1 %59, float 1.000000e+00, float %.03.i153, !dbg !23
  %60 = bitcast float %s.0.i154 to i32, !dbg !23
  %61 = bitcast float %44 to i32, !dbg !23
  %62 = and i32 %61, -2147483648, !dbg !23
  %63 = or i32 %62, %60, !dbg !23
  %64 = bitcast i32 %63 to float, !dbg !23
  br label %__nv_tanhf.exit167, !dbg !23

__internal_fmad.exit3.i156:                       ; preds = %20
  %65 = fmul float %44, %44, !dbg !23
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i157 = icmp eq i32 %66, 0, !dbg !23
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %65, float 0xBFAAC795C0000000) #6, !dbg !23
  %68 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %65, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i158 = select i1 %.not1.i157, float %68, float %67, !dbg !23
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i159 = icmp eq i32 %69, 0, !dbg !23
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i158, float %65, float 0x3FC10B2820000000) #6, !dbg !23
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i158, float %65, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i160 = select i1 %.not2.i159, float %71, float %70, !dbg !23
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i161 = icmp eq i32 %72, 0, !dbg !23
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i160, float %65, float 0xBFD5553DA0000000) #6, !dbg !23
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i160, float %65, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i162 = select i1 %.not3.i161, float %74, float %73, !dbg !23
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i163 = icmp eq i32 %75, 0, !dbg !23
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i162, float %65, float 0.000000e+00) #6, !dbg !23
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i162, float %65, float 0.000000e+00) #6, !dbg !23
  %.04.i164 = select i1 %.not4.i163, float %77, float %76, !dbg !23
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i165 = icmp eq i32 %78, 0, !dbg !23
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i164, float %44, float %44) #6, !dbg !23
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i164, float %44, float %44) #6, !dbg !23
  %.02.i166 = select i1 %.not5.i165, float %80, float %79, !dbg !23
  br label %__nv_tanhf.exit167, !dbg !23

__nv_tanhf.exit167:                               ; preds = %__internal_fmad.exit1.i151, %__internal_fmad.exit3.i156
  %s.1.i155 = phi float [ %64, %__internal_fmad.exit1.i151 ], [ %.02.i166, %__internal_fmad.exit3.i156 ], !dbg !23
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i168 = icmp eq i32 %81, 0, !dbg !23
  %82 = tail call float @llvm.nvvm.fabs.ftz.f(float %45) #6, !dbg !23
  %83 = tail call float @llvm.nvvm.fabs.f(float %45) #6, !dbg !23
  %.01.i169 = select i1 %.not.i168, float %83, float %82, !dbg !23
  %84 = fcmp ult float %.01.i169, 0x3FE3333340000000, !dbg !23
  br i1 %84, label %__internal_fmad.exit3.i175, label %__internal_fmad.exit1.i170, !dbg !23

__internal_fmad.exit1.i170:                       ; preds = %__nv_tanhf.exit167
  %85 = fmul float %.01.i169, 0x4007154760000000, !dbg !23
  %86 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %85) #6, !dbg !23
  %87 = fadd float %86, 1.000000e+00, !dbg !23
  %88 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %87) #7, !dbg !23, !srcloc !24
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i171 = icmp eq i32 %89, 0, !dbg !23
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %88, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %88, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i172 = select i1 %.not6.i171, float %91, float %90, !dbg !23
  %92 = fcmp oge float %.01.i169, 0x4022059680000000, !dbg !23
  %s.0.i173 = select i1 %92, float 1.000000e+00, float %.03.i172, !dbg !23
  %93 = bitcast float %s.0.i173 to i32, !dbg !23
  %94 = bitcast float %45 to i32, !dbg !23
  %95 = and i32 %94, -2147483648, !dbg !23
  %96 = or i32 %95, %93, !dbg !23
  %97 = bitcast i32 %96 to float, !dbg !23
  br label %__nv_tanhf.exit186, !dbg !23

__internal_fmad.exit3.i175:                       ; preds = %__nv_tanhf.exit167
  %98 = fmul float %45, %45, !dbg !23
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i176 = icmp eq i32 %99, 0, !dbg !23
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %98, float 0xBFAAC795C0000000) #6, !dbg !23
  %101 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %98, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i177 = select i1 %.not1.i176, float %101, float %100, !dbg !23
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i178 = icmp eq i32 %102, 0, !dbg !23
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i177, float %98, float 0x3FC10B2820000000) #6, !dbg !23
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i177, float %98, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i179 = select i1 %.not2.i178, float %104, float %103, !dbg !23
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i180 = icmp eq i32 %105, 0, !dbg !23
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i179, float %98, float 0xBFD5553DA0000000) #6, !dbg !23
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i179, float %98, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i181 = select i1 %.not3.i180, float %107, float %106, !dbg !23
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i182 = icmp eq i32 %108, 0, !dbg !23
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i181, float %98, float 0.000000e+00) #6, !dbg !23
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i181, float %98, float 0.000000e+00) #6, !dbg !23
  %.04.i183 = select i1 %.not4.i182, float %110, float %109, !dbg !23
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i184 = icmp eq i32 %111, 0, !dbg !23
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i183, float %45, float %45) #6, !dbg !23
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i183, float %45, float %45) #6, !dbg !23
  %.02.i185 = select i1 %.not5.i184, float %113, float %112, !dbg !23
  br label %__nv_tanhf.exit186, !dbg !23

__nv_tanhf.exit186:                               ; preds = %__internal_fmad.exit1.i170, %__internal_fmad.exit3.i175
  %s.1.i174 = phi float [ %97, %__internal_fmad.exit1.i170 ], [ %.02.i185, %__internal_fmad.exit3.i175 ], !dbg !23
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i187 = icmp eq i32 %114, 0, !dbg !23
  %115 = tail call float @llvm.nvvm.fabs.ftz.f(float %46) #6, !dbg !23
  %116 = tail call float @llvm.nvvm.fabs.f(float %46) #6, !dbg !23
  %.01.i188 = select i1 %.not.i187, float %116, float %115, !dbg !23
  %117 = fcmp ult float %.01.i188, 0x3FE3333340000000, !dbg !23
  br i1 %117, label %__internal_fmad.exit3.i194, label %__internal_fmad.exit1.i189, !dbg !23

__internal_fmad.exit1.i189:                       ; preds = %__nv_tanhf.exit186
  %118 = fmul float %.01.i188, 0x4007154760000000, !dbg !23
  %119 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %118) #6, !dbg !23
  %120 = fadd float %119, 1.000000e+00, !dbg !23
  %121 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %120) #7, !dbg !23, !srcloc !24
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i190 = icmp eq i32 %122, 0, !dbg !23
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %121, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %121, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i191 = select i1 %.not6.i190, float %124, float %123, !dbg !23
  %125 = fcmp oge float %.01.i188, 0x4022059680000000, !dbg !23
  %s.0.i192 = select i1 %125, float 1.000000e+00, float %.03.i191, !dbg !23
  %126 = bitcast float %s.0.i192 to i32, !dbg !23
  %127 = bitcast float %46 to i32, !dbg !23
  %128 = and i32 %127, -2147483648, !dbg !23
  %129 = or i32 %128, %126, !dbg !23
  %130 = bitcast i32 %129 to float, !dbg !23
  br label %__nv_tanhf.exit205, !dbg !23

__internal_fmad.exit3.i194:                       ; preds = %__nv_tanhf.exit186
  %131 = fmul float %46, %46, !dbg !23
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i195 = icmp eq i32 %132, 0, !dbg !23
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %131, float 0xBFAAC795C0000000) #6, !dbg !23
  %134 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %131, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i196 = select i1 %.not1.i195, float %134, float %133, !dbg !23
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i197 = icmp eq i32 %135, 0, !dbg !23
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i196, float %131, float 0x3FC10B2820000000) #6, !dbg !23
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i196, float %131, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i198 = select i1 %.not2.i197, float %137, float %136, !dbg !23
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i199 = icmp eq i32 %138, 0, !dbg !23
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i198, float %131, float 0xBFD5553DA0000000) #6, !dbg !23
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i198, float %131, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i200 = select i1 %.not3.i199, float %140, float %139, !dbg !23
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i201 = icmp eq i32 %141, 0, !dbg !23
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i200, float %131, float 0.000000e+00) #6, !dbg !23
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i200, float %131, float 0.000000e+00) #6, !dbg !23
  %.04.i202 = select i1 %.not4.i201, float %143, float %142, !dbg !23
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i203 = icmp eq i32 %144, 0, !dbg !23
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i202, float %46, float %46) #6, !dbg !23
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i202, float %46, float %46) #6, !dbg !23
  %.02.i204 = select i1 %.not5.i203, float %146, float %145, !dbg !23
  br label %__nv_tanhf.exit205, !dbg !23

__nv_tanhf.exit205:                               ; preds = %__internal_fmad.exit1.i189, %__internal_fmad.exit3.i194
  %s.1.i193 = phi float [ %130, %__internal_fmad.exit1.i189 ], [ %.02.i204, %__internal_fmad.exit3.i194 ], !dbg !23
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i206 = icmp eq i32 %147, 0, !dbg !23
  %148 = tail call float @llvm.nvvm.fabs.ftz.f(float %47) #6, !dbg !23
  %149 = tail call float @llvm.nvvm.fabs.f(float %47) #6, !dbg !23
  %.01.i207 = select i1 %.not.i206, float %149, float %148, !dbg !23
  %150 = fcmp ult float %.01.i207, 0x3FE3333340000000, !dbg !23
  br i1 %150, label %__internal_fmad.exit3.i213, label %__internal_fmad.exit1.i208, !dbg !23

__internal_fmad.exit1.i208:                       ; preds = %__nv_tanhf.exit205
  %151 = fmul float %.01.i207, 0x4007154760000000, !dbg !23
  %152 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %151) #6, !dbg !23
  %153 = fadd float %152, 1.000000e+00, !dbg !23
  %154 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %153) #7, !dbg !23, !srcloc !24
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i209 = icmp eq i32 %155, 0, !dbg !23
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %154, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %154, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i210 = select i1 %.not6.i209, float %157, float %156, !dbg !23
  %158 = fcmp oge float %.01.i207, 0x4022059680000000, !dbg !23
  %s.0.i211 = select i1 %158, float 1.000000e+00, float %.03.i210, !dbg !23
  %159 = bitcast float %s.0.i211 to i32, !dbg !23
  %160 = bitcast float %47 to i32, !dbg !23
  %161 = and i32 %160, -2147483648, !dbg !23
  %162 = or i32 %161, %159, !dbg !23
  %163 = bitcast i32 %162 to float, !dbg !23
  br label %__nv_tanhf.exit224, !dbg !23

__internal_fmad.exit3.i213:                       ; preds = %__nv_tanhf.exit205
  %164 = fmul float %47, %47, !dbg !23
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i214 = icmp eq i32 %165, 0, !dbg !23
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %164, float 0xBFAAC795C0000000) #6, !dbg !23
  %167 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %164, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i215 = select i1 %.not1.i214, float %167, float %166, !dbg !23
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i216 = icmp eq i32 %168, 0, !dbg !23
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i215, float %164, float 0x3FC10B2820000000) #6, !dbg !23
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i215, float %164, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i217 = select i1 %.not2.i216, float %170, float %169, !dbg !23
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i218 = icmp eq i32 %171, 0, !dbg !23
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i217, float %164, float 0xBFD5553DA0000000) #6, !dbg !23
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i217, float %164, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i219 = select i1 %.not3.i218, float %173, float %172, !dbg !23
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i220 = icmp eq i32 %174, 0, !dbg !23
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i219, float %164, float 0.000000e+00) #6, !dbg !23
  %176 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i219, float %164, float 0.000000e+00) #6, !dbg !23
  %.04.i221 = select i1 %.not4.i220, float %176, float %175, !dbg !23
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i222 = icmp eq i32 %177, 0, !dbg !23
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i221, float %47, float %47) #6, !dbg !23
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i221, float %47, float %47) #6, !dbg !23
  %.02.i223 = select i1 %.not5.i222, float %179, float %178, !dbg !23
  br label %__nv_tanhf.exit224, !dbg !23

__nv_tanhf.exit224:                               ; preds = %__internal_fmad.exit1.i208, %__internal_fmad.exit3.i213
  %s.1.i212 = phi float [ %163, %__internal_fmad.exit1.i208 ], [ %.02.i223, %__internal_fmad.exit3.i213 ], !dbg !23
  %180 = insertelement <2 x float> poison, float %s.1.i174, i64 0, !dbg !25
  %181 = insertelement <2 x float> %180, float %s.1.i155, i64 1, !dbg !25
  %182 = fmul <2 x float> %181, <float 5.000000e+01, float 5.000000e+01>, !dbg !25
  %183 = fmul float %s.1.i193, 5.000000e+01, !dbg !25
  %184 = fmul float %s.1.i212, 5.000000e+01, !dbg !25
  %185 = sub i32 %25, %14, !dbg !26
  %186 = icmp sgt i32 %23, %invariant.op240, !dbg !15
  %187 = icmp sgt i32 %23, %invariant.op241, !dbg !15
  %188 = select i1 %186, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !27
  %189 = select i1 %187, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !27
  %190 = fadd float %188, %183, !dbg !28
  %191 = fadd float %189, %184, !dbg !28
  %192 = fcmp ule float %21, %190, !dbg !29
  %193 = fcmp ule float %22, %191, !dbg !29
  %194 = fcmp ord <2 x float> %24, zeroinitializer, !dbg !33
  %195 = fcmp ord float %21, 0.000000e+00, !dbg !33
  %196 = fcmp ord float %22, 0.000000e+00, !dbg !33
  %197 = insertelement <2 x i32> poison, i32 %23, i64 0, !dbg !15
  %198 = insertelement <2 x i32> %197, i32 %185, i64 1, !dbg !15
  %199 = icmp sgt <2 x i32> %198, %19, !dbg !15
  %200 = select <2 x i1> %199, <2 x float> <float 0xC7EFE00000000000, float 0xC7EFE00000000000>, <2 x float> zeroinitializer, !dbg !27
  %201 = fadd <2 x float> %200, %182, !dbg !28
  %202 = fcmp ule <2 x float> %24, %201, !dbg !29
  %203 = and <2 x i1> %194, %202, !dbg !34
  %.not13 = and i1 %195, %192, !dbg !34
  %.not15 = and i1 %196, %193, !dbg !35
  %204 = select <2 x i1> %203, <2 x float> %201, <2 x float> %24, !dbg !35
  %205 = select i1 %.not13, float %190, float %21, !dbg !35
  %206 = select i1 %.not15, float %191, float %22, !dbg !35
  %207 = add nuw nsw i32 %23, 1024, !dbg !14
  %208 = icmp ult i32 %23, 7168, !dbg !14
  br i1 %208, label %20, label %209, !dbg !14

209:                                              ; preds = %__nv_tanhf.exit224
  %210 = and i32 %7, 31, !dbg !10
  %211 = and i32 %8, 7, !dbg !10
  %212 = shufflevector <2 x float> %204, <2 x float> <float poison, float 0.000000e+00>, <2 x i32> <i32 1, i32 3>, !dbg !36
  %213 = fcmp ogt <2 x float> %212, %204, !dbg !36
  %214 = fcmp uno <2 x float> %212, %204, !dbg !36
  %shift = shufflevector <2 x i1> %214, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %215 = or <2 x i1> %213, %shift, !dbg !40
  %216 = extractelement <2 x i1> %215, i64 0, !dbg !40
  %217 = extractelement <2 x float> %204, i64 0, !dbg !41
  %218 = extractelement <2 x float> %204, i64 1, !dbg !41
  %219 = select i1 %216, float %218, float %217, !dbg !41
  %220 = fcmp ogt float %219, %205, !dbg !36
  %221 = fcmp uno float %219, 0.000000e+00, !dbg !42
  %222 = or i1 %220, %221, !dbg !40
  %223 = select i1 %222, float %219, float %205, !dbg !41
  %224 = fcmp ogt float %223, %206, !dbg !36
  %225 = fcmp uno float %223, 0.000000e+00, !dbg !42
  %226 = or i1 %224, %225, !dbg !40
  %227 = select i1 %226, float %223, float %206, !dbg !41
  %228 = bitcast float %227 to i32, !dbg !43
  %229 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %228, i32 16, i32 31), !dbg !43
  %230 = bitcast i32 %229 to float, !dbg !43
  %231 = fcmp ogt float %227, %230, !dbg !36
  %232 = fcmp uno float %227, 0.000000e+00, !dbg !42
  %233 = or i1 %232, %231, !dbg !40
  %234 = select i1 %233, float %227, float %230, !dbg !41
  %235 = bitcast float %234 to i32, !dbg !43
  %236 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %235, i32 8, i32 31), !dbg !43
  %237 = bitcast i32 %236 to float, !dbg !43
  %238 = fcmp ogt float %234, %237, !dbg !36
  %239 = fcmp uno float %234, 0.000000e+00, !dbg !42
  %240 = or i1 %238, %239, !dbg !40
  %241 = select i1 %240, float %234, float %237, !dbg !41
  %242 = bitcast float %241 to i32, !dbg !43
  %243 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %242, i32 4, i32 31), !dbg !43
  %244 = bitcast i32 %243 to float, !dbg !43
  %245 = fcmp ogt float %241, %244, !dbg !36
  %246 = fcmp uno float %241, 0.000000e+00, !dbg !42
  %247 = or i1 %245, %246, !dbg !40
  %248 = select i1 %247, float %241, float %244, !dbg !41
  %249 = bitcast float %248 to i32, !dbg !43
  %250 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %249, i32 2, i32 31), !dbg !43
  %251 = bitcast i32 %250 to float, !dbg !43
  %252 = fcmp ogt float %248, %251, !dbg !36
  %253 = fcmp uno float %248, 0.000000e+00, !dbg !42
  %254 = or i1 %252, %253, !dbg !40
  %255 = select i1 %254, float %248, float %251, !dbg !41
  %256 = bitcast float %255 to i32, !dbg !43
  %257 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %256, i32 1, i32 31), !dbg !43
  %258 = bitcast i32 %257 to float, !dbg !43
  %259 = fcmp ogt float %255, %258, !dbg !36
  %260 = fcmp uno float %255, 0.000000e+00, !dbg !42
  %261 = or i1 %259, %260, !dbg !40
  %262 = select i1 %261, float %255, float %258, !dbg !41
  %263 = icmp eq i32 %210, 0, !dbg !43
  %264 = zext nneg i32 %211 to i64, !dbg !43
  %265 = getelementptr float, ptr addrspace(3) @global_smem, i64 %264, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %265, float %262, i1 %263) #6, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %266 = icmp slt i32 %7, 8, !dbg !43
  %267 = sext i32 %7 to i64, !dbg !43
  %268 = getelementptr float, ptr addrspace(3) @global_smem, i64 %267, !dbg !43
  %269 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %268, i1 %266) #6, !dbg !43
  %270 = bitcast float %269 to i32, !dbg !43
  %271 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %270, i32 4, i32 31), !dbg !43
  %272 = bitcast i32 %271 to float, !dbg !43
  %273 = fcmp ogt float %269, %272, !dbg !36
  %274 = fcmp uno float %269, 0.000000e+00, !dbg !42
  %275 = or i1 %274, %273, !dbg !40
  %276 = select i1 %275, float %269, float %272, !dbg !41
  %277 = bitcast float %276 to i32, !dbg !43
  %278 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %277, i32 2, i32 31), !dbg !43
  %279 = bitcast i32 %278 to float, !dbg !43
  %280 = fcmp ogt float %276, %279, !dbg !36
  %281 = fcmp uno float %276, 0.000000e+00, !dbg !42
  %282 = or i1 %280, %281, !dbg !40
  %283 = select i1 %282, float %276, float %279, !dbg !41
  %284 = bitcast float %283 to i32, !dbg !43
  %285 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %284, i32 1, i32 31), !dbg !43
  %286 = bitcast i32 %285 to float, !dbg !43
  %287 = fcmp ogt float %283, %286, !dbg !36
  %288 = fcmp uno float %283, 0.000000e+00, !dbg !42
  %289 = or i1 %287, %288, !dbg !40
  %290 = select i1 %289, float %283, float %286, !dbg !41
  %291 = and i32 %7, 7, !dbg !43
  %292 = icmp eq i32 %291, 0, !dbg !43
  %293 = and i1 %266, %292, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %268, float %290, i1 %293) #6, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %294 = load float, ptr addrspace(3) @global_smem, align 4, !dbg !43
  %invariant.op242 = sub nsw i32 0, %16, !dbg !45
  %invariant.op243 = sub nsw i32 0, %17, !dbg !45
  %invariant.op244 = sub nsw i32 0, %18, !dbg !45
  br label %295, !dbg !45

295:                                              ; preds = %209, %__nv_tanhf.exit148
  %296 = phi float [ 0.000000e+00, %209 ], [ %485, %__nv_tanhf.exit148 ]
  %297 = phi float [ 0.000000e+00, %209 ], [ %486, %__nv_tanhf.exit148 ]
  %298 = phi float [ 0.000000e+00, %209 ], [ %487, %__nv_tanhf.exit148 ]
  %299 = phi float [ 0.000000e+00, %209 ], [ %488, %__nv_tanhf.exit148 ]
  %300 = phi i32 [ 0, %209 ], [ %489, %__nv_tanhf.exit148 ]
  %301 = or i32 %300, %9, !dbg !46
  %302 = add i32 %301, %15, !dbg !47
  %303 = sext i32 %302 to i64, !dbg !48
  %304 = getelementptr i16, ptr addrspace(1) %0, i64 %303, !dbg !48
  %305 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %304, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !49
  %306 = extractvalue { i32, i32 } %305, 0, !dbg !49
  %307 = extractvalue { i32, i32 } %305, 1, !dbg !49
  %308 = trunc i32 %306 to i16, !dbg !49
  %extelt.offset4 = lshr i32 %306, 16, !dbg !49
  %309 = trunc i32 %extelt.offset4 to i16, !dbg !49
  %310 = trunc i32 %307 to i16, !dbg !49
  %extelt.offset5 = lshr i32 %307, 16, !dbg !49
  %311 = trunc i32 %extelt.offset5 to i16, !dbg !49
  %312 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %308) #6, !dbg !50
  %313 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %309) #6, !dbg !50
  %314 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %310) #6, !dbg !50
  %315 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %311) #6, !dbg !50
  %316 = fmul float %312, 6.250000e-02, !dbg !51
  %317 = fmul float %313, 6.250000e-02, !dbg !51
  %318 = fmul float %314, 6.250000e-02, !dbg !51
  %319 = fmul float %315, 6.250000e-02, !dbg !51
  %320 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %316, float 5.000000e+01) #6, !dbg !52
  %321 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %317, float 5.000000e+01) #6, !dbg !52
  %322 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %318, float 5.000000e+01) #6, !dbg !52
  %323 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %319, float 5.000000e+01) #6, !dbg !52
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i73 = icmp eq i32 %324, 0, !dbg !53
  %325 = tail call float @llvm.nvvm.fabs.ftz.f(float %320) #6, !dbg !53
  %326 = tail call float @llvm.nvvm.fabs.f(float %320) #6, !dbg !53
  %.01.i74 = select i1 %.not.i73, float %326, float %325, !dbg !53
  %327 = fcmp ult float %.01.i74, 0x3FE3333340000000, !dbg !53
  br i1 %327, label %__internal_fmad.exit3.i80, label %__internal_fmad.exit1.i75, !dbg !53

__internal_fmad.exit1.i75:                        ; preds = %295
  %328 = fmul float %.01.i74, 0x4007154760000000, !dbg !53
  %329 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %328) #6, !dbg !53
  %330 = fadd float %329, 1.000000e+00, !dbg !53
  %331 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %330) #7, !dbg !53, !srcloc !24
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i76 = icmp eq i32 %332, 0, !dbg !53
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %331, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %331, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i77 = select i1 %.not6.i76, float %334, float %333, !dbg !53
  %335 = fcmp oge float %.01.i74, 0x4022059680000000, !dbg !53
  %s.0.i78 = select i1 %335, float 1.000000e+00, float %.03.i77, !dbg !53
  %336 = bitcast float %s.0.i78 to i32, !dbg !53
  %337 = bitcast float %320 to i32, !dbg !53
  %338 = and i32 %337, -2147483648, !dbg !53
  %339 = or i32 %338, %336, !dbg !53
  %340 = bitcast i32 %339 to float, !dbg !53
  br label %__nv_tanhf.exit91, !dbg !53

__internal_fmad.exit3.i80:                        ; preds = %295
  %341 = fmul float %320, %320, !dbg !53
  %342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i81 = icmp eq i32 %342, 0, !dbg !53
  %343 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %341, float 0xBFAAC795C0000000) #6, !dbg !53
  %344 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %341, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i82 = select i1 %.not1.i81, float %344, float %343, !dbg !53
  %345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i83 = icmp eq i32 %345, 0, !dbg !53
  %346 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i82, float %341, float 0x3FC10B2820000000) #6, !dbg !53
  %347 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i82, float %341, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i84 = select i1 %.not2.i83, float %347, float %346, !dbg !53
  %348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i85 = icmp eq i32 %348, 0, !dbg !53
  %349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i84, float %341, float 0xBFD5553DA0000000) #6, !dbg !53
  %350 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i84, float %341, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i86 = select i1 %.not3.i85, float %350, float %349, !dbg !53
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i87 = icmp eq i32 %351, 0, !dbg !53
  %352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i86, float %341, float 0.000000e+00) #6, !dbg !53
  %353 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i86, float %341, float 0.000000e+00) #6, !dbg !53
  %.04.i88 = select i1 %.not4.i87, float %353, float %352, !dbg !53
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i89 = icmp eq i32 %354, 0, !dbg !53
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i88, float %320, float %320) #6, !dbg !53
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i88, float %320, float %320) #6, !dbg !53
  %.02.i90 = select i1 %.not5.i89, float %356, float %355, !dbg !53
  br label %__nv_tanhf.exit91, !dbg !53

__nv_tanhf.exit91:                                ; preds = %__internal_fmad.exit1.i75, %__internal_fmad.exit3.i80
  %s.1.i79 = phi float [ %340, %__internal_fmad.exit1.i75 ], [ %.02.i90, %__internal_fmad.exit3.i80 ], !dbg !53
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i92 = icmp eq i32 %357, 0, !dbg !53
  %358 = tail call float @llvm.nvvm.fabs.ftz.f(float %321) #6, !dbg !53
  %359 = tail call float @llvm.nvvm.fabs.f(float %321) #6, !dbg !53
  %.01.i93 = select i1 %.not.i92, float %359, float %358, !dbg !53
  %360 = fcmp ult float %.01.i93, 0x3FE3333340000000, !dbg !53
  br i1 %360, label %__internal_fmad.exit3.i99, label %__internal_fmad.exit1.i94, !dbg !53

__internal_fmad.exit1.i94:                        ; preds = %__nv_tanhf.exit91
  %361 = fmul float %.01.i93, 0x4007154760000000, !dbg !53
  %362 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %361) #6, !dbg !53
  %363 = fadd float %362, 1.000000e+00, !dbg !53
  %364 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %363) #7, !dbg !53, !srcloc !24
  %365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i95 = icmp eq i32 %365, 0, !dbg !53
  %366 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %364, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %367 = tail call float @llvm.nvvm.fma.rn.f(float %364, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i96 = select i1 %.not6.i95, float %367, float %366, !dbg !53
  %368 = fcmp oge float %.01.i93, 0x4022059680000000, !dbg !53
  %s.0.i97 = select i1 %368, float 1.000000e+00, float %.03.i96, !dbg !53
  %369 = bitcast float %s.0.i97 to i32, !dbg !53
  %370 = bitcast float %321 to i32, !dbg !53
  %371 = and i32 %370, -2147483648, !dbg !53
  %372 = or i32 %371, %369, !dbg !53
  %373 = bitcast i32 %372 to float, !dbg !53
  br label %__nv_tanhf.exit110, !dbg !53

__internal_fmad.exit3.i99:                        ; preds = %__nv_tanhf.exit91
  %374 = fmul float %321, %321, !dbg !53
  %375 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i100 = icmp eq i32 %375, 0, !dbg !53
  %376 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %374, float 0xBFAAC795C0000000) #6, !dbg !53
  %377 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %374, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i101 = select i1 %.not1.i100, float %377, float %376, !dbg !53
  %378 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i102 = icmp eq i32 %378, 0, !dbg !53
  %379 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i101, float %374, float 0x3FC10B2820000000) #6, !dbg !53
  %380 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i101, float %374, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i103 = select i1 %.not2.i102, float %380, float %379, !dbg !53
  %381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i104 = icmp eq i32 %381, 0, !dbg !53
  %382 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i103, float %374, float 0xBFD5553DA0000000) #6, !dbg !53
  %383 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i103, float %374, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i105 = select i1 %.not3.i104, float %383, float %382, !dbg !53
  %384 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i106 = icmp eq i32 %384, 0, !dbg !53
  %385 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i105, float %374, float 0.000000e+00) #6, !dbg !53
  %386 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i105, float %374, float 0.000000e+00) #6, !dbg !53
  %.04.i107 = select i1 %.not4.i106, float %386, float %385, !dbg !53
  %387 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i108 = icmp eq i32 %387, 0, !dbg !53
  %388 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i107, float %321, float %321) #6, !dbg !53
  %389 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i107, float %321, float %321) #6, !dbg !53
  %.02.i109 = select i1 %.not5.i108, float %389, float %388, !dbg !53
  br label %__nv_tanhf.exit110, !dbg !53

__nv_tanhf.exit110:                               ; preds = %__internal_fmad.exit1.i94, %__internal_fmad.exit3.i99
  %s.1.i98 = phi float [ %373, %__internal_fmad.exit1.i94 ], [ %.02.i109, %__internal_fmad.exit3.i99 ], !dbg !53
  %390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i111 = icmp eq i32 %390, 0, !dbg !53
  %391 = tail call float @llvm.nvvm.fabs.ftz.f(float %322) #6, !dbg !53
  %392 = tail call float @llvm.nvvm.fabs.f(float %322) #6, !dbg !53
  %.01.i112 = select i1 %.not.i111, float %392, float %391, !dbg !53
  %393 = fcmp ult float %.01.i112, 0x3FE3333340000000, !dbg !53
  br i1 %393, label %__internal_fmad.exit3.i118, label %__internal_fmad.exit1.i113, !dbg !53

__internal_fmad.exit1.i113:                       ; preds = %__nv_tanhf.exit110
  %394 = fmul float %.01.i112, 0x4007154760000000, !dbg !53
  %395 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %394) #6, !dbg !53
  %396 = fadd float %395, 1.000000e+00, !dbg !53
  %397 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %396) #7, !dbg !53, !srcloc !24
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i114 = icmp eq i32 %398, 0, !dbg !53
  %399 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %397, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %400 = tail call float @llvm.nvvm.fma.rn.f(float %397, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i115 = select i1 %.not6.i114, float %400, float %399, !dbg !53
  %401 = fcmp oge float %.01.i112, 0x4022059680000000, !dbg !53
  %s.0.i116 = select i1 %401, float 1.000000e+00, float %.03.i115, !dbg !53
  %402 = bitcast float %s.0.i116 to i32, !dbg !53
  %403 = bitcast float %322 to i32, !dbg !53
  %404 = and i32 %403, -2147483648, !dbg !53
  %405 = or i32 %404, %402, !dbg !53
  %406 = bitcast i32 %405 to float, !dbg !53
  br label %__nv_tanhf.exit129, !dbg !53

__internal_fmad.exit3.i118:                       ; preds = %__nv_tanhf.exit110
  %407 = fmul float %322, %322, !dbg !53
  %408 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i119 = icmp eq i32 %408, 0, !dbg !53
  %409 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %407, float 0xBFAAC795C0000000) #6, !dbg !53
  %410 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %407, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i120 = select i1 %.not1.i119, float %410, float %409, !dbg !53
  %411 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i121 = icmp eq i32 %411, 0, !dbg !53
  %412 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i120, float %407, float 0x3FC10B2820000000) #6, !dbg !53
  %413 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i120, float %407, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i122 = select i1 %.not2.i121, float %413, float %412, !dbg !53
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i123 = icmp eq i32 %414, 0, !dbg !53
  %415 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i122, float %407, float 0xBFD5553DA0000000) #6, !dbg !53
  %416 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i122, float %407, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i124 = select i1 %.not3.i123, float %416, float %415, !dbg !53
  %417 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i125 = icmp eq i32 %417, 0, !dbg !53
  %418 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i124, float %407, float 0.000000e+00) #6, !dbg !53
  %419 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i124, float %407, float 0.000000e+00) #6, !dbg !53
  %.04.i126 = select i1 %.not4.i125, float %419, float %418, !dbg !53
  %420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i127 = icmp eq i32 %420, 0, !dbg !53
  %421 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i126, float %322, float %322) #6, !dbg !53
  %422 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i126, float %322, float %322) #6, !dbg !53
  %.02.i128 = select i1 %.not5.i127, float %422, float %421, !dbg !53
  br label %__nv_tanhf.exit129, !dbg !53

__nv_tanhf.exit129:                               ; preds = %__internal_fmad.exit1.i113, %__internal_fmad.exit3.i118
  %s.1.i117 = phi float [ %406, %__internal_fmad.exit1.i113 ], [ %.02.i128, %__internal_fmad.exit3.i118 ], !dbg !53
  %423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i130 = icmp eq i32 %423, 0, !dbg !53
  %424 = tail call float @llvm.nvvm.fabs.ftz.f(float %323) #6, !dbg !53
  %425 = tail call float @llvm.nvvm.fabs.f(float %323) #6, !dbg !53
  %.01.i131 = select i1 %.not.i130, float %425, float %424, !dbg !53
  %426 = fcmp ult float %.01.i131, 0x3FE3333340000000, !dbg !53
  br i1 %426, label %__internal_fmad.exit3.i137, label %__internal_fmad.exit1.i132, !dbg !53

__internal_fmad.exit1.i132:                       ; preds = %__nv_tanhf.exit129
  %427 = fmul float %.01.i131, 0x4007154760000000, !dbg !53
  %428 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %427) #6, !dbg !53
  %429 = fadd float %428, 1.000000e+00, !dbg !53
  %430 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %429) #7, !dbg !53, !srcloc !24
  %431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i133 = icmp eq i32 %431, 0, !dbg !53
  %432 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %430, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %433 = tail call float @llvm.nvvm.fma.rn.f(float %430, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i134 = select i1 %.not6.i133, float %433, float %432, !dbg !53
  %434 = fcmp oge float %.01.i131, 0x4022059680000000, !dbg !53
  %s.0.i135 = select i1 %434, float 1.000000e+00, float %.03.i134, !dbg !53
  %435 = bitcast float %s.0.i135 to i32, !dbg !53
  %436 = bitcast float %323 to i32, !dbg !53
  %437 = and i32 %436, -2147483648, !dbg !53
  %438 = or i32 %437, %435, !dbg !53
  %439 = bitcast i32 %438 to float, !dbg !53
  br label %__nv_tanhf.exit148, !dbg !53

__internal_fmad.exit3.i137:                       ; preds = %__nv_tanhf.exit129
  %440 = fmul float %323, %323, !dbg !53
  %441 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i138 = icmp eq i32 %441, 0, !dbg !53
  %442 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %440, float 0xBFAAC795C0000000) #6, !dbg !53
  %443 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %440, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i139 = select i1 %.not1.i138, float %443, float %442, !dbg !53
  %444 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i140 = icmp eq i32 %444, 0, !dbg !53
  %445 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i139, float %440, float 0x3FC10B2820000000) #6, !dbg !53
  %446 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i139, float %440, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i141 = select i1 %.not2.i140, float %446, float %445, !dbg !53
  %447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i142 = icmp eq i32 %447, 0, !dbg !53
  %448 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i141, float %440, float 0xBFD5553DA0000000) #6, !dbg !53
  %449 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i141, float %440, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i143 = select i1 %.not3.i142, float %449, float %448, !dbg !53
  %450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i144 = icmp eq i32 %450, 0, !dbg !53
  %451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i143, float %440, float 0.000000e+00) #6, !dbg !53
  %452 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i143, float %440, float 0.000000e+00) #6, !dbg !53
  %.04.i145 = select i1 %.not4.i144, float %452, float %451, !dbg !53
  %453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i146 = icmp eq i32 %453, 0, !dbg !53
  %454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i145, float %323, float %323) #6, !dbg !53
  %455 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i145, float %323, float %323) #6, !dbg !53
  %.02.i147 = select i1 %.not5.i146, float %455, float %454, !dbg !53
  br label %__nv_tanhf.exit148, !dbg !53

__nv_tanhf.exit148:                               ; preds = %__internal_fmad.exit1.i132, %__internal_fmad.exit3.i137
  %s.1.i136 = phi float [ %439, %__internal_fmad.exit1.i132 ], [ %.02.i147, %__internal_fmad.exit3.i137 ], !dbg !53
  %456 = fmul float %s.1.i79, 5.000000e+01, !dbg !54
  %457 = fmul float %s.1.i98, 5.000000e+01, !dbg !54
  %458 = fmul float %s.1.i117, 5.000000e+01, !dbg !54
  %459 = fmul float %s.1.i136, 5.000000e+01, !dbg !54
  %460 = sub i32 %301, %14, !dbg !55
  %461 = icmp sgt i32 %460, 0, !dbg !56
  %462 = icmp sgt i32 %300, %invariant.op242, !dbg !56
  %463 = icmp sgt i32 %300, %invariant.op243, !dbg !56
  %464 = icmp sgt i32 %300, %invariant.op244, !dbg !56
  %465 = select i1 %461, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %466 = select i1 %462, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %467 = select i1 %463, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %468 = select i1 %464, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %469 = fadd float %465, %456, !dbg !58
  %470 = fadd float %466, %457, !dbg !58
  %471 = fadd float %467, %458, !dbg !58
  %472 = fadd float %468, %459, !dbg !58
  %473 = fsub float %469, %294, !dbg !59
  %474 = fsub float %470, %294, !dbg !59
  %475 = fsub float %471, %294, !dbg !59
  %476 = fsub float %472, %294, !dbg !59
  %477 = fmul float %473, 0x3FF7154760000000, !dbg !60
  %478 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %477) #6, !dbg !60
  %479 = fmul float %474, 0x3FF7154760000000, !dbg !60
  %480 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %479) #6, !dbg !60
  %481 = fmul float %475, 0x3FF7154760000000, !dbg !60
  %482 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %481) #6, !dbg !60
  %483 = fmul float %476, 0x3FF7154760000000, !dbg !60
  %484 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %483) #6, !dbg !60
  %485 = fadd float %296, %478, !dbg !61
  %486 = fadd float %297, %480, !dbg !61
  %487 = fadd float %298, %482, !dbg !61
  %488 = fadd float %299, %484, !dbg !61
  %489 = add nuw nsw i32 %300, 1024, !dbg !45
  %490 = icmp ult i32 %300, 7168, !dbg !45
  br i1 %490, label %295, label %491, !dbg !45

491:                                              ; preds = %__nv_tanhf.exit148
  tail call void @llvm.nvvm.barrier0(), !dbg !62
  %492 = fadd float %485, %486, !dbg !66
  %493 = fadd float %487, %492, !dbg !66
  %494 = fadd float %488, %493, !dbg !66
  %495 = bitcast float %494 to i32, !dbg !62
  %496 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %495, i32 16, i32 31), !dbg !62
  %497 = bitcast i32 %496 to float, !dbg !62
  %498 = fadd float %494, %497, !dbg !66
  %499 = bitcast float %498 to i32, !dbg !62
  %500 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %499, i32 8, i32 31), !dbg !62
  %501 = bitcast i32 %500 to float, !dbg !62
  %502 = fadd float %498, %501, !dbg !66
  %503 = bitcast float %502 to i32, !dbg !62
  %504 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %503, i32 4, i32 31), !dbg !62
  %505 = bitcast i32 %504 to float, !dbg !62
  %506 = fadd float %502, %505, !dbg !66
  %507 = bitcast float %506 to i32, !dbg !62
  %508 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %507, i32 2, i32 31), !dbg !62
  %509 = bitcast i32 %508 to float, !dbg !62
  %510 = fadd float %506, %509, !dbg !66
  %511 = bitcast float %510 to i32, !dbg !62
  %512 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %511, i32 1, i32 31), !dbg !62
  %513 = bitcast i32 %512 to float, !dbg !62
  %514 = fadd float %510, %513, !dbg !66
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %265, float %514, i1 %263) #6, !dbg !62
  tail call void @llvm.nvvm.barrier0(), !dbg !62
  %515 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %268, i1 %266) #6, !dbg !62
  %516 = bitcast float %515 to i32, !dbg !62
  %517 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %516, i32 4, i32 31), !dbg !62
  %518 = bitcast i32 %517 to float, !dbg !62
  %519 = fadd float %515, %518, !dbg !66
  %520 = bitcast float %519 to i32, !dbg !62
  %521 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %520, i32 2, i32 31), !dbg !62
  %522 = bitcast i32 %521 to float, !dbg !62
  %523 = fadd float %519, %522, !dbg !66
  %524 = bitcast float %523 to i32, !dbg !62
  %525 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %524, i32 1, i32 31), !dbg !62
  %526 = bitcast i32 %525 to float, !dbg !62
  %527 = fadd float %523, %526, !dbg !66
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %268, float %527, i1 %293) #6, !dbg !62
  tail call void @llvm.nvvm.barrier0(), !dbg !62
  %528 = load float, ptr addrspace(3) @global_smem, align 4, !dbg !62
  %invariant.op245 = sub nsw i32 0, %16, !dbg !70
  %invariant.op246 = sub nsw i32 0, %17, !dbg !70
  %invariant.op247 = sub nsw i32 0, %18, !dbg !70
  br label %529, !dbg !70

529:                                              ; preds = %491, %__nv_tanhf.exit72
  %530 = phi i32 [ 0, %491 ], [ %746, %__nv_tanhf.exit72 ]
  %531 = or i32 %530, %9, !dbg !71
  %532 = add i32 %531, %15, !dbg !72
  %533 = sext i32 %532 to i64, !dbg !73
  %534 = getelementptr i16, ptr addrspace(1) %0, i64 %533, !dbg !73
  %535 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_first.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %534, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !74
  %536 = extractvalue { i32, i32 } %535, 0, !dbg !74
  %537 = extractvalue { i32, i32 } %535, 1, !dbg !74
  %538 = trunc i32 %536 to i16, !dbg !74
  %extelt.offset = lshr i32 %536, 16, !dbg !74
  %539 = trunc i32 %extelt.offset to i16, !dbg !74
  %540 = trunc i32 %537 to i16, !dbg !74
  %extelt.offset3 = lshr i32 %537, 16, !dbg !74
  %541 = trunc i32 %extelt.offset3 to i16, !dbg !74
  %542 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %538) #6, !dbg !75
  %543 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %539) #6, !dbg !75
  %544 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %540) #6, !dbg !75
  %545 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %541) #6, !dbg !75
  %546 = fmul float %542, 6.250000e-02, !dbg !76
  %547 = fmul float %543, 6.250000e-02, !dbg !76
  %548 = fmul float %544, 6.250000e-02, !dbg !76
  %549 = fmul float %545, 6.250000e-02, !dbg !76
  %550 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %546, float 5.000000e+01) #6, !dbg !77
  %551 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %547, float 5.000000e+01) #6, !dbg !77
  %552 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %548, float 5.000000e+01) #6, !dbg !77
  %553 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %549, float 5.000000e+01) #6, !dbg !77
  %554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i = icmp eq i32 %554, 0, !dbg !78
  %555 = tail call float @llvm.nvvm.fabs.ftz.f(float %550) #6, !dbg !78
  %556 = tail call float @llvm.nvvm.fabs.f(float %550) #6, !dbg !78
  %.01.i = select i1 %.not.i, float %556, float %555, !dbg !78
  %557 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !78
  br i1 %557, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !78

__internal_fmad.exit1.i:                          ; preds = %529
  %558 = fmul float %.01.i, 0x4007154760000000, !dbg !78
  %559 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %558) #6, !dbg !78
  %560 = fadd float %559, 1.000000e+00, !dbg !78
  %561 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %560) #7, !dbg !78, !srcloc !24
  %562 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i = icmp eq i32 %562, 0, !dbg !78
  %563 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %561, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %564 = tail call float @llvm.nvvm.fma.rn.f(float %561, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i = select i1 %.not6.i, float %564, float %563, !dbg !78
  %565 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !78
  %s.0.i = select i1 %565, float 1.000000e+00, float %.03.i, !dbg !78
  %566 = bitcast float %s.0.i to i32, !dbg !78
  %567 = bitcast float %550 to i32, !dbg !78
  %568 = and i32 %567, -2147483648, !dbg !78
  %569 = or i32 %568, %566, !dbg !78
  %570 = bitcast i32 %569 to float, !dbg !78
  br label %__nv_tanhf.exit, !dbg !78

__internal_fmad.exit3.i:                          ; preds = %529
  %571 = fmul float %550, %550, !dbg !78
  %572 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i = icmp eq i32 %572, 0, !dbg !78
  %573 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %571, float 0xBFAAC795C0000000) #6, !dbg !78
  %574 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %571, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i = select i1 %.not1.i, float %574, float %573, !dbg !78
  %575 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i = icmp eq i32 %575, 0, !dbg !78
  %576 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %571, float 0x3FC10B2820000000) #6, !dbg !78
  %577 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %571, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i = select i1 %.not2.i, float %577, float %576, !dbg !78
  %578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i = icmp eq i32 %578, 0, !dbg !78
  %579 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %571, float 0xBFD5553DA0000000) #6, !dbg !78
  %580 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %571, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i = select i1 %.not3.i, float %580, float %579, !dbg !78
  %581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i = icmp eq i32 %581, 0, !dbg !78
  %582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %571, float 0.000000e+00) #6, !dbg !78
  %583 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %571, float 0.000000e+00) #6, !dbg !78
  %.04.i = select i1 %.not4.i, float %583, float %582, !dbg !78
  %584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i = icmp eq i32 %584, 0, !dbg !78
  %585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %550, float %550) #6, !dbg !78
  %586 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %550, float %550) #6, !dbg !78
  %.02.i = select i1 %.not5.i, float %586, float %585, !dbg !78
  br label %__nv_tanhf.exit, !dbg !78

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %570, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !78
  %587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i16 = icmp eq i32 %587, 0, !dbg !78
  %588 = tail call float @llvm.nvvm.fabs.ftz.f(float %551) #6, !dbg !78
  %589 = tail call float @llvm.nvvm.fabs.f(float %551) #6, !dbg !78
  %.01.i17 = select i1 %.not.i16, float %589, float %588, !dbg !78
  %590 = fcmp ult float %.01.i17, 0x3FE3333340000000, !dbg !78
  br i1 %590, label %__internal_fmad.exit3.i23, label %__internal_fmad.exit1.i18, !dbg !78

__internal_fmad.exit1.i18:                        ; preds = %__nv_tanhf.exit
  %591 = fmul float %.01.i17, 0x4007154760000000, !dbg !78
  %592 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %591) #6, !dbg !78
  %593 = fadd float %592, 1.000000e+00, !dbg !78
  %594 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %593) #7, !dbg !78, !srcloc !24
  %595 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i19 = icmp eq i32 %595, 0, !dbg !78
  %596 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %594, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %597 = tail call float @llvm.nvvm.fma.rn.f(float %594, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i20 = select i1 %.not6.i19, float %597, float %596, !dbg !78
  %598 = fcmp oge float %.01.i17, 0x4022059680000000, !dbg !78
  %s.0.i21 = select i1 %598, float 1.000000e+00, float %.03.i20, !dbg !78
  %599 = bitcast float %s.0.i21 to i32, !dbg !78
  %600 = bitcast float %551 to i32, !dbg !78
  %601 = and i32 %600, -2147483648, !dbg !78
  %602 = or i32 %601, %599, !dbg !78
  %603 = bitcast i32 %602 to float, !dbg !78
  br label %__nv_tanhf.exit34, !dbg !78

__internal_fmad.exit3.i23:                        ; preds = %__nv_tanhf.exit
  %604 = fmul float %551, %551, !dbg !78
  %605 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i24 = icmp eq i32 %605, 0, !dbg !78
  %606 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %604, float 0xBFAAC795C0000000) #6, !dbg !78
  %607 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %604, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i25 = select i1 %.not1.i24, float %607, float %606, !dbg !78
  %608 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i26 = icmp eq i32 %608, 0, !dbg !78
  %609 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i25, float %604, float 0x3FC10B2820000000) #6, !dbg !78
  %610 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i25, float %604, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i27 = select i1 %.not2.i26, float %610, float %609, !dbg !78
  %611 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i28 = icmp eq i32 %611, 0, !dbg !78
  %612 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i27, float %604, float 0xBFD5553DA0000000) #6, !dbg !78
  %613 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i27, float %604, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i29 = select i1 %.not3.i28, float %613, float %612, !dbg !78
  %614 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i30 = icmp eq i32 %614, 0, !dbg !78
  %615 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i29, float %604, float 0.000000e+00) #6, !dbg !78
  %616 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i29, float %604, float 0.000000e+00) #6, !dbg !78
  %.04.i31 = select i1 %.not4.i30, float %616, float %615, !dbg !78
  %617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i32 = icmp eq i32 %617, 0, !dbg !78
  %618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i31, float %551, float %551) #6, !dbg !78
  %619 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i31, float %551, float %551) #6, !dbg !78
  %.02.i33 = select i1 %.not5.i32, float %619, float %618, !dbg !78
  br label %__nv_tanhf.exit34, !dbg !78

__nv_tanhf.exit34:                                ; preds = %__internal_fmad.exit1.i18, %__internal_fmad.exit3.i23
  %s.1.i22 = phi float [ %603, %__internal_fmad.exit1.i18 ], [ %.02.i33, %__internal_fmad.exit3.i23 ], !dbg !78
  %620 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i35 = icmp eq i32 %620, 0, !dbg !78
  %621 = tail call float @llvm.nvvm.fabs.ftz.f(float %552) #6, !dbg !78
  %622 = tail call float @llvm.nvvm.fabs.f(float %552) #6, !dbg !78
  %.01.i36 = select i1 %.not.i35, float %622, float %621, !dbg !78
  %623 = fcmp ult float %.01.i36, 0x3FE3333340000000, !dbg !78
  br i1 %623, label %__internal_fmad.exit3.i42, label %__internal_fmad.exit1.i37, !dbg !78

__internal_fmad.exit1.i37:                        ; preds = %__nv_tanhf.exit34
  %624 = fmul float %.01.i36, 0x4007154760000000, !dbg !78
  %625 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %624) #6, !dbg !78
  %626 = fadd float %625, 1.000000e+00, !dbg !78
  %627 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %626) #7, !dbg !78, !srcloc !24
  %628 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i38 = icmp eq i32 %628, 0, !dbg !78
  %629 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %627, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %630 = tail call float @llvm.nvvm.fma.rn.f(float %627, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i39 = select i1 %.not6.i38, float %630, float %629, !dbg !78
  %631 = fcmp oge float %.01.i36, 0x4022059680000000, !dbg !78
  %s.0.i40 = select i1 %631, float 1.000000e+00, float %.03.i39, !dbg !78
  %632 = bitcast float %s.0.i40 to i32, !dbg !78
  %633 = bitcast float %552 to i32, !dbg !78
  %634 = and i32 %633, -2147483648, !dbg !78
  %635 = or i32 %634, %632, !dbg !78
  %636 = bitcast i32 %635 to float, !dbg !78
  br label %__nv_tanhf.exit53, !dbg !78

__internal_fmad.exit3.i42:                        ; preds = %__nv_tanhf.exit34
  %637 = fmul float %552, %552, !dbg !78
  %638 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i43 = icmp eq i32 %638, 0, !dbg !78
  %639 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %637, float 0xBFAAC795C0000000) #6, !dbg !78
  %640 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %637, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i44 = select i1 %.not1.i43, float %640, float %639, !dbg !78
  %641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i45 = icmp eq i32 %641, 0, !dbg !78
  %642 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i44, float %637, float 0x3FC10B2820000000) #6, !dbg !78
  %643 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i44, float %637, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i46 = select i1 %.not2.i45, float %643, float %642, !dbg !78
  %644 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i47 = icmp eq i32 %644, 0, !dbg !78
  %645 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float %637, float 0xBFD5553DA0000000) #6, !dbg !78
  %646 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float %637, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i48 = select i1 %.not3.i47, float %646, float %645, !dbg !78
  %647 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i49 = icmp eq i32 %647, 0, !dbg !78
  %648 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %637, float 0.000000e+00) #6, !dbg !78
  %649 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %637, float 0.000000e+00) #6, !dbg !78
  %.04.i50 = select i1 %.not4.i49, float %649, float %648, !dbg !78
  %650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i51 = icmp eq i32 %650, 0, !dbg !78
  %651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i50, float %552, float %552) #6, !dbg !78
  %652 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i50, float %552, float %552) #6, !dbg !78
  %.02.i52 = select i1 %.not5.i51, float %652, float %651, !dbg !78
  br label %__nv_tanhf.exit53, !dbg !78

__nv_tanhf.exit53:                                ; preds = %__internal_fmad.exit1.i37, %__internal_fmad.exit3.i42
  %s.1.i41 = phi float [ %636, %__internal_fmad.exit1.i37 ], [ %.02.i52, %__internal_fmad.exit3.i42 ], !dbg !78
  %653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i54 = icmp eq i32 %653, 0, !dbg !78
  %654 = tail call float @llvm.nvvm.fabs.ftz.f(float %553) #6, !dbg !78
  %655 = tail call float @llvm.nvvm.fabs.f(float %553) #6, !dbg !78
  %.01.i55 = select i1 %.not.i54, float %655, float %654, !dbg !78
  %656 = fcmp ult float %.01.i55, 0x3FE3333340000000, !dbg !78
  br i1 %656, label %__internal_fmad.exit3.i61, label %__internal_fmad.exit1.i56, !dbg !78

__internal_fmad.exit1.i56:                        ; preds = %__nv_tanhf.exit53
  %657 = fmul float %.01.i55, 0x4007154760000000, !dbg !78
  %658 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %657) #6, !dbg !78
  %659 = fadd float %658, 1.000000e+00, !dbg !78
  %660 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %659) #7, !dbg !78, !srcloc !24
  %661 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i57 = icmp eq i32 %661, 0, !dbg !78
  %662 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %660, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %663 = tail call float @llvm.nvvm.fma.rn.f(float %660, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i58 = select i1 %.not6.i57, float %663, float %662, !dbg !78
  %664 = fcmp oge float %.01.i55, 0x4022059680000000, !dbg !78
  %s.0.i59 = select i1 %664, float 1.000000e+00, float %.03.i58, !dbg !78
  %665 = bitcast float %s.0.i59 to i32, !dbg !78
  %666 = bitcast float %553 to i32, !dbg !78
  %667 = and i32 %666, -2147483648, !dbg !78
  %668 = or i32 %667, %665, !dbg !78
  %669 = bitcast i32 %668 to float, !dbg !78
  br label %__nv_tanhf.exit72, !dbg !78

__internal_fmad.exit3.i61:                        ; preds = %__nv_tanhf.exit53
  %670 = fmul float %553, %553, !dbg !78
  %671 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i62 = icmp eq i32 %671, 0, !dbg !78
  %672 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %670, float 0xBFAAC795C0000000) #6, !dbg !78
  %673 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %670, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i63 = select i1 %.not1.i62, float %673, float %672, !dbg !78
  %674 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i64 = icmp eq i32 %674, 0, !dbg !78
  %675 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i63, float %670, float 0x3FC10B2820000000) #6, !dbg !78
  %676 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i63, float %670, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i65 = select i1 %.not2.i64, float %676, float %675, !dbg !78
  %677 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i66 = icmp eq i32 %677, 0, !dbg !78
  %678 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i65, float %670, float 0xBFD5553DA0000000) #6, !dbg !78
  %679 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i65, float %670, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i67 = select i1 %.not3.i66, float %679, float %678, !dbg !78
  %680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i68 = icmp eq i32 %680, 0, !dbg !78
  %681 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i67, float %670, float 0.000000e+00) #6, !dbg !78
  %682 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i67, float %670, float 0.000000e+00) #6, !dbg !78
  %.04.i69 = select i1 %.not4.i68, float %682, float %681, !dbg !78
  %683 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i70 = icmp eq i32 %683, 0, !dbg !78
  %684 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i69, float %553, float %553) #6, !dbg !78
  %685 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i69, float %553, float %553) #6, !dbg !78
  %.02.i71 = select i1 %.not5.i70, float %685, float %684, !dbg !78
  br label %__nv_tanhf.exit72, !dbg !78

__nv_tanhf.exit72:                                ; preds = %__internal_fmad.exit1.i56, %__internal_fmad.exit3.i61
  %s.1.i60 = phi float [ %669, %__internal_fmad.exit1.i56 ], [ %.02.i71, %__internal_fmad.exit3.i61 ], !dbg !78
  %686 = fmul float %s.1.i, 5.000000e+01, !dbg !79
  %687 = fmul float %s.1.i22, 5.000000e+01, !dbg !79
  %688 = fmul float %s.1.i41, 5.000000e+01, !dbg !79
  %689 = fmul float %s.1.i60, 5.000000e+01, !dbg !79
  %690 = sub i32 %531, %14, !dbg !80
  %691 = icmp sgt i32 %690, 0, !dbg !81
  %692 = icmp sgt i32 %530, %invariant.op245, !dbg !81
  %693 = icmp sgt i32 %530, %invariant.op246, !dbg !81
  %694 = icmp sgt i32 %530, %invariant.op247, !dbg !81
  %695 = select i1 %691, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %696 = select i1 %692, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %697 = select i1 %693, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %698 = select i1 %694, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %699 = fadd float %695, %686, !dbg !83
  %700 = fadd float %696, %687, !dbg !83
  %701 = fadd float %697, %688, !dbg !83
  %702 = fadd float %698, %689, !dbg !83
  %703 = fsub float %699, %294, !dbg !84
  %704 = fsub float %700, %294, !dbg !84
  %705 = fsub float %701, %294, !dbg !84
  %706 = fsub float %702, %294, !dbg !84
  %707 = fmul float %703, 0x3FF7154760000000, !dbg !85
  %708 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %707) #6, !dbg !85
  %709 = fmul float %704, 0x3FF7154760000000, !dbg !85
  %710 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %709) #6, !dbg !85
  %711 = fmul float %705, 0x3FF7154760000000, !dbg !85
  %712 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %711) #6, !dbg !85
  %713 = fmul float %706, 0x3FF7154760000000, !dbg !85
  %714 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %713) #6, !dbg !85
  %715 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %708, float %528) #6, !dbg !86
  %716 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %710, float %528) #6, !dbg !86
  %717 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %712, float %528) #6, !dbg !86
  %718 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %714, float %528) #6, !dbg !86
  %719 = getelementptr i16, ptr addrspace(1) %1, i64 %533, !dbg !87
  %720 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %715) #6, !dbg !88
  %721 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %716) #6, !dbg !88
  %722 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %717) #6, !dbg !88
  %723 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %718) #6, !dbg !88
  %724 = insertelement <2 x i16> undef, i16 %720, i64 0, !dbg !88
  %725 = insertelement <2 x i16> %724, i16 %721, i64 1, !dbg !88
  %726 = bitcast <2 x i16> %725 to i32, !dbg !88
  %727 = insertelement <2 x i16> undef, i16 %722, i64 0, !dbg !88
  %728 = insertelement <2 x i16> %727, i16 %723, i64 1, !dbg !88
  %729 = bitcast <2 x i16> %728 to i32, !dbg !88
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %726, i32 %729, ptr addrspace(1) %719, i1 true) #6, !dbg !88
  %730 = getelementptr float, ptr addrspace(1) %2, i64 %533, !dbg !89
  %731 = bitcast float %715 to i32, !dbg !90
  %732 = bitcast float %716 to i32, !dbg !90
  %733 = bitcast float %717 to i32, !dbg !90
  %734 = bitcast float %718 to i32, !dbg !90
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %731, i32 %732, i32 %733, i32 %734, ptr addrspace(1) %730, i1 true) #6, !dbg !90
  %735 = getelementptr i16, ptr addrspace(1) %3, i64 %533, !dbg !91
  %736 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i) #6, !dbg !92
  %737 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i22) #6, !dbg !92
  %738 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i41) #6, !dbg !92
  %739 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i60) #6, !dbg !92
  %740 = insertelement <2 x i16> undef, i16 %736, i64 0, !dbg !92
  %741 = insertelement <2 x i16> %740, i16 %737, i64 1, !dbg !92
  %742 = bitcast <2 x i16> %741 to i32, !dbg !92
  %743 = insertelement <2 x i16> undef, i16 %738, i64 0, !dbg !92
  %744 = insertelement <2 x i16> %743, i16 %739, i64 1, !dbg !92
  %745 = bitcast <2 x i16> %744 to i32, !dbg !92
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %742, i32 %745, ptr addrspace(1) %735, i1 true) #6, !dbg !92
  %746 = add nuw nsw i32 %530, 1024, !dbg !70
  %747 = icmp ult i32 %530, 7168, !dbg !70
  br i1 %747, label %529, label %748, !dbg !70

748:                                              ; preds = %__nv_tanhf.exit72
  ret void, !dbg !93
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: alwaysinline nounwind
define float @__nv_tanhf(float %a) local_unnamed_addr #3 {
__nv_fabsf.exit:
  %0 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not = icmp eq i32 %0, 0
  %1 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #6
  %2 = tail call float @llvm.nvvm.fabs.f(float %a) #6
  %.01 = select i1 %.not, float %2, float %1
  %3 = fcmp ult float %.01, 0x3FE3333340000000
  br i1 %3, label %__internal_fmad.exit3, label %__internal_fmad.exit1

__internal_fmad.exit1:                            ; preds = %__nv_fabsf.exit
  %4 = fmul float %.01, 0x4007154760000000
  %5 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4) #6
  %6 = fadd float %5, 1.000000e+00
  %7 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6) #7, !srcloc !24
  %8 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not6 = icmp eq i32 %8, 0
  %9 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7, float -2.000000e+00, float 1.000000e+00) #6
  %10 = tail call float @llvm.nvvm.fma.rn.f(float %7, float -2.000000e+00, float 1.000000e+00) #6
  %.03 = select i1 %.not6, float %10, float %9
  %11 = fcmp oge float %.01, 0x4022059680000000
  %s.0 = select i1 %11, float 1.000000e+00, float %.03
  %12 = bitcast float %s.0 to i32
  %13 = bitcast float %a to i32
  %14 = and i32 %13, -2147483648
  %15 = or i32 %14, %12
  %16 = bitcast i32 %15 to float
  br label %33

__internal_fmad.exit3:                            ; preds = %__nv_fabsf.exit
  %17 = fmul float %a, %a
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not1 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #6
  %20 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #6
  %.06 = select i1 %.not1, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not2 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06, float %17, float 0x3FC10B2820000000) #6
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.06, float %17, float 0x3FC10B2820000000) #6
  %.05 = select i1 %.not2, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not3 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %17, float 0xBFD5553DA0000000) #6
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %17, float 0xBFD5553DA0000000) #6
  %.0 = select i1 %.not3, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not4 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0, float %17, float 0.000000e+00) #6
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.0, float %17, float 0.000000e+00) #6
  %.04 = select i1 %.not4, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not5 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04, float %a, float %a) #6
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.04, float %a, float %a) #6
  %.02 = select i1 %.not5, float %32, float %31
  br label %33

33:                                               ; preds = %__internal_fmad.exit3, %__internal_fmad.exit1
  %s.1 = phi float [ %16, %__internal_fmad.exit1 ], [ %.02, %__internal_fmad.exit3 ]
  ret float %s.1
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #6 = { nounwind }
attributes #7 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "cslgl43b6evpzbsdizz4sgx4ij43mjudjpcvodu3q74u7yjeexav.py", directory: "/tmp/torchinductor_zeus/sl")
!4 = !{ptr @triton__0d1d2d3d4de5de, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2d3d4de5de, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2d3d4de5de", linkageName: "triton__0d1d2d3d4de5de", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 33, scope: !7)
!11 = !DILocation(line: 21, column: 28, scope: !7)
!12 = !DILocation(line: 26, column: 18, scope: !7)
!13 = !DILocation(line: 32, column: 45, scope: !7)
!14 = !DILocation(line: 28, column: 36, scope: !7)
!15 = !DILocation(line: 41, column: 23, scope: !7)
!16 = !DILocation(line: 29, column: 27, scope: !7)
!17 = !DILocation(line: 32, column: 40, scope: !7)
!18 = !DILocation(line: 32, column: 34, scope: !7)
!19 = !DILocation(line: 32, column: 51, scope: !7)
!20 = !DILocation(line: 32, column: 102, scope: !7)
!21 = !DILocation(line: 34, column: 22, scope: !7)
!22 = !DILocation(line: 36, column: 22, scope: !7)
!23 = !DILocation(line: 37, column: 28, scope: !7)
!24 = !{i32 21046}
!25 = !DILocation(line: 38, column: 22, scope: !7)
!26 = !DILocation(line: 39, column: 21, scope: !7)
!27 = !DILocation(line: 47, column: 39, scope: !7)
!28 = !DILocation(line: 48, column: 23, scope: !7)
!29 = !DILocation(line: 36, column: 15, scope: !30, inlinedAt: !32)
!30 = distinct !DILexicalBlockFile(scope: !7, file: !31, discriminator: 0)
!31 = !DIFile(filename: "triton_helpers.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/torch/_inductor")
!32 = !DILocation(line: 51, column: 47, scope: !30)
!33 = !DILocation(line: 38, column: 21, scope: !30, inlinedAt: !32)
!34 = !DILocation(line: 38, column: 16, scope: !30, inlinedAt: !32)
!35 = !DILocation(line: 0, scope: !7)
!36 = !DILocation(line: 36, column: 15, scope: !37, inlinedAt: !38)
!37 = distinct !DILexicalBlockFile(scope: !30, file: !31, discriminator: 0)
!38 = !DILocation(line: 49, column: 29, scope: !37, inlinedAt: !39)
!39 = !DILocation(line: 53, column: 40, scope: !37)
!40 = !DILocation(line: 38, column: 16, scope: !37, inlinedAt: !38)
!41 = !DILocation(line: 39, column: 29, scope: !37, inlinedAt: !38)
!42 = !DILocation(line: 38, column: 21, scope: !37, inlinedAt: !38)
!43 = !DILocation(line: 49, column: 29, scope: !30, inlinedAt: !44)
!44 = !DILocation(line: 53, column: 40, scope: !30)
!45 = !DILocation(line: 55, column: 36, scope: !7)
!46 = !DILocation(line: 56, column: 27, scope: !7)
!47 = !DILocation(line: 59, column: 41, scope: !7)
!48 = !DILocation(line: 59, column: 35, scope: !7)
!49 = !DILocation(line: 59, column: 52, scope: !7)
!50 = !DILocation(line: 59, column: 103, scope: !7)
!51 = !DILocation(line: 61, column: 24, scope: !7)
!52 = !DILocation(line: 63, column: 24, scope: !7)
!53 = !DILocation(line: 64, column: 29, scope: !7)
!54 = !DILocation(line: 65, column: 24, scope: !7)
!55 = !DILocation(line: 66, column: 22, scope: !7)
!56 = !DILocation(line: 68, column: 25, scope: !7)
!57 = !DILocation(line: 74, column: 39, scope: !7)
!58 = !DILocation(line: 75, column: 24, scope: !7)
!59 = !DILocation(line: 77, column: 24, scope: !7)
!60 = !DILocation(line: 78, column: 23, scope: !7)
!61 = !DILocation(line: 81, column: 40, scope: !7)
!62 = !DILocation(line: 243, column: 36, scope: !63, inlinedAt: !65)
!63 = distinct !DILexicalBlockFile(scope: !7, file: !64, discriminator: 0)
!64 = !DIFile(filename: "standard.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/triton/language")
!65 = !DILocation(line: 82, column: 27, scope: !63)
!66 = !DILocation(line: 233, column: 15, scope: !67, inlinedAt: !68)
!67 = distinct !DILexicalBlockFile(scope: !63, file: !64, discriminator: 0)
!68 = !DILocation(line: 243, column: 36, scope: !67, inlinedAt: !69)
!69 = !DILocation(line: 82, column: 27, scope: !67)
!70 = !DILocation(line: 83, column: 36, scope: !7)
!71 = !DILocation(line: 84, column: 27, scope: !7)
!72 = !DILocation(line: 87, column: 41, scope: !7)
!73 = !DILocation(line: 87, column: 35, scope: !7)
!74 = !DILocation(line: 87, column: 52, scope: !7)
!75 = !DILocation(line: 87, column: 104, scope: !7)
!76 = !DILocation(line: 89, column: 24, scope: !7)
!77 = !DILocation(line: 91, column: 24, scope: !7)
!78 = !DILocation(line: 92, column: 29, scope: !7)
!79 = !DILocation(line: 93, column: 24, scope: !7)
!80 = !DILocation(line: 94, column: 22, scope: !7)
!81 = !DILocation(line: 96, column: 25, scope: !7)
!82 = !DILocation(line: 102, column: 39, scope: !7)
!83 = !DILocation(line: 103, column: 24, scope: !7)
!84 = !DILocation(line: 105, column: 24, scope: !7)
!85 = !DILocation(line: 106, column: 23, scope: !7)
!86 = !DILocation(line: 107, column: 24, scope: !7)
!87 = !DILocation(line: 109, column: 29, scope: !7)
!88 = !DILocation(line: 109, column: 53, scope: !7)
!89 = !DILocation(line: 110, column: 29, scope: !7)
!90 = !DILocation(line: 110, column: 53, scope: !7)
!91 = !DILocation(line: 111, column: 29, scope: !7)
!92 = !DILocation(line: 111, column: 53, scope: !7)
!93 = !DILocation(line: 83, column: 4, scope: !7)
