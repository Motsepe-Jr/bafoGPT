; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8]
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2d3d4de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %7 = and i32 %6, 127, !dbg !10
  %8 = shl nuw nsw i32 %7, 3, !dbg !10
  %9 = shl nuw nsw i32 %7, 2, !dbg !10
  %10 = or i32 %9, 512, !dbg !10
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !11
  %12 = shl i32 %11, 10, !dbg !12
  %13 = or i32 %12, %8, !dbg !13
  %14 = sext i32 %13 to i64, !dbg !14
  %15 = getelementptr i16, ptr addrspace(1) %0, i64 %14, !dbg !14
  %16 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %15, i1 true) #5, !dbg !15
  %17 = extractvalue { i32, i32, i32, i32 } %16, 0, !dbg !15
  %18 = extractvalue { i32, i32, i32, i32 } %16, 1, !dbg !15
  %19 = extractvalue { i32, i32, i32, i32 } %16, 2, !dbg !15
  %20 = extractvalue { i32, i32, i32, i32 } %16, 3, !dbg !15
  %21 = trunc i32 %17 to i16, !dbg !15
  %extelt.offset = lshr i32 %17, 16, !dbg !15
  %22 = trunc i32 %extelt.offset to i16, !dbg !15
  %23 = trunc i32 %18 to i16, !dbg !15
  %extelt.offset1 = lshr i32 %18, 16, !dbg !15
  %24 = trunc i32 %extelt.offset1 to i16, !dbg !15
  %25 = trunc i32 %19 to i16, !dbg !15
  %extelt.offset2 = lshr i32 %19, 16, !dbg !15
  %26 = trunc i32 %extelt.offset2 to i16, !dbg !15
  %27 = trunc i32 %20 to i16, !dbg !15
  %extelt.offset3 = lshr i32 %20, 16, !dbg !15
  %28 = trunc i32 %extelt.offset3 to i16, !dbg !15
  %29 = zext nneg i32 %8 to i64, !dbg !16
  %30 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %29, !dbg !16
  %31 = insertelement <1 x i16> undef, i16 %21, i64 0, !dbg !16
  store <1 x i16> %31, ptr addrspace(3) %30, align 2, !dbg !16
  %32 = or i32 %8, 1, !dbg !16
  %33 = zext nneg i32 %32 to i64, !dbg !16
  %34 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %33, !dbg !16
  %35 = insertelement <1 x i16> undef, i16 %22, i64 0, !dbg !16
  store <1 x i16> %35, ptr addrspace(3) %34, align 2, !dbg !16
  %36 = or i32 %8, 2, !dbg !16
  %37 = zext nneg i32 %36 to i64, !dbg !16
  %38 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %37, !dbg !16
  %39 = insertelement <1 x i16> undef, i16 %23, i64 0, !dbg !16
  store <1 x i16> %39, ptr addrspace(3) %38, align 2, !dbg !16
  %40 = or i32 %8, 3, !dbg !16
  %41 = zext nneg i32 %40 to i64, !dbg !16
  %42 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %41, !dbg !16
  %43 = insertelement <1 x i16> undef, i16 %24, i64 0, !dbg !16
  store <1 x i16> %43, ptr addrspace(3) %42, align 2, !dbg !16
  %44 = or i32 %8, 4, !dbg !16
  %45 = zext nneg i32 %44 to i64, !dbg !16
  %46 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %45, !dbg !16
  %47 = insertelement <1 x i16> undef, i16 %25, i64 0, !dbg !16
  store <1 x i16> %47, ptr addrspace(3) %46, align 2, !dbg !16
  %48 = or i32 %8, 5, !dbg !16
  %49 = zext nneg i32 %48 to i64, !dbg !16
  %50 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %49, !dbg !16
  %51 = insertelement <1 x i16> undef, i16 %26, i64 0, !dbg !16
  store <1 x i16> %51, ptr addrspace(3) %50, align 2, !dbg !16
  %52 = or i32 %8, 6, !dbg !16
  %53 = zext nneg i32 %52 to i64, !dbg !16
  %54 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %53, !dbg !16
  %55 = insertelement <1 x i16> undef, i16 %27, i64 0, !dbg !16
  store <1 x i16> %55, ptr addrspace(3) %54, align 2, !dbg !16
  %56 = or i32 %8, 7, !dbg !16
  %57 = zext nneg i32 %56 to i64, !dbg !16
  %58 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %57, !dbg !16
  %59 = insertelement <1 x i16> undef, i16 %28, i64 0, !dbg !16
  store <1 x i16> %59, ptr addrspace(3) %58, align 2, !dbg !16
  tail call void @llvm.nvvm.barrier0(), !dbg !16
  %60 = zext nneg i32 %9 to i64, !dbg !16
  %61 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %60, !dbg !16
  %62 = load i16, ptr addrspace(3) %61, align 2, !dbg !16
  %63 = or i32 %9, 1, !dbg !16
  %64 = zext nneg i32 %63 to i64, !dbg !16
  %65 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %64, !dbg !16
  %66 = load i16, ptr addrspace(3) %65, align 2, !dbg !16
  %67 = or i32 %9, 2, !dbg !16
  %68 = zext nneg i32 %67 to i64, !dbg !16
  %69 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %68, !dbg !16
  %70 = load i16, ptr addrspace(3) %69, align 2, !dbg !16
  %71 = or i32 %9, 3, !dbg !16
  %72 = zext nneg i32 %71 to i64, !dbg !16
  %73 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %72, !dbg !16
  %74 = load i16, ptr addrspace(3) %73, align 2, !dbg !16
  %75 = zext nneg i32 %10 to i64, !dbg !16
  %76 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %75, !dbg !16
  %77 = load i16, ptr addrspace(3) %76, align 2, !dbg !16
  %78 = or i32 %9, 513, !dbg !16
  %79 = zext nneg i32 %78 to i64, !dbg !16
  %80 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %79, !dbg !16
  %81 = load i16, ptr addrspace(3) %80, align 2, !dbg !16
  %82 = or i32 %9, 514, !dbg !16
  %83 = zext nneg i32 %82 to i64, !dbg !16
  %84 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %83, !dbg !16
  %85 = load i16, ptr addrspace(3) %84, align 2, !dbg !16
  %86 = or i32 %9, 515, !dbg !16
  %87 = zext nneg i32 %86 to i64, !dbg !16
  %88 = getelementptr i16, ptr addrspace(3) @global_smem, i64 %87, !dbg !16
  %89 = load i16, ptr addrspace(3) %88, align 2, !dbg !16
  %90 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %62) #5, !dbg !17
  %91 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %66) #5, !dbg !17
  %92 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %70) #5, !dbg !17
  %93 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %74) #5, !dbg !17
  %94 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %77) #5, !dbg !17
  %95 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %81) #5, !dbg !17
  %96 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %85) #5, !dbg !17
  %97 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %89) #5, !dbg !17
  %98 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %21) #5, !dbg !17
  %99 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %22) #5, !dbg !17
  %100 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %23) #5, !dbg !17
  %101 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %24) #5, !dbg !17
  %102 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %25) #5, !dbg !17
  %103 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %26) #5, !dbg !17
  %104 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %27) #5, !dbg !17
  %105 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %28) #5, !dbg !17
  %106 = getelementptr i16, ptr addrspace(1) %1, i64 %14, !dbg !18
  %107 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %106, i1 true) #5, !dbg !19
  %108 = extractvalue { i32, i32, i32, i32 } %107, 0, !dbg !19
  %109 = extractvalue { i32, i32, i32, i32 } %107, 1, !dbg !19
  %110 = extractvalue { i32, i32, i32, i32 } %107, 2, !dbg !19
  %111 = extractvalue { i32, i32, i32, i32 } %107, 3, !dbg !19
  %112 = trunc i32 %108 to i16, !dbg !19
  %extelt.offset4 = lshr i32 %108, 16, !dbg !19
  %113 = trunc i32 %extelt.offset4 to i16, !dbg !19
  %114 = trunc i32 %109 to i16, !dbg !19
  %extelt.offset5 = lshr i32 %109, 16, !dbg !19
  %115 = trunc i32 %extelt.offset5 to i16, !dbg !19
  %116 = trunc i32 %110 to i16, !dbg !19
  %extelt.offset6 = lshr i32 %110, 16, !dbg !19
  %117 = trunc i32 %extelt.offset6 to i16, !dbg !19
  %118 = trunc i32 %111 to i16, !dbg !19
  %extelt.offset7 = lshr i32 %111, 16, !dbg !19
  %119 = trunc i32 %extelt.offset7 to i16, !dbg !19
  %120 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %112) #5, !dbg !20
  %121 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %113) #5, !dbg !20
  %122 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %114) #5, !dbg !20
  %123 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %115) #5, !dbg !20
  %124 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %116) #5, !dbg !20
  %125 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %117) #5, !dbg !20
  %126 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %118) #5, !dbg !20
  %127 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %119) #5, !dbg !20
  %128 = fmul float %90, %90, !dbg !21
  %129 = fmul float %91, %91, !dbg !21
  %130 = fmul float %92, %92, !dbg !21
  %131 = fmul float %93, %93, !dbg !21
  %132 = fmul float %94, %94, !dbg !21
  %133 = fmul float %95, %95, !dbg !21
  %134 = fmul float %96, %96, !dbg !21
  %135 = fmul float %97, %97, !dbg !21
  %136 = fmul float %98, %98, !dbg !21
  %137 = fmul float %99, %99, !dbg !21
  %138 = fmul float %100, %100, !dbg !21
  %139 = fmul float %101, %101, !dbg !21
  %140 = fmul float %102, %102, !dbg !21
  %141 = fmul float %103, %103, !dbg !21
  %142 = fmul float %104, %104, !dbg !21
  %143 = fmul float %105, %105, !dbg !21
  %144 = fmul float %90, %128, !dbg !22
  %145 = fmul float %91, %129, !dbg !22
  %146 = fmul float %92, %130, !dbg !22
  %147 = fmul float %93, %131, !dbg !22
  %148 = fmul float %94, %132, !dbg !22
  %149 = fmul float %95, %133, !dbg !22
  %150 = fmul float %96, %134, !dbg !22
  %151 = fmul float %97, %135, !dbg !22
  %152 = fmul float %98, %136, !dbg !22
  %153 = fmul float %99, %137, !dbg !22
  %154 = fmul float %100, %138, !dbg !22
  %155 = fmul float %101, %139, !dbg !22
  %156 = fmul float %102, %140, !dbg !22
  %157 = fmul float %103, %141, !dbg !22
  %158 = fmul float %104, %142, !dbg !22
  %159 = fmul float %105, %143, !dbg !22
  %160 = fmul float %144, 0x3FA6E4E260000000, !dbg !23
  %161 = fmul float %145, 0x3FA6E4E260000000, !dbg !23
  %162 = fmul float %146, 0x3FA6E4E260000000, !dbg !23
  %163 = fmul float %147, 0x3FA6E4E260000000, !dbg !23
  %164 = fmul float %148, 0x3FA6E4E260000000, !dbg !23
  %165 = fmul float %149, 0x3FA6E4E260000000, !dbg !23
  %166 = fmul float %150, 0x3FA6E4E260000000, !dbg !23
  %167 = fmul float %151, 0x3FA6E4E260000000, !dbg !23
  %168 = fmul float %152, 0x3FA6E4E260000000, !dbg !23
  %169 = fmul float %153, 0x3FA6E4E260000000, !dbg !23
  %170 = fmul float %154, 0x3FA6E4E260000000, !dbg !23
  %171 = fmul float %155, 0x3FA6E4E260000000, !dbg !23
  %172 = fmul float %156, 0x3FA6E4E260000000, !dbg !23
  %173 = fmul float %157, 0x3FA6E4E260000000, !dbg !23
  %174 = fmul float %158, 0x3FA6E4E260000000, !dbg !23
  %175 = fmul float %159, 0x3FA6E4E260000000, !dbg !23
  %176 = fadd float %90, %160, !dbg !24
  %177 = fadd float %91, %161, !dbg !24
  %178 = fadd float %92, %162, !dbg !24
  %179 = fadd float %93, %163, !dbg !24
  %180 = fadd float %94, %164, !dbg !24
  %181 = fadd float %95, %165, !dbg !24
  %182 = fadd float %96, %166, !dbg !24
  %183 = fadd float %97, %167, !dbg !24
  %184 = fadd float %98, %168, !dbg !24
  %185 = fadd float %99, %169, !dbg !24
  %186 = fadd float %100, %170, !dbg !24
  %187 = fadd float %101, %171, !dbg !24
  %188 = fadd float %102, %172, !dbg !24
  %189 = fadd float %103, %173, !dbg !24
  %190 = fadd float %104, %174, !dbg !24
  %191 = fadd float %105, %175, !dbg !24
  %192 = fmul float %176, 0x3FE9884540000000, !dbg !25
  %193 = fmul float %177, 0x3FE9884540000000, !dbg !25
  %194 = fmul float %178, 0x3FE9884540000000, !dbg !25
  %195 = fmul float %179, 0x3FE9884540000000, !dbg !25
  %196 = fmul float %180, 0x3FE9884540000000, !dbg !25
  %197 = fmul float %181, 0x3FE9884540000000, !dbg !25
  %198 = fmul float %182, 0x3FE9884540000000, !dbg !25
  %199 = fmul float %183, 0x3FE9884540000000, !dbg !25
  %200 = fmul float %184, 0x3FE9884540000000, !dbg !25
  %201 = fmul float %185, 0x3FE9884540000000, !dbg !25
  %202 = fmul float %186, 0x3FE9884540000000, !dbg !25
  %203 = fmul float %187, 0x3FE9884540000000, !dbg !25
  %204 = fmul float %188, 0x3FE9884540000000, !dbg !25
  %205 = fmul float %189, 0x3FE9884540000000, !dbg !25
  %206 = fmul float %190, 0x3FE9884540000000, !dbg !25
  %207 = fmul float %191, 0x3FE9884540000000, !dbg !25
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i = icmp eq i32 %208, 0, !dbg !16
  %209 = tail call float @llvm.nvvm.fabs.ftz.f(float %192) #5, !dbg !16
  %210 = tail call float @llvm.nvvm.fabs.f(float %192) #5, !dbg !16
  %.01.i = select i1 %.not.i, float %210, float %209, !dbg !16
  %211 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !16
  br i1 %211, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !16

__internal_fmad.exit1.i:                          ; preds = %5
  %212 = fmul float %.01.i, 0x4007154760000000, !dbg !16
  %213 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %212) #5, !dbg !16
  %214 = fadd float %213, 1.000000e+00, !dbg !16
  %215 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %214) #6, !dbg !16, !srcloc !26
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i = icmp eq i32 %216, 0, !dbg !16
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %215, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %215, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i = select i1 %.not6.i, float %218, float %217, !dbg !16
  %219 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !16
  %s.0.i = select i1 %219, float 1.000000e+00, float %.03.i, !dbg !16
  %220 = bitcast float %s.0.i to i32, !dbg !16
  %221 = bitcast float %192 to i32, !dbg !16
  %222 = and i32 %221, -2147483648, !dbg !16
  %223 = or i32 %222, %220, !dbg !16
  %224 = bitcast i32 %223 to float, !dbg !16
  br label %__nv_tanhf.exit, !dbg !16

__internal_fmad.exit3.i:                          ; preds = %5
  %225 = fmul float %192, %192, !dbg !16
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i = icmp eq i32 %226, 0, !dbg !16
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %225, float 0xBFAAC795C0000000) #5, !dbg !16
  %228 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %225, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i = select i1 %.not1.i, float %228, float %227, !dbg !16
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i = icmp eq i32 %229, 0, !dbg !16
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %225, float 0x3FC10B2820000000) #5, !dbg !16
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %225, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i = select i1 %.not2.i, float %231, float %230, !dbg !16
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i = icmp eq i32 %232, 0, !dbg !16
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %225, float 0xBFD5553DA0000000) #5, !dbg !16
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %225, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i = select i1 %.not3.i, float %234, float %233, !dbg !16
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i = icmp eq i32 %235, 0, !dbg !16
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %225, float 0.000000e+00) #5, !dbg !16
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %225, float 0.000000e+00) #5, !dbg !16
  %.04.i = select i1 %.not4.i, float %237, float %236, !dbg !16
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i = icmp eq i32 %238, 0, !dbg !16
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %192, float %192) #5, !dbg !16
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %192, float %192) #5, !dbg !16
  %.02.i = select i1 %.not5.i, float %240, float %239, !dbg !16
  br label %__nv_tanhf.exit, !dbg !16

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %224, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !16
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i8 = icmp eq i32 %241, 0, !dbg !16
  %242 = tail call float @llvm.nvvm.fabs.ftz.f(float %193) #5, !dbg !16
  %243 = tail call float @llvm.nvvm.fabs.f(float %193) #5, !dbg !16
  %.01.i9 = select i1 %.not.i8, float %243, float %242, !dbg !16
  %244 = fcmp ult float %.01.i9, 0x3FE3333340000000, !dbg !16
  br i1 %244, label %__internal_fmad.exit3.i15, label %__internal_fmad.exit1.i10, !dbg !16

__internal_fmad.exit1.i10:                        ; preds = %__nv_tanhf.exit
  %245 = fmul float %.01.i9, 0x4007154760000000, !dbg !16
  %246 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %245) #5, !dbg !16
  %247 = fadd float %246, 1.000000e+00, !dbg !16
  %248 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %247) #6, !dbg !16, !srcloc !26
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i11 = icmp eq i32 %249, 0, !dbg !16
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %248, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %251 = tail call float @llvm.nvvm.fma.rn.f(float %248, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i12 = select i1 %.not6.i11, float %251, float %250, !dbg !16
  %252 = fcmp oge float %.01.i9, 0x4022059680000000, !dbg !16
  %s.0.i13 = select i1 %252, float 1.000000e+00, float %.03.i12, !dbg !16
  %253 = bitcast float %s.0.i13 to i32, !dbg !16
  %254 = bitcast float %193 to i32, !dbg !16
  %255 = and i32 %254, -2147483648, !dbg !16
  %256 = or i32 %255, %253, !dbg !16
  %257 = bitcast i32 %256 to float, !dbg !16
  br label %__nv_tanhf.exit26, !dbg !16

__internal_fmad.exit3.i15:                        ; preds = %__nv_tanhf.exit
  %258 = fmul float %193, %193, !dbg !16
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i16 = icmp eq i32 %259, 0, !dbg !16
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %258, float 0xBFAAC795C0000000) #5, !dbg !16
  %261 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %258, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i17 = select i1 %.not1.i16, float %261, float %260, !dbg !16
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i18 = icmp eq i32 %262, 0, !dbg !16
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i17, float %258, float 0x3FC10B2820000000) #5, !dbg !16
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i17, float %258, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i19 = select i1 %.not2.i18, float %264, float %263, !dbg !16
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i20 = icmp eq i32 %265, 0, !dbg !16
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i19, float %258, float 0xBFD5553DA0000000) #5, !dbg !16
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i19, float %258, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i21 = select i1 %.not3.i20, float %267, float %266, !dbg !16
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i22 = icmp eq i32 %268, 0, !dbg !16
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i21, float %258, float 0.000000e+00) #5, !dbg !16
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i21, float %258, float 0.000000e+00) #5, !dbg !16
  %.04.i23 = select i1 %.not4.i22, float %270, float %269, !dbg !16
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i24 = icmp eq i32 %271, 0, !dbg !16
  %272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i23, float %193, float %193) #5, !dbg !16
  %273 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i23, float %193, float %193) #5, !dbg !16
  %.02.i25 = select i1 %.not5.i24, float %273, float %272, !dbg !16
  br label %__nv_tanhf.exit26, !dbg !16

__nv_tanhf.exit26:                                ; preds = %__internal_fmad.exit1.i10, %__internal_fmad.exit3.i15
  %s.1.i14 = phi float [ %257, %__internal_fmad.exit1.i10 ], [ %.02.i25, %__internal_fmad.exit3.i15 ], !dbg !16
  %274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i27 = icmp eq i32 %274, 0, !dbg !16
  %275 = tail call float @llvm.nvvm.fabs.ftz.f(float %194) #5, !dbg !16
  %276 = tail call float @llvm.nvvm.fabs.f(float %194) #5, !dbg !16
  %.01.i28 = select i1 %.not.i27, float %276, float %275, !dbg !16
  %277 = fcmp ult float %.01.i28, 0x3FE3333340000000, !dbg !16
  br i1 %277, label %__internal_fmad.exit3.i34, label %__internal_fmad.exit1.i29, !dbg !16

__internal_fmad.exit1.i29:                        ; preds = %__nv_tanhf.exit26
  %278 = fmul float %.01.i28, 0x4007154760000000, !dbg !16
  %279 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %278) #5, !dbg !16
  %280 = fadd float %279, 1.000000e+00, !dbg !16
  %281 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %280) #6, !dbg !16, !srcloc !26
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i30 = icmp eq i32 %282, 0, !dbg !16
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %281, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %284 = tail call float @llvm.nvvm.fma.rn.f(float %281, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i31 = select i1 %.not6.i30, float %284, float %283, !dbg !16
  %285 = fcmp oge float %.01.i28, 0x4022059680000000, !dbg !16
  %s.0.i32 = select i1 %285, float 1.000000e+00, float %.03.i31, !dbg !16
  %286 = bitcast float %s.0.i32 to i32, !dbg !16
  %287 = bitcast float %194 to i32, !dbg !16
  %288 = and i32 %287, -2147483648, !dbg !16
  %289 = or i32 %288, %286, !dbg !16
  %290 = bitcast i32 %289 to float, !dbg !16
  br label %__nv_tanhf.exit45, !dbg !16

__internal_fmad.exit3.i34:                        ; preds = %__nv_tanhf.exit26
  %291 = fmul float %194, %194, !dbg !16
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i35 = icmp eq i32 %292, 0, !dbg !16
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %291, float 0xBFAAC795C0000000) #5, !dbg !16
  %294 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %291, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i36 = select i1 %.not1.i35, float %294, float %293, !dbg !16
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i37 = icmp eq i32 %295, 0, !dbg !16
  %296 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i36, float %291, float 0x3FC10B2820000000) #5, !dbg !16
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i36, float %291, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i38 = select i1 %.not2.i37, float %297, float %296, !dbg !16
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i39 = icmp eq i32 %298, 0, !dbg !16
  %299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i38, float %291, float 0xBFD5553DA0000000) #5, !dbg !16
  %300 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i38, float %291, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i40 = select i1 %.not3.i39, float %300, float %299, !dbg !16
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i41 = icmp eq i32 %301, 0, !dbg !16
  %302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i40, float %291, float 0.000000e+00) #5, !dbg !16
  %303 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i40, float %291, float 0.000000e+00) #5, !dbg !16
  %.04.i42 = select i1 %.not4.i41, float %303, float %302, !dbg !16
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i43 = icmp eq i32 %304, 0, !dbg !16
  %305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i42, float %194, float %194) #5, !dbg !16
  %306 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i42, float %194, float %194) #5, !dbg !16
  %.02.i44 = select i1 %.not5.i43, float %306, float %305, !dbg !16
  br label %__nv_tanhf.exit45, !dbg !16

__nv_tanhf.exit45:                                ; preds = %__internal_fmad.exit1.i29, %__internal_fmad.exit3.i34
  %s.1.i33 = phi float [ %290, %__internal_fmad.exit1.i29 ], [ %.02.i44, %__internal_fmad.exit3.i34 ], !dbg !16
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i46 = icmp eq i32 %307, 0, !dbg !16
  %308 = tail call float @llvm.nvvm.fabs.ftz.f(float %195) #5, !dbg !16
  %309 = tail call float @llvm.nvvm.fabs.f(float %195) #5, !dbg !16
  %.01.i47 = select i1 %.not.i46, float %309, float %308, !dbg !16
  %310 = fcmp ult float %.01.i47, 0x3FE3333340000000, !dbg !16
  br i1 %310, label %__internal_fmad.exit3.i53, label %__internal_fmad.exit1.i48, !dbg !16

__internal_fmad.exit1.i48:                        ; preds = %__nv_tanhf.exit45
  %311 = fmul float %.01.i47, 0x4007154760000000, !dbg !16
  %312 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %311) #5, !dbg !16
  %313 = fadd float %312, 1.000000e+00, !dbg !16
  %314 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %313) #6, !dbg !16, !srcloc !26
  %315 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i49 = icmp eq i32 %315, 0, !dbg !16
  %316 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %314, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %317 = tail call float @llvm.nvvm.fma.rn.f(float %314, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i50 = select i1 %.not6.i49, float %317, float %316, !dbg !16
  %318 = fcmp oge float %.01.i47, 0x4022059680000000, !dbg !16
  %s.0.i51 = select i1 %318, float 1.000000e+00, float %.03.i50, !dbg !16
  %319 = bitcast float %s.0.i51 to i32, !dbg !16
  %320 = bitcast float %195 to i32, !dbg !16
  %321 = and i32 %320, -2147483648, !dbg !16
  %322 = or i32 %321, %319, !dbg !16
  %323 = bitcast i32 %322 to float, !dbg !16
  br label %__nv_tanhf.exit64, !dbg !16

__internal_fmad.exit3.i53:                        ; preds = %__nv_tanhf.exit45
  %324 = fmul float %195, %195, !dbg !16
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i54 = icmp eq i32 %325, 0, !dbg !16
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %324, float 0xBFAAC795C0000000) #5, !dbg !16
  %327 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %324, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i55 = select i1 %.not1.i54, float %327, float %326, !dbg !16
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i56 = icmp eq i32 %328, 0, !dbg !16
  %329 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i55, float %324, float 0x3FC10B2820000000) #5, !dbg !16
  %330 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i55, float %324, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i57 = select i1 %.not2.i56, float %330, float %329, !dbg !16
  %331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i58 = icmp eq i32 %331, 0, !dbg !16
  %332 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i57, float %324, float 0xBFD5553DA0000000) #5, !dbg !16
  %333 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i57, float %324, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i59 = select i1 %.not3.i58, float %333, float %332, !dbg !16
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i60 = icmp eq i32 %334, 0, !dbg !16
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i59, float %324, float 0.000000e+00) #5, !dbg !16
  %336 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i59, float %324, float 0.000000e+00) #5, !dbg !16
  %.04.i61 = select i1 %.not4.i60, float %336, float %335, !dbg !16
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i62 = icmp eq i32 %337, 0, !dbg !16
  %338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i61, float %195, float %195) #5, !dbg !16
  %339 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i61, float %195, float %195) #5, !dbg !16
  %.02.i63 = select i1 %.not5.i62, float %339, float %338, !dbg !16
  br label %__nv_tanhf.exit64, !dbg !16

__nv_tanhf.exit64:                                ; preds = %__internal_fmad.exit1.i48, %__internal_fmad.exit3.i53
  %s.1.i52 = phi float [ %323, %__internal_fmad.exit1.i48 ], [ %.02.i63, %__internal_fmad.exit3.i53 ], !dbg !16
  %340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i65 = icmp eq i32 %340, 0, !dbg !16
  %341 = tail call float @llvm.nvvm.fabs.ftz.f(float %196) #5, !dbg !16
  %342 = tail call float @llvm.nvvm.fabs.f(float %196) #5, !dbg !16
  %.01.i66 = select i1 %.not.i65, float %342, float %341, !dbg !16
  %343 = fcmp ult float %.01.i66, 0x3FE3333340000000, !dbg !16
  br i1 %343, label %__internal_fmad.exit3.i72, label %__internal_fmad.exit1.i67, !dbg !16

__internal_fmad.exit1.i67:                        ; preds = %__nv_tanhf.exit64
  %344 = fmul float %.01.i66, 0x4007154760000000, !dbg !16
  %345 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %344) #5, !dbg !16
  %346 = fadd float %345, 1.000000e+00, !dbg !16
  %347 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %346) #6, !dbg !16, !srcloc !26
  %348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i68 = icmp eq i32 %348, 0, !dbg !16
  %349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %347, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %350 = tail call float @llvm.nvvm.fma.rn.f(float %347, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i69 = select i1 %.not6.i68, float %350, float %349, !dbg !16
  %351 = fcmp oge float %.01.i66, 0x4022059680000000, !dbg !16
  %s.0.i70 = select i1 %351, float 1.000000e+00, float %.03.i69, !dbg !16
  %352 = bitcast float %s.0.i70 to i32, !dbg !16
  %353 = bitcast float %196 to i32, !dbg !16
  %354 = and i32 %353, -2147483648, !dbg !16
  %355 = or i32 %354, %352, !dbg !16
  %356 = bitcast i32 %355 to float, !dbg !16
  br label %__nv_tanhf.exit83, !dbg !16

__internal_fmad.exit3.i72:                        ; preds = %__nv_tanhf.exit64
  %357 = fmul float %196, %196, !dbg !16
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i73 = icmp eq i32 %358, 0, !dbg !16
  %359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %357, float 0xBFAAC795C0000000) #5, !dbg !16
  %360 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %357, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i74 = select i1 %.not1.i73, float %360, float %359, !dbg !16
  %361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i75 = icmp eq i32 %361, 0, !dbg !16
  %362 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i74, float %357, float 0x3FC10B2820000000) #5, !dbg !16
  %363 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i74, float %357, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i76 = select i1 %.not2.i75, float %363, float %362, !dbg !16
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i77 = icmp eq i32 %364, 0, !dbg !16
  %365 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i76, float %357, float 0xBFD5553DA0000000) #5, !dbg !16
  %366 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i76, float %357, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i78 = select i1 %.not3.i77, float %366, float %365, !dbg !16
  %367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i79 = icmp eq i32 %367, 0, !dbg !16
  %368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %357, float 0.000000e+00) #5, !dbg !16
  %369 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %357, float 0.000000e+00) #5, !dbg !16
  %.04.i80 = select i1 %.not4.i79, float %369, float %368, !dbg !16
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i81 = icmp eq i32 %370, 0, !dbg !16
  %371 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i80, float %196, float %196) #5, !dbg !16
  %372 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i80, float %196, float %196) #5, !dbg !16
  %.02.i82 = select i1 %.not5.i81, float %372, float %371, !dbg !16
  br label %__nv_tanhf.exit83, !dbg !16

__nv_tanhf.exit83:                                ; preds = %__internal_fmad.exit1.i67, %__internal_fmad.exit3.i72
  %s.1.i71 = phi float [ %356, %__internal_fmad.exit1.i67 ], [ %.02.i82, %__internal_fmad.exit3.i72 ], !dbg !16
  %373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i84 = icmp eq i32 %373, 0, !dbg !16
  %374 = tail call float @llvm.nvvm.fabs.ftz.f(float %197) #5, !dbg !16
  %375 = tail call float @llvm.nvvm.fabs.f(float %197) #5, !dbg !16
  %.01.i85 = select i1 %.not.i84, float %375, float %374, !dbg !16
  %376 = fcmp ult float %.01.i85, 0x3FE3333340000000, !dbg !16
  br i1 %376, label %__internal_fmad.exit3.i91, label %__internal_fmad.exit1.i86, !dbg !16

__internal_fmad.exit1.i86:                        ; preds = %__nv_tanhf.exit83
  %377 = fmul float %.01.i85, 0x4007154760000000, !dbg !16
  %378 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %377) #5, !dbg !16
  %379 = fadd float %378, 1.000000e+00, !dbg !16
  %380 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %379) #6, !dbg !16, !srcloc !26
  %381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i87 = icmp eq i32 %381, 0, !dbg !16
  %382 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %380, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %383 = tail call float @llvm.nvvm.fma.rn.f(float %380, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i88 = select i1 %.not6.i87, float %383, float %382, !dbg !16
  %384 = fcmp oge float %.01.i85, 0x4022059680000000, !dbg !16
  %s.0.i89 = select i1 %384, float 1.000000e+00, float %.03.i88, !dbg !16
  %385 = bitcast float %s.0.i89 to i32, !dbg !16
  %386 = bitcast float %197 to i32, !dbg !16
  %387 = and i32 %386, -2147483648, !dbg !16
  %388 = or i32 %387, %385, !dbg !16
  br label %__nv_tanhf.exit102, !dbg !16

__internal_fmad.exit3.i91:                        ; preds = %__nv_tanhf.exit83
  %389 = fmul float %197, %197, !dbg !16
  %390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i92 = icmp eq i32 %390, 0, !dbg !16
  %391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %389, float 0xBFAAC795C0000000) #5, !dbg !16
  %392 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %389, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i93 = select i1 %.not1.i92, float %392, float %391, !dbg !16
  %393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i94 = icmp eq i32 %393, 0, !dbg !16
  %394 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i93, float %389, float 0x3FC10B2820000000) #5, !dbg !16
  %395 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i93, float %389, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i95 = select i1 %.not2.i94, float %395, float %394, !dbg !16
  %396 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i96 = icmp eq i32 %396, 0, !dbg !16
  %397 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i95, float %389, float 0xBFD5553DA0000000) #5, !dbg !16
  %398 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i95, float %389, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i97 = select i1 %.not3.i96, float %398, float %397, !dbg !16
  %399 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i98 = icmp eq i32 %399, 0, !dbg !16
  %400 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i97, float %389, float 0.000000e+00) #5, !dbg !16
  %401 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i97, float %389, float 0.000000e+00) #5, !dbg !16
  %.04.i99 = select i1 %.not4.i98, float %401, float %400, !dbg !16
  %402 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i100 = icmp eq i32 %402, 0, !dbg !16
  %403 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i99, float %197, float %197) #5, !dbg !16
  %404 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i99, float %197, float %197) #5, !dbg !16
  %.02.i101 = select i1 %.not5.i100, float %404, float %403, !dbg !16
  %405 = bitcast float %.02.i101 to i32, !dbg !27
  br label %__nv_tanhf.exit102, !dbg !16

__nv_tanhf.exit102:                               ; preds = %__internal_fmad.exit1.i86, %__internal_fmad.exit3.i91
  %s.1.i90 = phi i32 [ %388, %__internal_fmad.exit1.i86 ], [ %405, %__internal_fmad.exit3.i91 ], !dbg !16
  %406 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i103 = icmp eq i32 %406, 0, !dbg !16
  %407 = tail call float @llvm.nvvm.fabs.ftz.f(float %198) #5, !dbg !16
  %408 = tail call float @llvm.nvvm.fabs.f(float %198) #5, !dbg !16
  %.01.i104 = select i1 %.not.i103, float %408, float %407, !dbg !16
  %409 = fcmp ult float %.01.i104, 0x3FE3333340000000, !dbg !16
  br i1 %409, label %__internal_fmad.exit3.i110, label %__internal_fmad.exit1.i105, !dbg !16

__internal_fmad.exit1.i105:                       ; preds = %__nv_tanhf.exit102
  %410 = fmul float %.01.i104, 0x4007154760000000, !dbg !16
  %411 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %410) #5, !dbg !16
  %412 = fadd float %411, 1.000000e+00, !dbg !16
  %413 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %412) #6, !dbg !16, !srcloc !26
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i106 = icmp eq i32 %414, 0, !dbg !16
  %415 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %413, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %416 = tail call float @llvm.nvvm.fma.rn.f(float %413, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i107 = select i1 %.not6.i106, float %416, float %415, !dbg !16
  %417 = fcmp oge float %.01.i104, 0x4022059680000000, !dbg !16
  %s.0.i108 = select i1 %417, float 1.000000e+00, float %.03.i107, !dbg !16
  %418 = bitcast float %s.0.i108 to i32, !dbg !16
  %419 = bitcast float %198 to i32, !dbg !16
  %420 = and i32 %419, -2147483648, !dbg !16
  %421 = or i32 %420, %418, !dbg !16
  br label %__nv_tanhf.exit121, !dbg !16

__internal_fmad.exit3.i110:                       ; preds = %__nv_tanhf.exit102
  %422 = fmul float %198, %198, !dbg !16
  %423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i111 = icmp eq i32 %423, 0, !dbg !16
  %424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %422, float 0xBFAAC795C0000000) #5, !dbg !16
  %425 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %422, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i112 = select i1 %.not1.i111, float %425, float %424, !dbg !16
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i113 = icmp eq i32 %426, 0, !dbg !16
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i112, float %422, float 0x3FC10B2820000000) #5, !dbg !16
  %428 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i112, float %422, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i114 = select i1 %.not2.i113, float %428, float %427, !dbg !16
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i115 = icmp eq i32 %429, 0, !dbg !16
  %430 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i114, float %422, float 0xBFD5553DA0000000) #5, !dbg !16
  %431 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i114, float %422, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i116 = select i1 %.not3.i115, float %431, float %430, !dbg !16
  %432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i117 = icmp eq i32 %432, 0, !dbg !16
  %433 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i116, float %422, float 0.000000e+00) #5, !dbg !16
  %434 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i116, float %422, float 0.000000e+00) #5, !dbg !16
  %.04.i118 = select i1 %.not4.i117, float %434, float %433, !dbg !16
  %435 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i119 = icmp eq i32 %435, 0, !dbg !16
  %436 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i118, float %198, float %198) #5, !dbg !16
  %437 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i118, float %198, float %198) #5, !dbg !16
  %.02.i120 = select i1 %.not5.i119, float %437, float %436, !dbg !16
  %438 = bitcast float %.02.i120 to i32, !dbg !27
  br label %__nv_tanhf.exit121, !dbg !16

__nv_tanhf.exit121:                               ; preds = %__internal_fmad.exit1.i105, %__internal_fmad.exit3.i110
  %s.1.i109 = phi i32 [ %421, %__internal_fmad.exit1.i105 ], [ %438, %__internal_fmad.exit3.i110 ], !dbg !16
  %439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i122 = icmp eq i32 %439, 0, !dbg !16
  %440 = tail call float @llvm.nvvm.fabs.ftz.f(float %199) #5, !dbg !16
  %441 = tail call float @llvm.nvvm.fabs.f(float %199) #5, !dbg !16
  %.01.i123 = select i1 %.not.i122, float %441, float %440, !dbg !16
  %442 = fcmp ult float %.01.i123, 0x3FE3333340000000, !dbg !16
  br i1 %442, label %__internal_fmad.exit3.i129, label %__internal_fmad.exit1.i124, !dbg !16

__internal_fmad.exit1.i124:                       ; preds = %__nv_tanhf.exit121
  %443 = fmul float %.01.i123, 0x4007154760000000, !dbg !16
  %444 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %443) #5, !dbg !16
  %445 = fadd float %444, 1.000000e+00, !dbg !16
  %446 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %445) #6, !dbg !16, !srcloc !26
  %447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i125 = icmp eq i32 %447, 0, !dbg !16
  %448 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %446, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %449 = tail call float @llvm.nvvm.fma.rn.f(float %446, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i126 = select i1 %.not6.i125, float %449, float %448, !dbg !16
  %450 = fcmp oge float %.01.i123, 0x4022059680000000, !dbg !16
  %s.0.i127 = select i1 %450, float 1.000000e+00, float %.03.i126, !dbg !16
  %451 = bitcast float %s.0.i127 to i32, !dbg !16
  %452 = bitcast float %199 to i32, !dbg !16
  %453 = and i32 %452, -2147483648, !dbg !16
  %454 = or i32 %453, %451, !dbg !16
  br label %__nv_tanhf.exit140, !dbg !16

__internal_fmad.exit3.i129:                       ; preds = %__nv_tanhf.exit121
  %455 = fmul float %199, %199, !dbg !16
  %456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i130 = icmp eq i32 %456, 0, !dbg !16
  %457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %455, float 0xBFAAC795C0000000) #5, !dbg !16
  %458 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %455, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i131 = select i1 %.not1.i130, float %458, float %457, !dbg !16
  %459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i132 = icmp eq i32 %459, 0, !dbg !16
  %460 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i131, float %455, float 0x3FC10B2820000000) #5, !dbg !16
  %461 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i131, float %455, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i133 = select i1 %.not2.i132, float %461, float %460, !dbg !16
  %462 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i134 = icmp eq i32 %462, 0, !dbg !16
  %463 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i133, float %455, float 0xBFD5553DA0000000) #5, !dbg !16
  %464 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i133, float %455, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i135 = select i1 %.not3.i134, float %464, float %463, !dbg !16
  %465 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i136 = icmp eq i32 %465, 0, !dbg !16
  %466 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i135, float %455, float 0.000000e+00) #5, !dbg !16
  %467 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i135, float %455, float 0.000000e+00) #5, !dbg !16
  %.04.i137 = select i1 %.not4.i136, float %467, float %466, !dbg !16
  %468 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i138 = icmp eq i32 %468, 0, !dbg !16
  %469 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i137, float %199, float %199) #5, !dbg !16
  %470 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i137, float %199, float %199) #5, !dbg !16
  %.02.i139 = select i1 %.not5.i138, float %470, float %469, !dbg !16
  %471 = bitcast float %.02.i139 to i32, !dbg !27
  br label %__nv_tanhf.exit140, !dbg !16

__nv_tanhf.exit140:                               ; preds = %__internal_fmad.exit1.i124, %__internal_fmad.exit3.i129
  %s.1.i128 = phi i32 [ %454, %__internal_fmad.exit1.i124 ], [ %471, %__internal_fmad.exit3.i129 ], !dbg !16
  %472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i141 = icmp eq i32 %472, 0, !dbg !16
  %473 = tail call float @llvm.nvvm.fabs.ftz.f(float %200) #5, !dbg !16
  %474 = tail call float @llvm.nvvm.fabs.f(float %200) #5, !dbg !16
  %.01.i142 = select i1 %.not.i141, float %474, float %473, !dbg !16
  %475 = fcmp ult float %.01.i142, 0x3FE3333340000000, !dbg !16
  br i1 %475, label %__internal_fmad.exit3.i148, label %__internal_fmad.exit1.i143, !dbg !16

__internal_fmad.exit1.i143:                       ; preds = %__nv_tanhf.exit140
  %476 = fmul float %.01.i142, 0x4007154760000000, !dbg !16
  %477 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %476) #5, !dbg !16
  %478 = fadd float %477, 1.000000e+00, !dbg !16
  %479 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %478) #6, !dbg !16, !srcloc !26
  %480 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i144 = icmp eq i32 %480, 0, !dbg !16
  %481 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %479, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %482 = tail call float @llvm.nvvm.fma.rn.f(float %479, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i145 = select i1 %.not6.i144, float %482, float %481, !dbg !16
  %483 = fcmp oge float %.01.i142, 0x4022059680000000, !dbg !16
  %s.0.i146 = select i1 %483, float 1.000000e+00, float %.03.i145, !dbg !16
  %484 = bitcast float %s.0.i146 to i32, !dbg !16
  %485 = bitcast float %200 to i32, !dbg !16
  %486 = and i32 %485, -2147483648, !dbg !16
  %487 = or i32 %486, %484, !dbg !16
  %488 = bitcast i32 %487 to float, !dbg !16
  br label %__nv_tanhf.exit159, !dbg !16

__internal_fmad.exit3.i148:                       ; preds = %__nv_tanhf.exit140
  %489 = fmul float %200, %200, !dbg !16
  %490 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i149 = icmp eq i32 %490, 0, !dbg !16
  %491 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %489, float 0xBFAAC795C0000000) #5, !dbg !16
  %492 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %489, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i150 = select i1 %.not1.i149, float %492, float %491, !dbg !16
  %493 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i151 = icmp eq i32 %493, 0, !dbg !16
  %494 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i150, float %489, float 0x3FC10B2820000000) #5, !dbg !16
  %495 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i150, float %489, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i152 = select i1 %.not2.i151, float %495, float %494, !dbg !16
  %496 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i153 = icmp eq i32 %496, 0, !dbg !16
  %497 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i152, float %489, float 0xBFD5553DA0000000) #5, !dbg !16
  %498 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i152, float %489, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i154 = select i1 %.not3.i153, float %498, float %497, !dbg !16
  %499 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i155 = icmp eq i32 %499, 0, !dbg !16
  %500 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i154, float %489, float 0.000000e+00) #5, !dbg !16
  %501 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i154, float %489, float 0.000000e+00) #5, !dbg !16
  %.04.i156 = select i1 %.not4.i155, float %501, float %500, !dbg !16
  %502 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i157 = icmp eq i32 %502, 0, !dbg !16
  %503 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i156, float %200, float %200) #5, !dbg !16
  %504 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i156, float %200, float %200) #5, !dbg !16
  %.02.i158 = select i1 %.not5.i157, float %504, float %503, !dbg !16
  br label %__nv_tanhf.exit159, !dbg !16

__nv_tanhf.exit159:                               ; preds = %__internal_fmad.exit1.i143, %__internal_fmad.exit3.i148
  %s.1.i147 = phi float [ %488, %__internal_fmad.exit1.i143 ], [ %.02.i158, %__internal_fmad.exit3.i148 ], !dbg !16
  %505 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i160 = icmp eq i32 %505, 0, !dbg !16
  %506 = tail call float @llvm.nvvm.fabs.ftz.f(float %201) #5, !dbg !16
  %507 = tail call float @llvm.nvvm.fabs.f(float %201) #5, !dbg !16
  %.01.i161 = select i1 %.not.i160, float %507, float %506, !dbg !16
  %508 = fcmp ult float %.01.i161, 0x3FE3333340000000, !dbg !16
  br i1 %508, label %__internal_fmad.exit3.i167, label %__internal_fmad.exit1.i162, !dbg !16

__internal_fmad.exit1.i162:                       ; preds = %__nv_tanhf.exit159
  %509 = fmul float %.01.i161, 0x4007154760000000, !dbg !16
  %510 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %509) #5, !dbg !16
  %511 = fadd float %510, 1.000000e+00, !dbg !16
  %512 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %511) #6, !dbg !16, !srcloc !26
  %513 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i163 = icmp eq i32 %513, 0, !dbg !16
  %514 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %512, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %515 = tail call float @llvm.nvvm.fma.rn.f(float %512, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i164 = select i1 %.not6.i163, float %515, float %514, !dbg !16
  %516 = fcmp oge float %.01.i161, 0x4022059680000000, !dbg !16
  %s.0.i165 = select i1 %516, float 1.000000e+00, float %.03.i164, !dbg !16
  %517 = bitcast float %s.0.i165 to i32, !dbg !16
  %518 = bitcast float %201 to i32, !dbg !16
  %519 = and i32 %518, -2147483648, !dbg !16
  %520 = or i32 %519, %517, !dbg !16
  %521 = bitcast i32 %520 to float, !dbg !16
  br label %__nv_tanhf.exit178, !dbg !16

__internal_fmad.exit3.i167:                       ; preds = %__nv_tanhf.exit159
  %522 = fmul float %201, %201, !dbg !16
  %523 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i168 = icmp eq i32 %523, 0, !dbg !16
  %524 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %522, float 0xBFAAC795C0000000) #5, !dbg !16
  %525 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %522, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i169 = select i1 %.not1.i168, float %525, float %524, !dbg !16
  %526 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i170 = icmp eq i32 %526, 0, !dbg !16
  %527 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i169, float %522, float 0x3FC10B2820000000) #5, !dbg !16
  %528 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i169, float %522, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i171 = select i1 %.not2.i170, float %528, float %527, !dbg !16
  %529 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i172 = icmp eq i32 %529, 0, !dbg !16
  %530 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i171, float %522, float 0xBFD5553DA0000000) #5, !dbg !16
  %531 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i171, float %522, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i173 = select i1 %.not3.i172, float %531, float %530, !dbg !16
  %532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i174 = icmp eq i32 %532, 0, !dbg !16
  %533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i173, float %522, float 0.000000e+00) #5, !dbg !16
  %534 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i173, float %522, float 0.000000e+00) #5, !dbg !16
  %.04.i175 = select i1 %.not4.i174, float %534, float %533, !dbg !16
  %535 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i176 = icmp eq i32 %535, 0, !dbg !16
  %536 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i175, float %201, float %201) #5, !dbg !16
  %537 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i175, float %201, float %201) #5, !dbg !16
  %.02.i177 = select i1 %.not5.i176, float %537, float %536, !dbg !16
  br label %__nv_tanhf.exit178, !dbg !16

__nv_tanhf.exit178:                               ; preds = %__internal_fmad.exit1.i162, %__internal_fmad.exit3.i167
  %s.1.i166 = phi float [ %521, %__internal_fmad.exit1.i162 ], [ %.02.i177, %__internal_fmad.exit3.i167 ], !dbg !16
  %538 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i179 = icmp eq i32 %538, 0, !dbg !16
  %539 = tail call float @llvm.nvvm.fabs.ftz.f(float %202) #5, !dbg !16
  %540 = tail call float @llvm.nvvm.fabs.f(float %202) #5, !dbg !16
  %.01.i180 = select i1 %.not.i179, float %540, float %539, !dbg !16
  %541 = fcmp ult float %.01.i180, 0x3FE3333340000000, !dbg !16
  br i1 %541, label %__internal_fmad.exit3.i186, label %__internal_fmad.exit1.i181, !dbg !16

__internal_fmad.exit1.i181:                       ; preds = %__nv_tanhf.exit178
  %542 = fmul float %.01.i180, 0x4007154760000000, !dbg !16
  %543 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %542) #5, !dbg !16
  %544 = fadd float %543, 1.000000e+00, !dbg !16
  %545 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %544) #6, !dbg !16, !srcloc !26
  %546 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i182 = icmp eq i32 %546, 0, !dbg !16
  %547 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %545, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %548 = tail call float @llvm.nvvm.fma.rn.f(float %545, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i183 = select i1 %.not6.i182, float %548, float %547, !dbg !16
  %549 = fcmp oge float %.01.i180, 0x4022059680000000, !dbg !16
  %s.0.i184 = select i1 %549, float 1.000000e+00, float %.03.i183, !dbg !16
  %550 = bitcast float %s.0.i184 to i32, !dbg !16
  %551 = bitcast float %202 to i32, !dbg !16
  %552 = and i32 %551, -2147483648, !dbg !16
  %553 = or i32 %552, %550, !dbg !16
  %554 = bitcast i32 %553 to float, !dbg !16
  br label %__nv_tanhf.exit197, !dbg !16

__internal_fmad.exit3.i186:                       ; preds = %__nv_tanhf.exit178
  %555 = fmul float %202, %202, !dbg !16
  %556 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i187 = icmp eq i32 %556, 0, !dbg !16
  %557 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %555, float 0xBFAAC795C0000000) #5, !dbg !16
  %558 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %555, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i188 = select i1 %.not1.i187, float %558, float %557, !dbg !16
  %559 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i189 = icmp eq i32 %559, 0, !dbg !16
  %560 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i188, float %555, float 0x3FC10B2820000000) #5, !dbg !16
  %561 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i188, float %555, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i190 = select i1 %.not2.i189, float %561, float %560, !dbg !16
  %562 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i191 = icmp eq i32 %562, 0, !dbg !16
  %563 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i190, float %555, float 0xBFD5553DA0000000) #5, !dbg !16
  %564 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i190, float %555, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i192 = select i1 %.not3.i191, float %564, float %563, !dbg !16
  %565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i193 = icmp eq i32 %565, 0, !dbg !16
  %566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i192, float %555, float 0.000000e+00) #5, !dbg !16
  %567 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i192, float %555, float 0.000000e+00) #5, !dbg !16
  %.04.i194 = select i1 %.not4.i193, float %567, float %566, !dbg !16
  %568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i195 = icmp eq i32 %568, 0, !dbg !16
  %569 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i194, float %202, float %202) #5, !dbg !16
  %570 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i194, float %202, float %202) #5, !dbg !16
  %.02.i196 = select i1 %.not5.i195, float %570, float %569, !dbg !16
  br label %__nv_tanhf.exit197, !dbg !16

__nv_tanhf.exit197:                               ; preds = %__internal_fmad.exit1.i181, %__internal_fmad.exit3.i186
  %s.1.i185 = phi float [ %554, %__internal_fmad.exit1.i181 ], [ %.02.i196, %__internal_fmad.exit3.i186 ], !dbg !16
  %571 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i198 = icmp eq i32 %571, 0, !dbg !16
  %572 = tail call float @llvm.nvvm.fabs.ftz.f(float %203) #5, !dbg !16
  %573 = tail call float @llvm.nvvm.fabs.f(float %203) #5, !dbg !16
  %.01.i199 = select i1 %.not.i198, float %573, float %572, !dbg !16
  %574 = fcmp ult float %.01.i199, 0x3FE3333340000000, !dbg !16
  br i1 %574, label %__internal_fmad.exit3.i205, label %__internal_fmad.exit1.i200, !dbg !16

__internal_fmad.exit1.i200:                       ; preds = %__nv_tanhf.exit197
  %575 = fmul float %.01.i199, 0x4007154760000000, !dbg !16
  %576 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %575) #5, !dbg !16
  %577 = fadd float %576, 1.000000e+00, !dbg !16
  %578 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %577) #6, !dbg !16, !srcloc !26
  %579 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i201 = icmp eq i32 %579, 0, !dbg !16
  %580 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %578, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %581 = tail call float @llvm.nvvm.fma.rn.f(float %578, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i202 = select i1 %.not6.i201, float %581, float %580, !dbg !16
  %582 = fcmp oge float %.01.i199, 0x4022059680000000, !dbg !16
  %s.0.i203 = select i1 %582, float 1.000000e+00, float %.03.i202, !dbg !16
  %583 = bitcast float %s.0.i203 to i32, !dbg !16
  %584 = bitcast float %203 to i32, !dbg !16
  %585 = and i32 %584, -2147483648, !dbg !16
  %586 = or i32 %585, %583, !dbg !16
  %587 = bitcast i32 %586 to float, !dbg !16
  br label %__nv_tanhf.exit216, !dbg !16

__internal_fmad.exit3.i205:                       ; preds = %__nv_tanhf.exit197
  %588 = fmul float %203, %203, !dbg !16
  %589 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i206 = icmp eq i32 %589, 0, !dbg !16
  %590 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %588, float 0xBFAAC795C0000000) #5, !dbg !16
  %591 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %588, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i207 = select i1 %.not1.i206, float %591, float %590, !dbg !16
  %592 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i208 = icmp eq i32 %592, 0, !dbg !16
  %593 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i207, float %588, float 0x3FC10B2820000000) #5, !dbg !16
  %594 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i207, float %588, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i209 = select i1 %.not2.i208, float %594, float %593, !dbg !16
  %595 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i210 = icmp eq i32 %595, 0, !dbg !16
  %596 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i209, float %588, float 0xBFD5553DA0000000) #5, !dbg !16
  %597 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i209, float %588, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i211 = select i1 %.not3.i210, float %597, float %596, !dbg !16
  %598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i212 = icmp eq i32 %598, 0, !dbg !16
  %599 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i211, float %588, float 0.000000e+00) #5, !dbg !16
  %600 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i211, float %588, float 0.000000e+00) #5, !dbg !16
  %.04.i213 = select i1 %.not4.i212, float %600, float %599, !dbg !16
  %601 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i214 = icmp eq i32 %601, 0, !dbg !16
  %602 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i213, float %203, float %203) #5, !dbg !16
  %603 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i213, float %203, float %203) #5, !dbg !16
  %.02.i215 = select i1 %.not5.i214, float %603, float %602, !dbg !16
  br label %__nv_tanhf.exit216, !dbg !16

__nv_tanhf.exit216:                               ; preds = %__internal_fmad.exit1.i200, %__internal_fmad.exit3.i205
  %s.1.i204 = phi float [ %587, %__internal_fmad.exit1.i200 ], [ %.02.i215, %__internal_fmad.exit3.i205 ], !dbg !16
  %604 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i217 = icmp eq i32 %604, 0, !dbg !16
  %605 = tail call float @llvm.nvvm.fabs.ftz.f(float %204) #5, !dbg !16
  %606 = tail call float @llvm.nvvm.fabs.f(float %204) #5, !dbg !16
  %.01.i218 = select i1 %.not.i217, float %606, float %605, !dbg !16
  %607 = fcmp ult float %.01.i218, 0x3FE3333340000000, !dbg !16
  br i1 %607, label %__internal_fmad.exit3.i224, label %__internal_fmad.exit1.i219, !dbg !16

__internal_fmad.exit1.i219:                       ; preds = %__nv_tanhf.exit216
  %608 = fmul float %.01.i218, 0x4007154760000000, !dbg !16
  %609 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %608) #5, !dbg !16
  %610 = fadd float %609, 1.000000e+00, !dbg !16
  %611 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %610) #6, !dbg !16, !srcloc !26
  %612 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i220 = icmp eq i32 %612, 0, !dbg !16
  %613 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %611, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %614 = tail call float @llvm.nvvm.fma.rn.f(float %611, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i221 = select i1 %.not6.i220, float %614, float %613, !dbg !16
  %615 = fcmp oge float %.01.i218, 0x4022059680000000, !dbg !16
  %s.0.i222 = select i1 %615, float 1.000000e+00, float %.03.i221, !dbg !16
  %616 = bitcast float %s.0.i222 to i32, !dbg !16
  %617 = bitcast float %204 to i32, !dbg !16
  %618 = and i32 %617, -2147483648, !dbg !16
  %619 = or i32 %618, %616, !dbg !16
  %620 = bitcast i32 %619 to float, !dbg !16
  br label %__nv_tanhf.exit235, !dbg !16

__internal_fmad.exit3.i224:                       ; preds = %__nv_tanhf.exit216
  %621 = fmul float %204, %204, !dbg !16
  %622 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i225 = icmp eq i32 %622, 0, !dbg !16
  %623 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %621, float 0xBFAAC795C0000000) #5, !dbg !16
  %624 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %621, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i226 = select i1 %.not1.i225, float %624, float %623, !dbg !16
  %625 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i227 = icmp eq i32 %625, 0, !dbg !16
  %626 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i226, float %621, float 0x3FC10B2820000000) #5, !dbg !16
  %627 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i226, float %621, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i228 = select i1 %.not2.i227, float %627, float %626, !dbg !16
  %628 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i229 = icmp eq i32 %628, 0, !dbg !16
  %629 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i228, float %621, float 0xBFD5553DA0000000) #5, !dbg !16
  %630 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i228, float %621, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i230 = select i1 %.not3.i229, float %630, float %629, !dbg !16
  %631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i231 = icmp eq i32 %631, 0, !dbg !16
  %632 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i230, float %621, float 0.000000e+00) #5, !dbg !16
  %633 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i230, float %621, float 0.000000e+00) #5, !dbg !16
  %.04.i232 = select i1 %.not4.i231, float %633, float %632, !dbg !16
  %634 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i233 = icmp eq i32 %634, 0, !dbg !16
  %635 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i232, float %204, float %204) #5, !dbg !16
  %636 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i232, float %204, float %204) #5, !dbg !16
  %.02.i234 = select i1 %.not5.i233, float %636, float %635, !dbg !16
  br label %__nv_tanhf.exit235, !dbg !16

__nv_tanhf.exit235:                               ; preds = %__internal_fmad.exit1.i219, %__internal_fmad.exit3.i224
  %s.1.i223 = phi float [ %620, %__internal_fmad.exit1.i219 ], [ %.02.i234, %__internal_fmad.exit3.i224 ], !dbg !16
  %637 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i236 = icmp eq i32 %637, 0, !dbg !16
  %638 = tail call float @llvm.nvvm.fabs.ftz.f(float %205) #5, !dbg !16
  %639 = tail call float @llvm.nvvm.fabs.f(float %205) #5, !dbg !16
  %.01.i237 = select i1 %.not.i236, float %639, float %638, !dbg !16
  %640 = fcmp ult float %.01.i237, 0x3FE3333340000000, !dbg !16
  br i1 %640, label %__internal_fmad.exit3.i243, label %__internal_fmad.exit1.i238, !dbg !16

__internal_fmad.exit1.i238:                       ; preds = %__nv_tanhf.exit235
  %641 = fmul float %.01.i237, 0x4007154760000000, !dbg !16
  %642 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %641) #5, !dbg !16
  %643 = fadd float %642, 1.000000e+00, !dbg !16
  %644 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %643) #6, !dbg !16, !srcloc !26
  %645 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i239 = icmp eq i32 %645, 0, !dbg !16
  %646 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %644, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %647 = tail call float @llvm.nvvm.fma.rn.f(float %644, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i240 = select i1 %.not6.i239, float %647, float %646, !dbg !16
  %648 = fcmp oge float %.01.i237, 0x4022059680000000, !dbg !16
  %s.0.i241 = select i1 %648, float 1.000000e+00, float %.03.i240, !dbg !16
  %649 = bitcast float %s.0.i241 to i32, !dbg !16
  %650 = bitcast float %205 to i32, !dbg !16
  %651 = and i32 %650, -2147483648, !dbg !16
  %652 = or i32 %651, %649, !dbg !16
  %653 = bitcast i32 %652 to float, !dbg !16
  br label %__nv_tanhf.exit254, !dbg !16

__internal_fmad.exit3.i243:                       ; preds = %__nv_tanhf.exit235
  %654 = fmul float %205, %205, !dbg !16
  %655 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i244 = icmp eq i32 %655, 0, !dbg !16
  %656 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %654, float 0xBFAAC795C0000000) #5, !dbg !16
  %657 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %654, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i245 = select i1 %.not1.i244, float %657, float %656, !dbg !16
  %658 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i246 = icmp eq i32 %658, 0, !dbg !16
  %659 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i245, float %654, float 0x3FC10B2820000000) #5, !dbg !16
  %660 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i245, float %654, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i247 = select i1 %.not2.i246, float %660, float %659, !dbg !16
  %661 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i248 = icmp eq i32 %661, 0, !dbg !16
  %662 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i247, float %654, float 0xBFD5553DA0000000) #5, !dbg !16
  %663 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i247, float %654, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i249 = select i1 %.not3.i248, float %663, float %662, !dbg !16
  %664 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i250 = icmp eq i32 %664, 0, !dbg !16
  %665 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i249, float %654, float 0.000000e+00) #5, !dbg !16
  %666 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i249, float %654, float 0.000000e+00) #5, !dbg !16
  %.04.i251 = select i1 %.not4.i250, float %666, float %665, !dbg !16
  %667 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i252 = icmp eq i32 %667, 0, !dbg !16
  %668 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i251, float %205, float %205) #5, !dbg !16
  %669 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i251, float %205, float %205) #5, !dbg !16
  %.02.i253 = select i1 %.not5.i252, float %669, float %668, !dbg !16
  br label %__nv_tanhf.exit254, !dbg !16

__nv_tanhf.exit254:                               ; preds = %__internal_fmad.exit1.i238, %__internal_fmad.exit3.i243
  %s.1.i242 = phi float [ %653, %__internal_fmad.exit1.i238 ], [ %.02.i253, %__internal_fmad.exit3.i243 ], !dbg !16
  %670 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i255 = icmp eq i32 %670, 0, !dbg !16
  %671 = tail call float @llvm.nvvm.fabs.ftz.f(float %206) #5, !dbg !16
  %672 = tail call float @llvm.nvvm.fabs.f(float %206) #5, !dbg !16
  %.01.i256 = select i1 %.not.i255, float %672, float %671, !dbg !16
  %673 = fcmp ult float %.01.i256, 0x3FE3333340000000, !dbg !16
  br i1 %673, label %__internal_fmad.exit3.i262, label %__internal_fmad.exit1.i257, !dbg !16

__internal_fmad.exit1.i257:                       ; preds = %__nv_tanhf.exit254
  %674 = fmul float %.01.i256, 0x4007154760000000, !dbg !16
  %675 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %674) #5, !dbg !16
  %676 = fadd float %675, 1.000000e+00, !dbg !16
  %677 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %676) #6, !dbg !16, !srcloc !26
  %678 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i258 = icmp eq i32 %678, 0, !dbg !16
  %679 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %677, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %680 = tail call float @llvm.nvvm.fma.rn.f(float %677, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i259 = select i1 %.not6.i258, float %680, float %679, !dbg !16
  %681 = fcmp oge float %.01.i256, 0x4022059680000000, !dbg !16
  %s.0.i260 = select i1 %681, float 1.000000e+00, float %.03.i259, !dbg !16
  %682 = bitcast float %s.0.i260 to i32, !dbg !16
  %683 = bitcast float %206 to i32, !dbg !16
  %684 = and i32 %683, -2147483648, !dbg !16
  %685 = or i32 %684, %682, !dbg !16
  %686 = bitcast i32 %685 to float, !dbg !16
  br label %__nv_tanhf.exit273, !dbg !16

__internal_fmad.exit3.i262:                       ; preds = %__nv_tanhf.exit254
  %687 = fmul float %206, %206, !dbg !16
  %688 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i263 = icmp eq i32 %688, 0, !dbg !16
  %689 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %687, float 0xBFAAC795C0000000) #5, !dbg !16
  %690 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %687, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i264 = select i1 %.not1.i263, float %690, float %689, !dbg !16
  %691 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i265 = icmp eq i32 %691, 0, !dbg !16
  %692 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i264, float %687, float 0x3FC10B2820000000) #5, !dbg !16
  %693 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i264, float %687, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i266 = select i1 %.not2.i265, float %693, float %692, !dbg !16
  %694 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i267 = icmp eq i32 %694, 0, !dbg !16
  %695 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i266, float %687, float 0xBFD5553DA0000000) #5, !dbg !16
  %696 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i266, float %687, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i268 = select i1 %.not3.i267, float %696, float %695, !dbg !16
  %697 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i269 = icmp eq i32 %697, 0, !dbg !16
  %698 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i268, float %687, float 0.000000e+00) #5, !dbg !16
  %699 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i268, float %687, float 0.000000e+00) #5, !dbg !16
  %.04.i270 = select i1 %.not4.i269, float %699, float %698, !dbg !16
  %700 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i271 = icmp eq i32 %700, 0, !dbg !16
  %701 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i270, float %206, float %206) #5, !dbg !16
  %702 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i270, float %206, float %206) #5, !dbg !16
  %.02.i272 = select i1 %.not5.i271, float %702, float %701, !dbg !16
  br label %__nv_tanhf.exit273, !dbg !16

__nv_tanhf.exit273:                               ; preds = %__internal_fmad.exit1.i257, %__internal_fmad.exit3.i262
  %s.1.i261 = phi float [ %686, %__internal_fmad.exit1.i257 ], [ %.02.i272, %__internal_fmad.exit3.i262 ], !dbg !16
  %703 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not.i274 = icmp eq i32 %703, 0, !dbg !16
  %704 = tail call float @llvm.nvvm.fabs.ftz.f(float %207) #5, !dbg !16
  %705 = tail call float @llvm.nvvm.fabs.f(float %207) #5, !dbg !16
  %.01.i275 = select i1 %.not.i274, float %705, float %704, !dbg !16
  %706 = fcmp ult float %.01.i275, 0x3FE3333340000000, !dbg !16
  br i1 %706, label %__internal_fmad.exit3.i281, label %__internal_fmad.exit1.i276, !dbg !16

__internal_fmad.exit1.i276:                       ; preds = %__nv_tanhf.exit273
  %707 = fmul float %.01.i275, 0x4007154760000000, !dbg !16
  %708 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %707) #5, !dbg !16
  %709 = fadd float %708, 1.000000e+00, !dbg !16
  %710 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %709) #6, !dbg !16, !srcloc !26
  %711 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not6.i277 = icmp eq i32 %711, 0, !dbg !16
  %712 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %710, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %713 = tail call float @llvm.nvvm.fma.rn.f(float %710, float -2.000000e+00, float 1.000000e+00) #5, !dbg !16
  %.03.i278 = select i1 %.not6.i277, float %713, float %712, !dbg !16
  %714 = fcmp oge float %.01.i275, 0x4022059680000000, !dbg !16
  %s.0.i279 = select i1 %714, float 1.000000e+00, float %.03.i278, !dbg !16
  %715 = bitcast float %s.0.i279 to i32, !dbg !16
  %716 = bitcast float %207 to i32, !dbg !16
  %717 = and i32 %716, -2147483648, !dbg !16
  %718 = or i32 %717, %715, !dbg !16
  %719 = bitcast i32 %718 to float, !dbg !16
  br label %__nv_tanhf.exit292, !dbg !16

__internal_fmad.exit3.i281:                       ; preds = %__nv_tanhf.exit273
  %720 = fmul float %207, %207, !dbg !16
  %721 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not1.i282 = icmp eq i32 %721, 0, !dbg !16
  %722 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %720, float 0xBFAAC795C0000000) #5, !dbg !16
  %723 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %720, float 0xBFAAC795C0000000) #5, !dbg !16
  %.06.i283 = select i1 %.not1.i282, float %723, float %722, !dbg !16
  %724 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not2.i284 = icmp eq i32 %724, 0, !dbg !16
  %725 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i283, float %720, float 0x3FC10B2820000000) #5, !dbg !16
  %726 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i283, float %720, float 0x3FC10B2820000000) #5, !dbg !16
  %.05.i285 = select i1 %.not2.i284, float %726, float %725, !dbg !16
  %727 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not3.i286 = icmp eq i32 %727, 0, !dbg !16
  %728 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i285, float %720, float 0xBFD5553DA0000000) #5, !dbg !16
  %729 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i285, float %720, float 0xBFD5553DA0000000) #5, !dbg !16
  %.0.i287 = select i1 %.not3.i286, float %729, float %728, !dbg !16
  %730 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not4.i288 = icmp eq i32 %730, 0, !dbg !16
  %731 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i287, float %720, float 0.000000e+00) #5, !dbg !16
  %732 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i287, float %720, float 0.000000e+00) #5, !dbg !16
  %.04.i289 = select i1 %.not4.i288, float %732, float %731, !dbg !16
  %733 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !16
  %.not5.i290 = icmp eq i32 %733, 0, !dbg !16
  %734 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i289, float %207, float %207) #5, !dbg !16
  %735 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i289, float %207, float %207) #5, !dbg !16
  %.02.i291 = select i1 %.not5.i290, float %735, float %734, !dbg !16
  br label %__nv_tanhf.exit292, !dbg !16

__nv_tanhf.exit292:                               ; preds = %__internal_fmad.exit1.i276, %__internal_fmad.exit3.i281
  %s.1.i280 = phi float [ %719, %__internal_fmad.exit1.i276 ], [ %.02.i291, %__internal_fmad.exit3.i281 ], !dbg !16
  %736 = or i32 %12, %10, !dbg !13
  %737 = or i32 %12, %9, !dbg !13
  %738 = fmul float %98, 5.000000e-01, !dbg !28
  %739 = fmul float %99, 5.000000e-01, !dbg !28
  %740 = fmul float %100, 5.000000e-01, !dbg !28
  %741 = fmul float %101, 5.000000e-01, !dbg !28
  %742 = fmul float %102, 5.000000e-01, !dbg !28
  %743 = fmul float %103, 5.000000e-01, !dbg !28
  %744 = fmul float %104, 5.000000e-01, !dbg !28
  %745 = fmul float %105, 5.000000e-01, !dbg !28
  %746 = fadd float %s.1.i147, 1.000000e+00, !dbg !29
  %747 = fadd float %s.1.i166, 1.000000e+00, !dbg !29
  %748 = fadd float %s.1.i185, 1.000000e+00, !dbg !29
  %749 = fadd float %s.1.i204, 1.000000e+00, !dbg !29
  %750 = fadd float %s.1.i223, 1.000000e+00, !dbg !29
  %751 = fadd float %s.1.i242, 1.000000e+00, !dbg !29
  %752 = fadd float %s.1.i261, 1.000000e+00, !dbg !29
  %753 = fadd float %s.1.i280, 1.000000e+00, !dbg !29
  %754 = fmul float %738, %746, !dbg !30
  %755 = fmul float %739, %747, !dbg !30
  %756 = fmul float %740, %748, !dbg !30
  %757 = fmul float %741, %749, !dbg !30
  %758 = fmul float %742, %750, !dbg !30
  %759 = fmul float %743, %751, !dbg !30
  %760 = fmul float %744, %752, !dbg !30
  %761 = fmul float %745, %753, !dbg !30
  %762 = fmul float %120, %754, !dbg !31
  %763 = fmul float %121, %755, !dbg !31
  %764 = fmul float %122, %756, !dbg !31
  %765 = fmul float %123, %757, !dbg !31
  %766 = fmul float %124, %758, !dbg !31
  %767 = fmul float %125, %759, !dbg !31
  %768 = fmul float %126, %760, !dbg !31
  %769 = fmul float %127, %761, !dbg !31
  %770 = sext i32 %737 to i64, !dbg !32
  %771 = getelementptr float, ptr addrspace(1) %2, i64 %770, !dbg !32
  %772 = sext i32 %736 to i64, !dbg !32
  %773 = getelementptr float, ptr addrspace(1) %2, i64 %772, !dbg !32
  %774 = bitcast float %s.1.i to i32, !dbg !27
  %775 = bitcast float %s.1.i14 to i32, !dbg !27
  %776 = bitcast float %s.1.i33 to i32, !dbg !27
  %777 = bitcast float %s.1.i52 to i32, !dbg !27
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %774, i32 %775, i32 %776, i32 %777, ptr addrspace(1) %771, i1 true) #5, !dbg !27
  %778 = bitcast float %s.1.i71 to i32, !dbg !27
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %778, i32 %s.1.i90, i32 %s.1.i109, i32 %s.1.i128, ptr addrspace(1) %773, i1 true) #5, !dbg !27
  %779 = getelementptr i16, ptr addrspace(1) %3, i64 %14, !dbg !33
  %780 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %762) #5, !dbg !34
  %781 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %763) #5, !dbg !34
  %782 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %764) #5, !dbg !34
  %783 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %765) #5, !dbg !34
  %784 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %766) #5, !dbg !34
  %785 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %767) #5, !dbg !34
  %786 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %768) #5, !dbg !34
  %787 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %769) #5, !dbg !34
  %788 = insertelement <2 x i16> undef, i16 %780, i64 0, !dbg !34
  %789 = insertelement <2 x i16> %788, i16 %781, i64 1, !dbg !34
  %790 = bitcast <2 x i16> %789 to i32, !dbg !34
  %791 = insertelement <2 x i16> undef, i16 %782, i64 0, !dbg !34
  %792 = insertelement <2 x i16> %791, i16 %783, i64 1, !dbg !34
  %793 = bitcast <2 x i16> %792 to i32, !dbg !34
  %794 = insertelement <2 x i16> undef, i16 %784, i64 0, !dbg !34
  %795 = insertelement <2 x i16> %794, i16 %785, i64 1, !dbg !34
  %796 = bitcast <2 x i16> %795 to i32, !dbg !34
  %797 = insertelement <2 x i16> undef, i16 %786, i64 0, !dbg !34
  %798 = insertelement <2 x i16> %797, i16 %787, i64 1, !dbg !34
  %799 = bitcast <2 x i16> %798 to i32, !dbg !34
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %790, i32 %793, i32 %796, i32 %799, ptr addrspace(1) %779, i1 true) #5, !dbg !34
  ret void, !dbg !35
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: alwaysinline nounwind
define float @__nv_tanhf(float %a) local_unnamed_addr #2 {
__nv_fabsf.exit:
  %0 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not = icmp eq i32 %0, 0
  %1 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #5
  %2 = tail call float @llvm.nvvm.fabs.f(float %a) #5
  %.01 = select i1 %.not, float %2, float %1
  %3 = fcmp ult float %.01, 0x3FE3333340000000
  br i1 %3, label %__internal_fmad.exit3, label %__internal_fmad.exit1

__internal_fmad.exit1:                            ; preds = %__nv_fabsf.exit
  %4 = fmul float %.01, 0x4007154760000000
  %5 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4) #5
  %6 = fadd float %5, 1.000000e+00
  %7 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6) #6, !srcloc !26
  %8 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not6 = icmp eq i32 %8, 0
  %9 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7, float -2.000000e+00, float 1.000000e+00) #5
  %10 = tail call float @llvm.nvvm.fma.rn.f(float %7, float -2.000000e+00, float 1.000000e+00) #5
  %.03 = select i1 %.not6, float %10, float %9
  %11 = fcmp oge float %.01, 0x4022059680000000
  %s.0 = select i1 %11, float 1.000000e+00, float %.03
  %12 = bitcast float %s.0 to i32
  %13 = bitcast float %a to i32
  %14 = and i32 %13, -2147483648
  %15 = or i32 %14, %12
  %16 = bitcast i32 %15 to float
  br label %33

__internal_fmad.exit3:                            ; preds = %__nv_fabsf.exit
  %17 = fmul float %a, %a
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not1 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #5
  %20 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #5
  %.06 = select i1 %.not1, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not2 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06, float %17, float 0x3FC10B2820000000) #5
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.06, float %17, float 0x3FC10B2820000000) #5
  %.05 = select i1 %.not2, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not3 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %17, float 0xBFD5553DA0000000) #5
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %17, float 0xBFD5553DA0000000) #5
  %.0 = select i1 %.not3, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not4 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0, float %17, float 0.000000e+00) #5
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.0, float %17, float 0.000000e+00) #5
  %.04 = select i1 %.not4, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not5 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04, float %a, float %a) #5
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.04, float %a, float %a) #5
  %.02 = select i1 %.not5, float %32, float %31
  br label %33

33:                                               ; preds = %__internal_fmad.exit3, %__internal_fmad.exit1
  %s.1 = phi float [ %16, %__internal_fmad.exit1 ], [ %.02, %__internal_fmad.exit3 ]
  ret float %s.1
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "cen7lihfivdq2pdfm6mkefcwvpcw72druyowqaxftkjetqa4g62a.py", directory: "/tmp/torchinductor_zeus/en")
!4 = !{ptr @triton__0d1d2d3d4de, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2d3d4de, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2d3d4de", linkageName: "triton__0d1d2d3d4de", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 36, scope: !7)
!11 = !DILocation(line: 20, column: 28, scope: !7)
!12 = !DILocation(line: 20, column: 33, scope: !7)
!13 = !DILocation(line: 21, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 30, scope: !7)
!15 = !DILocation(line: 24, column: 35, scope: !7)
!16 = !DILocation(line: 34, column: 24, scope: !7)
!17 = !DILocation(line: 24, column: 44, scope: !7)
!18 = !DILocation(line: 25, column: 31, scope: !7)
!19 = !DILocation(line: 25, column: 36, scope: !7)
!20 = !DILocation(line: 25, column: 45, scope: !7)
!21 = !DILocation(line: 27, column: 18, scope: !7)
!22 = !DILocation(line: 28, column: 18, scope: !7)
!23 = !DILocation(line: 30, column: 18, scope: !7)
!24 = !DILocation(line: 31, column: 18, scope: !7)
!25 = !DILocation(line: 33, column: 18, scope: !7)
!26 = !{i32 21046}
!27 = !DILocation(line: 42, column: 36, scope: !7)
!28 = !DILocation(line: 36, column: 19, scope: !7)
!29 = !DILocation(line: 38, column: 19, scope: !7)
!30 = !DILocation(line: 39, column: 20, scope: !7)
!31 = !DILocation(line: 41, column: 20, scope: !7)
!32 = !DILocation(line: 42, column: 25, scope: !7)
!33 = !DILocation(line: 43, column: 25, scope: !7)
!34 = !DILocation(line: 43, column: 37, scope: !7)
!35 = !DILocation(line: 43, column: 4, scope: !7)
