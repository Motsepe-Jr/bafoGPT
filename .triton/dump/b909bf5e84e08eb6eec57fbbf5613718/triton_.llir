; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2de(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %5 = shl i32 %4, 3, !dbg !10
  %6 = and i32 %5, 1016, !dbg !10
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !11
  %8 = shl i32 %7, 10, !dbg !12
  %9 = or i32 %8, %6, !dbg !13
  %10 = sext i32 %9 to i64, !dbg !14
  %11 = getelementptr i16, ptr addrspace(1) %0, i64 %10, !dbg !14
  %12 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %11, i1 true) #4, !dbg !15
  %13 = extractvalue { i32, i32, i32, i32 } %12, 0, !dbg !15
  %14 = extractvalue { i32, i32, i32, i32 } %12, 1, !dbg !15
  %15 = extractvalue { i32, i32, i32, i32 } %12, 2, !dbg !15
  %16 = extractvalue { i32, i32, i32, i32 } %12, 3, !dbg !15
  %17 = trunc i32 %13 to i16, !dbg !15
  %extelt.offset = lshr i32 %13, 16, !dbg !15
  %18 = trunc i32 %extelt.offset to i16, !dbg !15
  %19 = trunc i32 %14 to i16, !dbg !15
  %extelt.offset1 = lshr i32 %14, 16, !dbg !15
  %20 = trunc i32 %extelt.offset1 to i16, !dbg !15
  %21 = trunc i32 %15 to i16, !dbg !15
  %extelt.offset2 = lshr i32 %15, 16, !dbg !15
  %22 = trunc i32 %extelt.offset2 to i16, !dbg !15
  %23 = trunc i32 %16 to i16, !dbg !15
  %extelt.offset3 = lshr i32 %16, 16, !dbg !15
  %24 = trunc i32 %extelt.offset3 to i16, !dbg !15
  %25 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %17) #4, !dbg !16
  %26 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %18) #4, !dbg !16
  %27 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %19) #4, !dbg !16
  %28 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %20) #4, !dbg !16
  %29 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %21) #4, !dbg !16
  %30 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %22) #4, !dbg !16
  %31 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %23) #4, !dbg !16
  %32 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %24) #4, !dbg !16
  %33 = getelementptr i16, ptr addrspace(1) %1, i64 %10, !dbg !17
  %34 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %33, i1 true) #4, !dbg !18
  %35 = extractvalue { i32, i32, i32, i32 } %34, 0, !dbg !18
  %36 = extractvalue { i32, i32, i32, i32 } %34, 1, !dbg !18
  %37 = extractvalue { i32, i32, i32, i32 } %34, 2, !dbg !18
  %38 = extractvalue { i32, i32, i32, i32 } %34, 3, !dbg !18
  %39 = trunc i32 %35 to i16, !dbg !18
  %extelt.offset4 = lshr i32 %35, 16, !dbg !18
  %40 = trunc i32 %extelt.offset4 to i16, !dbg !18
  %41 = trunc i32 %36 to i16, !dbg !18
  %extelt.offset5 = lshr i32 %36, 16, !dbg !18
  %42 = trunc i32 %extelt.offset5 to i16, !dbg !18
  %43 = trunc i32 %37 to i16, !dbg !18
  %extelt.offset6 = lshr i32 %37, 16, !dbg !18
  %44 = trunc i32 %extelt.offset6 to i16, !dbg !18
  %45 = trunc i32 %38 to i16, !dbg !18
  %extelt.offset7 = lshr i32 %38, 16, !dbg !18
  %46 = trunc i32 %extelt.offset7 to i16, !dbg !18
  %47 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %39) #4, !dbg !19
  %48 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %40) #4, !dbg !19
  %49 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %41) #4, !dbg !19
  %50 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %42) #4, !dbg !19
  %51 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %43) #4, !dbg !19
  %52 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %44) #4, !dbg !19
  %53 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %45) #4, !dbg !19
  %54 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %46) #4, !dbg !19
  %55 = fmul float %25, %25, !dbg !20
  %56 = fmul float %26, %26, !dbg !20
  %57 = fmul float %27, %27, !dbg !20
  %58 = fmul float %28, %28, !dbg !20
  %59 = fmul float %29, %29, !dbg !20
  %60 = fmul float %30, %30, !dbg !20
  %61 = fmul float %31, %31, !dbg !20
  %62 = fmul float %32, %32, !dbg !20
  %63 = fmul float %25, %55, !dbg !21
  %64 = fmul float %26, %56, !dbg !21
  %65 = fmul float %27, %57, !dbg !21
  %66 = fmul float %28, %58, !dbg !21
  %67 = fmul float %29, %59, !dbg !21
  %68 = fmul float %30, %60, !dbg !21
  %69 = fmul float %31, %61, !dbg !21
  %70 = fmul float %32, %62, !dbg !21
  %71 = fmul float %63, 0x3FA6E4E260000000, !dbg !22
  %72 = fmul float %64, 0x3FA6E4E260000000, !dbg !22
  %73 = fmul float %65, 0x3FA6E4E260000000, !dbg !22
  %74 = fmul float %66, 0x3FA6E4E260000000, !dbg !22
  %75 = fmul float %67, 0x3FA6E4E260000000, !dbg !22
  %76 = fmul float %68, 0x3FA6E4E260000000, !dbg !22
  %77 = fmul float %69, 0x3FA6E4E260000000, !dbg !22
  %78 = fmul float %70, 0x3FA6E4E260000000, !dbg !22
  %79 = fadd float %25, %71, !dbg !23
  %80 = fadd float %26, %72, !dbg !23
  %81 = fadd float %27, %73, !dbg !23
  %82 = fadd float %28, %74, !dbg !23
  %83 = fadd float %29, %75, !dbg !23
  %84 = fadd float %30, %76, !dbg !23
  %85 = fadd float %31, %77, !dbg !23
  %86 = fadd float %32, %78, !dbg !23
  %87 = fmul float %79, 0x3FE9884540000000, !dbg !24
  %88 = fmul float %80, 0x3FE9884540000000, !dbg !24
  %89 = fmul float %81, 0x3FE9884540000000, !dbg !24
  %90 = fmul float %82, 0x3FE9884540000000, !dbg !24
  %91 = fmul float %83, 0x3FE9884540000000, !dbg !24
  %92 = fmul float %84, 0x3FE9884540000000, !dbg !24
  %93 = fmul float %85, 0x3FE9884540000000, !dbg !24
  %94 = fmul float %86, 0x3FE9884540000000, !dbg !24
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i = icmp eq i32 %95, 0, !dbg !25
  %96 = tail call float @llvm.nvvm.fabs.ftz.f(float %87) #4, !dbg !25
  %97 = tail call float @llvm.nvvm.fabs.f(float %87) #4, !dbg !25
  %.01.i = select i1 %.not.i, float %97, float %96, !dbg !25
  %98 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !25
  br i1 %98, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !25

__internal_fmad.exit1.i:                          ; preds = %3
  %99 = fmul float %.01.i, 0x4007154760000000, !dbg !25
  %100 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %99) #4, !dbg !25
  %101 = fadd float %100, 1.000000e+00, !dbg !25
  %102 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %101) #5, !dbg !25, !srcloc !26
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i = icmp eq i32 %103, 0, !dbg !25
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %102, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %102, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i = select i1 %.not6.i, float %105, float %104, !dbg !25
  %106 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !25
  %s.0.i = select i1 %106, float 1.000000e+00, float %.03.i, !dbg !25
  %107 = bitcast float %s.0.i to i32, !dbg !25
  %108 = bitcast float %87 to i32, !dbg !25
  %109 = and i32 %108, -2147483648, !dbg !25
  %110 = or i32 %109, %107, !dbg !25
  %111 = bitcast i32 %110 to float, !dbg !25
  br label %__nv_tanhf.exit, !dbg !25

__internal_fmad.exit3.i:                          ; preds = %3
  %112 = fmul float %87, %87, !dbg !25
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i = icmp eq i32 %113, 0, !dbg !25
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %112, float 0xBFAAC795C0000000) #4, !dbg !25
  %115 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %112, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i = select i1 %.not1.i, float %115, float %114, !dbg !25
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i = icmp eq i32 %116, 0, !dbg !25
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %112, float 0x3FC10B2820000000) #4, !dbg !25
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %112, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i = select i1 %.not2.i, float %118, float %117, !dbg !25
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i = icmp eq i32 %119, 0, !dbg !25
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %112, float 0xBFD5553DA0000000) #4, !dbg !25
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %112, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i = select i1 %.not3.i, float %121, float %120, !dbg !25
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i = icmp eq i32 %122, 0, !dbg !25
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %112, float 0.000000e+00) #4, !dbg !25
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %112, float 0.000000e+00) #4, !dbg !25
  %.04.i = select i1 %.not4.i, float %124, float %123, !dbg !25
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i = icmp eq i32 %125, 0, !dbg !25
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %87, float %87) #4, !dbg !25
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %87, float %87) #4, !dbg !25
  %.02.i = select i1 %.not5.i, float %127, float %126, !dbg !25
  br label %__nv_tanhf.exit, !dbg !25

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %111, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !25
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i8 = icmp eq i32 %128, 0, !dbg !25
  %129 = tail call float @llvm.nvvm.fabs.ftz.f(float %88) #4, !dbg !25
  %130 = tail call float @llvm.nvvm.fabs.f(float %88) #4, !dbg !25
  %.01.i9 = select i1 %.not.i8, float %130, float %129, !dbg !25
  %131 = fcmp ult float %.01.i9, 0x3FE3333340000000, !dbg !25
  br i1 %131, label %__internal_fmad.exit3.i15, label %__internal_fmad.exit1.i10, !dbg !25

__internal_fmad.exit1.i10:                        ; preds = %__nv_tanhf.exit
  %132 = fmul float %.01.i9, 0x4007154760000000, !dbg !25
  %133 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %132) #4, !dbg !25
  %134 = fadd float %133, 1.000000e+00, !dbg !25
  %135 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %134) #5, !dbg !25, !srcloc !26
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i11 = icmp eq i32 %136, 0, !dbg !25
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %135, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %135, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i12 = select i1 %.not6.i11, float %138, float %137, !dbg !25
  %139 = fcmp oge float %.01.i9, 0x4022059680000000, !dbg !25
  %s.0.i13 = select i1 %139, float 1.000000e+00, float %.03.i12, !dbg !25
  %140 = bitcast float %s.0.i13 to i32, !dbg !25
  %141 = bitcast float %88 to i32, !dbg !25
  %142 = and i32 %141, -2147483648, !dbg !25
  %143 = or i32 %142, %140, !dbg !25
  %144 = bitcast i32 %143 to float, !dbg !25
  br label %__nv_tanhf.exit26, !dbg !25

__internal_fmad.exit3.i15:                        ; preds = %__nv_tanhf.exit
  %145 = fmul float %88, %88, !dbg !25
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i16 = icmp eq i32 %146, 0, !dbg !25
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %145, float 0xBFAAC795C0000000) #4, !dbg !25
  %148 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %145, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i17 = select i1 %.not1.i16, float %148, float %147, !dbg !25
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i18 = icmp eq i32 %149, 0, !dbg !25
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i17, float %145, float 0x3FC10B2820000000) #4, !dbg !25
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i17, float %145, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i19 = select i1 %.not2.i18, float %151, float %150, !dbg !25
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i20 = icmp eq i32 %152, 0, !dbg !25
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i19, float %145, float 0xBFD5553DA0000000) #4, !dbg !25
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i19, float %145, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i21 = select i1 %.not3.i20, float %154, float %153, !dbg !25
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i22 = icmp eq i32 %155, 0, !dbg !25
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i21, float %145, float 0.000000e+00) #4, !dbg !25
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i21, float %145, float 0.000000e+00) #4, !dbg !25
  %.04.i23 = select i1 %.not4.i22, float %157, float %156, !dbg !25
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i24 = icmp eq i32 %158, 0, !dbg !25
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i23, float %88, float %88) #4, !dbg !25
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i23, float %88, float %88) #4, !dbg !25
  %.02.i25 = select i1 %.not5.i24, float %160, float %159, !dbg !25
  br label %__nv_tanhf.exit26, !dbg !25

__nv_tanhf.exit26:                                ; preds = %__internal_fmad.exit1.i10, %__internal_fmad.exit3.i15
  %s.1.i14 = phi float [ %144, %__internal_fmad.exit1.i10 ], [ %.02.i25, %__internal_fmad.exit3.i15 ], !dbg !25
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i27 = icmp eq i32 %161, 0, !dbg !25
  %162 = tail call float @llvm.nvvm.fabs.ftz.f(float %89) #4, !dbg !25
  %163 = tail call float @llvm.nvvm.fabs.f(float %89) #4, !dbg !25
  %.01.i28 = select i1 %.not.i27, float %163, float %162, !dbg !25
  %164 = fcmp ult float %.01.i28, 0x3FE3333340000000, !dbg !25
  br i1 %164, label %__internal_fmad.exit3.i34, label %__internal_fmad.exit1.i29, !dbg !25

__internal_fmad.exit1.i29:                        ; preds = %__nv_tanhf.exit26
  %165 = fmul float %.01.i28, 0x4007154760000000, !dbg !25
  %166 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %165) #4, !dbg !25
  %167 = fadd float %166, 1.000000e+00, !dbg !25
  %168 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %167) #5, !dbg !25, !srcloc !26
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i30 = icmp eq i32 %169, 0, !dbg !25
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %168, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %168, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i31 = select i1 %.not6.i30, float %171, float %170, !dbg !25
  %172 = fcmp oge float %.01.i28, 0x4022059680000000, !dbg !25
  %s.0.i32 = select i1 %172, float 1.000000e+00, float %.03.i31, !dbg !25
  %173 = bitcast float %s.0.i32 to i32, !dbg !25
  %174 = bitcast float %89 to i32, !dbg !25
  %175 = and i32 %174, -2147483648, !dbg !25
  %176 = or i32 %175, %173, !dbg !25
  %177 = bitcast i32 %176 to float, !dbg !25
  br label %__nv_tanhf.exit45, !dbg !25

__internal_fmad.exit3.i34:                        ; preds = %__nv_tanhf.exit26
  %178 = fmul float %89, %89, !dbg !25
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i35 = icmp eq i32 %179, 0, !dbg !25
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %178, float 0xBFAAC795C0000000) #4, !dbg !25
  %181 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %178, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i36 = select i1 %.not1.i35, float %181, float %180, !dbg !25
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i37 = icmp eq i32 %182, 0, !dbg !25
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i36, float %178, float 0x3FC10B2820000000) #4, !dbg !25
  %184 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i36, float %178, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i38 = select i1 %.not2.i37, float %184, float %183, !dbg !25
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i39 = icmp eq i32 %185, 0, !dbg !25
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i38, float %178, float 0xBFD5553DA0000000) #4, !dbg !25
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i38, float %178, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i40 = select i1 %.not3.i39, float %187, float %186, !dbg !25
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i41 = icmp eq i32 %188, 0, !dbg !25
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i40, float %178, float 0.000000e+00) #4, !dbg !25
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i40, float %178, float 0.000000e+00) #4, !dbg !25
  %.04.i42 = select i1 %.not4.i41, float %190, float %189, !dbg !25
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i43 = icmp eq i32 %191, 0, !dbg !25
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i42, float %89, float %89) #4, !dbg !25
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i42, float %89, float %89) #4, !dbg !25
  %.02.i44 = select i1 %.not5.i43, float %193, float %192, !dbg !25
  br label %__nv_tanhf.exit45, !dbg !25

__nv_tanhf.exit45:                                ; preds = %__internal_fmad.exit1.i29, %__internal_fmad.exit3.i34
  %s.1.i33 = phi float [ %177, %__internal_fmad.exit1.i29 ], [ %.02.i44, %__internal_fmad.exit3.i34 ], !dbg !25
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i46 = icmp eq i32 %194, 0, !dbg !25
  %195 = tail call float @llvm.nvvm.fabs.ftz.f(float %90) #4, !dbg !25
  %196 = tail call float @llvm.nvvm.fabs.f(float %90) #4, !dbg !25
  %.01.i47 = select i1 %.not.i46, float %196, float %195, !dbg !25
  %197 = fcmp ult float %.01.i47, 0x3FE3333340000000, !dbg !25
  br i1 %197, label %__internal_fmad.exit3.i53, label %__internal_fmad.exit1.i48, !dbg !25

__internal_fmad.exit1.i48:                        ; preds = %__nv_tanhf.exit45
  %198 = fmul float %.01.i47, 0x4007154760000000, !dbg !25
  %199 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %198) #4, !dbg !25
  %200 = fadd float %199, 1.000000e+00, !dbg !25
  %201 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %200) #5, !dbg !25, !srcloc !26
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i49 = icmp eq i32 %202, 0, !dbg !25
  %203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %201, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %204 = tail call float @llvm.nvvm.fma.rn.f(float %201, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i50 = select i1 %.not6.i49, float %204, float %203, !dbg !25
  %205 = fcmp oge float %.01.i47, 0x4022059680000000, !dbg !25
  %s.0.i51 = select i1 %205, float 1.000000e+00, float %.03.i50, !dbg !25
  %206 = bitcast float %s.0.i51 to i32, !dbg !25
  %207 = bitcast float %90 to i32, !dbg !25
  %208 = and i32 %207, -2147483648, !dbg !25
  %209 = or i32 %208, %206, !dbg !25
  %210 = bitcast i32 %209 to float, !dbg !25
  br label %__nv_tanhf.exit64, !dbg !25

__internal_fmad.exit3.i53:                        ; preds = %__nv_tanhf.exit45
  %211 = fmul float %90, %90, !dbg !25
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i54 = icmp eq i32 %212, 0, !dbg !25
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %211, float 0xBFAAC795C0000000) #4, !dbg !25
  %214 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %211, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i55 = select i1 %.not1.i54, float %214, float %213, !dbg !25
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i56 = icmp eq i32 %215, 0, !dbg !25
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i55, float %211, float 0x3FC10B2820000000) #4, !dbg !25
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i55, float %211, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i57 = select i1 %.not2.i56, float %217, float %216, !dbg !25
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i58 = icmp eq i32 %218, 0, !dbg !25
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i57, float %211, float 0xBFD5553DA0000000) #4, !dbg !25
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i57, float %211, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i59 = select i1 %.not3.i58, float %220, float %219, !dbg !25
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i60 = icmp eq i32 %221, 0, !dbg !25
  %222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i59, float %211, float 0.000000e+00) #4, !dbg !25
  %223 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i59, float %211, float 0.000000e+00) #4, !dbg !25
  %.04.i61 = select i1 %.not4.i60, float %223, float %222, !dbg !25
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i62 = icmp eq i32 %224, 0, !dbg !25
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i61, float %90, float %90) #4, !dbg !25
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i61, float %90, float %90) #4, !dbg !25
  %.02.i63 = select i1 %.not5.i62, float %226, float %225, !dbg !25
  br label %__nv_tanhf.exit64, !dbg !25

__nv_tanhf.exit64:                                ; preds = %__internal_fmad.exit1.i48, %__internal_fmad.exit3.i53
  %s.1.i52 = phi float [ %210, %__internal_fmad.exit1.i48 ], [ %.02.i63, %__internal_fmad.exit3.i53 ], !dbg !25
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i65 = icmp eq i32 %227, 0, !dbg !25
  %228 = tail call float @llvm.nvvm.fabs.ftz.f(float %91) #4, !dbg !25
  %229 = tail call float @llvm.nvvm.fabs.f(float %91) #4, !dbg !25
  %.01.i66 = select i1 %.not.i65, float %229, float %228, !dbg !25
  %230 = fcmp ult float %.01.i66, 0x3FE3333340000000, !dbg !25
  br i1 %230, label %__internal_fmad.exit3.i72, label %__internal_fmad.exit1.i67, !dbg !25

__internal_fmad.exit1.i67:                        ; preds = %__nv_tanhf.exit64
  %231 = fmul float %.01.i66, 0x4007154760000000, !dbg !25
  %232 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %231) #4, !dbg !25
  %233 = fadd float %232, 1.000000e+00, !dbg !25
  %234 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %233) #5, !dbg !25, !srcloc !26
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i68 = icmp eq i32 %235, 0, !dbg !25
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %234, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %234, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i69 = select i1 %.not6.i68, float %237, float %236, !dbg !25
  %238 = fcmp oge float %.01.i66, 0x4022059680000000, !dbg !25
  %s.0.i70 = select i1 %238, float 1.000000e+00, float %.03.i69, !dbg !25
  %239 = bitcast float %s.0.i70 to i32, !dbg !25
  %240 = bitcast float %91 to i32, !dbg !25
  %241 = and i32 %240, -2147483648, !dbg !25
  %242 = or i32 %241, %239, !dbg !25
  %243 = bitcast i32 %242 to float, !dbg !25
  br label %__nv_tanhf.exit83, !dbg !25

__internal_fmad.exit3.i72:                        ; preds = %__nv_tanhf.exit64
  %244 = fmul float %91, %91, !dbg !25
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i73 = icmp eq i32 %245, 0, !dbg !25
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %244, float 0xBFAAC795C0000000) #4, !dbg !25
  %247 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %244, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i74 = select i1 %.not1.i73, float %247, float %246, !dbg !25
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i75 = icmp eq i32 %248, 0, !dbg !25
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i74, float %244, float 0x3FC10B2820000000) #4, !dbg !25
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i74, float %244, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i76 = select i1 %.not2.i75, float %250, float %249, !dbg !25
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i77 = icmp eq i32 %251, 0, !dbg !25
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i76, float %244, float 0xBFD5553DA0000000) #4, !dbg !25
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i76, float %244, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i78 = select i1 %.not3.i77, float %253, float %252, !dbg !25
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i79 = icmp eq i32 %254, 0, !dbg !25
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %244, float 0.000000e+00) #4, !dbg !25
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %244, float 0.000000e+00) #4, !dbg !25
  %.04.i80 = select i1 %.not4.i79, float %256, float %255, !dbg !25
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i81 = icmp eq i32 %257, 0, !dbg !25
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i80, float %91, float %91) #4, !dbg !25
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i80, float %91, float %91) #4, !dbg !25
  %.02.i82 = select i1 %.not5.i81, float %259, float %258, !dbg !25
  br label %__nv_tanhf.exit83, !dbg !25

__nv_tanhf.exit83:                                ; preds = %__internal_fmad.exit1.i67, %__internal_fmad.exit3.i72
  %s.1.i71 = phi float [ %243, %__internal_fmad.exit1.i67 ], [ %.02.i82, %__internal_fmad.exit3.i72 ], !dbg !25
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i84 = icmp eq i32 %260, 0, !dbg !25
  %261 = tail call float @llvm.nvvm.fabs.ftz.f(float %92) #4, !dbg !25
  %262 = tail call float @llvm.nvvm.fabs.f(float %92) #4, !dbg !25
  %.01.i85 = select i1 %.not.i84, float %262, float %261, !dbg !25
  %263 = fcmp ult float %.01.i85, 0x3FE3333340000000, !dbg !25
  br i1 %263, label %__internal_fmad.exit3.i91, label %__internal_fmad.exit1.i86, !dbg !25

__internal_fmad.exit1.i86:                        ; preds = %__nv_tanhf.exit83
  %264 = fmul float %.01.i85, 0x4007154760000000, !dbg !25
  %265 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %264) #4, !dbg !25
  %266 = fadd float %265, 1.000000e+00, !dbg !25
  %267 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %266) #5, !dbg !25, !srcloc !26
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i87 = icmp eq i32 %268, 0, !dbg !25
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %267, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %267, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i88 = select i1 %.not6.i87, float %270, float %269, !dbg !25
  %271 = fcmp oge float %.01.i85, 0x4022059680000000, !dbg !25
  %s.0.i89 = select i1 %271, float 1.000000e+00, float %.03.i88, !dbg !25
  %272 = bitcast float %s.0.i89 to i32, !dbg !25
  %273 = bitcast float %92 to i32, !dbg !25
  %274 = and i32 %273, -2147483648, !dbg !25
  %275 = or i32 %274, %272, !dbg !25
  %276 = bitcast i32 %275 to float, !dbg !25
  br label %__nv_tanhf.exit102, !dbg !25

__internal_fmad.exit3.i91:                        ; preds = %__nv_tanhf.exit83
  %277 = fmul float %92, %92, !dbg !25
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i92 = icmp eq i32 %278, 0, !dbg !25
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %277, float 0xBFAAC795C0000000) #4, !dbg !25
  %280 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %277, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i93 = select i1 %.not1.i92, float %280, float %279, !dbg !25
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i94 = icmp eq i32 %281, 0, !dbg !25
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i93, float %277, float 0x3FC10B2820000000) #4, !dbg !25
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i93, float %277, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i95 = select i1 %.not2.i94, float %283, float %282, !dbg !25
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i96 = icmp eq i32 %284, 0, !dbg !25
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i95, float %277, float 0xBFD5553DA0000000) #4, !dbg !25
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i95, float %277, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i97 = select i1 %.not3.i96, float %286, float %285, !dbg !25
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i98 = icmp eq i32 %287, 0, !dbg !25
  %288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i97, float %277, float 0.000000e+00) #4, !dbg !25
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i97, float %277, float 0.000000e+00) #4, !dbg !25
  %.04.i99 = select i1 %.not4.i98, float %289, float %288, !dbg !25
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i100 = icmp eq i32 %290, 0, !dbg !25
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i99, float %92, float %92) #4, !dbg !25
  %292 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i99, float %92, float %92) #4, !dbg !25
  %.02.i101 = select i1 %.not5.i100, float %292, float %291, !dbg !25
  br label %__nv_tanhf.exit102, !dbg !25

__nv_tanhf.exit102:                               ; preds = %__internal_fmad.exit1.i86, %__internal_fmad.exit3.i91
  %s.1.i90 = phi float [ %276, %__internal_fmad.exit1.i86 ], [ %.02.i101, %__internal_fmad.exit3.i91 ], !dbg !25
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i103 = icmp eq i32 %293, 0, !dbg !25
  %294 = tail call float @llvm.nvvm.fabs.ftz.f(float %93) #4, !dbg !25
  %295 = tail call float @llvm.nvvm.fabs.f(float %93) #4, !dbg !25
  %.01.i104 = select i1 %.not.i103, float %295, float %294, !dbg !25
  %296 = fcmp ult float %.01.i104, 0x3FE3333340000000, !dbg !25
  br i1 %296, label %__internal_fmad.exit3.i110, label %__internal_fmad.exit1.i105, !dbg !25

__internal_fmad.exit1.i105:                       ; preds = %__nv_tanhf.exit102
  %297 = fmul float %.01.i104, 0x4007154760000000, !dbg !25
  %298 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %297) #4, !dbg !25
  %299 = fadd float %298, 1.000000e+00, !dbg !25
  %300 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %299) #5, !dbg !25, !srcloc !26
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i106 = icmp eq i32 %301, 0, !dbg !25
  %302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %300, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %303 = tail call float @llvm.nvvm.fma.rn.f(float %300, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i107 = select i1 %.not6.i106, float %303, float %302, !dbg !25
  %304 = fcmp oge float %.01.i104, 0x4022059680000000, !dbg !25
  %s.0.i108 = select i1 %304, float 1.000000e+00, float %.03.i107, !dbg !25
  %305 = bitcast float %s.0.i108 to i32, !dbg !25
  %306 = bitcast float %93 to i32, !dbg !25
  %307 = and i32 %306, -2147483648, !dbg !25
  %308 = or i32 %307, %305, !dbg !25
  %309 = bitcast i32 %308 to float, !dbg !25
  br label %__nv_tanhf.exit121, !dbg !25

__internal_fmad.exit3.i110:                       ; preds = %__nv_tanhf.exit102
  %310 = fmul float %93, %93, !dbg !25
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i111 = icmp eq i32 %311, 0, !dbg !25
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %310, float 0xBFAAC795C0000000) #4, !dbg !25
  %313 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %310, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i112 = select i1 %.not1.i111, float %313, float %312, !dbg !25
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i113 = icmp eq i32 %314, 0, !dbg !25
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i112, float %310, float 0x3FC10B2820000000) #4, !dbg !25
  %316 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i112, float %310, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i114 = select i1 %.not2.i113, float %316, float %315, !dbg !25
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i115 = icmp eq i32 %317, 0, !dbg !25
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i114, float %310, float 0xBFD5553DA0000000) #4, !dbg !25
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i114, float %310, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i116 = select i1 %.not3.i115, float %319, float %318, !dbg !25
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i117 = icmp eq i32 %320, 0, !dbg !25
  %321 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i116, float %310, float 0.000000e+00) #4, !dbg !25
  %322 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i116, float %310, float 0.000000e+00) #4, !dbg !25
  %.04.i118 = select i1 %.not4.i117, float %322, float %321, !dbg !25
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i119 = icmp eq i32 %323, 0, !dbg !25
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i118, float %93, float %93) #4, !dbg !25
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i118, float %93, float %93) #4, !dbg !25
  %.02.i120 = select i1 %.not5.i119, float %325, float %324, !dbg !25
  br label %__nv_tanhf.exit121, !dbg !25

__nv_tanhf.exit121:                               ; preds = %__internal_fmad.exit1.i105, %__internal_fmad.exit3.i110
  %s.1.i109 = phi float [ %309, %__internal_fmad.exit1.i105 ], [ %.02.i120, %__internal_fmad.exit3.i110 ], !dbg !25
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i122 = icmp eq i32 %326, 0, !dbg !25
  %327 = tail call float @llvm.nvvm.fabs.ftz.f(float %94) #4, !dbg !25
  %328 = tail call float @llvm.nvvm.fabs.f(float %94) #4, !dbg !25
  %.01.i123 = select i1 %.not.i122, float %328, float %327, !dbg !25
  %329 = fcmp ult float %.01.i123, 0x3FE3333340000000, !dbg !25
  br i1 %329, label %__internal_fmad.exit3.i129, label %__internal_fmad.exit1.i124, !dbg !25

__internal_fmad.exit1.i124:                       ; preds = %__nv_tanhf.exit121
  %330 = fmul float %.01.i123, 0x4007154760000000, !dbg !25
  %331 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %330) #4, !dbg !25
  %332 = fadd float %331, 1.000000e+00, !dbg !25
  %333 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %332) #5, !dbg !25, !srcloc !26
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not6.i125 = icmp eq i32 %334, 0, !dbg !25
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %333, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %336 = tail call float @llvm.nvvm.fma.rn.f(float %333, float -2.000000e+00, float 1.000000e+00) #4, !dbg !25
  %.03.i126 = select i1 %.not6.i125, float %336, float %335, !dbg !25
  %337 = fcmp oge float %.01.i123, 0x4022059680000000, !dbg !25
  %s.0.i127 = select i1 %337, float 1.000000e+00, float %.03.i126, !dbg !25
  %338 = bitcast float %s.0.i127 to i32, !dbg !25
  %339 = bitcast float %94 to i32, !dbg !25
  %340 = and i32 %339, -2147483648, !dbg !25
  %341 = or i32 %340, %338, !dbg !25
  %342 = bitcast i32 %341 to float, !dbg !25
  br label %__nv_tanhf.exit140, !dbg !25

__internal_fmad.exit3.i129:                       ; preds = %__nv_tanhf.exit121
  %343 = fmul float %94, %94, !dbg !25
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not1.i130 = icmp eq i32 %344, 0, !dbg !25
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %343, float 0xBFAAC795C0000000) #4, !dbg !25
  %346 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %343, float 0xBFAAC795C0000000) #4, !dbg !25
  %.06.i131 = select i1 %.not1.i130, float %346, float %345, !dbg !25
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not2.i132 = icmp eq i32 %347, 0, !dbg !25
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i131, float %343, float 0x3FC10B2820000000) #4, !dbg !25
  %349 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i131, float %343, float 0x3FC10B2820000000) #4, !dbg !25
  %.05.i133 = select i1 %.not2.i132, float %349, float %348, !dbg !25
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not3.i134 = icmp eq i32 %350, 0, !dbg !25
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i133, float %343, float 0xBFD5553DA0000000) #4, !dbg !25
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i133, float %343, float 0xBFD5553DA0000000) #4, !dbg !25
  %.0.i135 = select i1 %.not3.i134, float %352, float %351, !dbg !25
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not4.i136 = icmp eq i32 %353, 0, !dbg !25
  %354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i135, float %343, float 0.000000e+00) #4, !dbg !25
  %355 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i135, float %343, float 0.000000e+00) #4, !dbg !25
  %.04.i137 = select i1 %.not4.i136, float %355, float %354, !dbg !25
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not5.i138 = icmp eq i32 %356, 0, !dbg !25
  %357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i137, float %94, float %94) #4, !dbg !25
  %358 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i137, float %94, float %94) #4, !dbg !25
  %.02.i139 = select i1 %.not5.i138, float %358, float %357, !dbg !25
  br label %__nv_tanhf.exit140, !dbg !25

__nv_tanhf.exit140:                               ; preds = %__internal_fmad.exit1.i124, %__internal_fmad.exit3.i129
  %s.1.i128 = phi float [ %342, %__internal_fmad.exit1.i124 ], [ %.02.i139, %__internal_fmad.exit3.i129 ], !dbg !25
  %359 = fmul float %32, 5.000000e-01, !dbg !27
  %360 = fmul float %31, 5.000000e-01, !dbg !27
  %361 = fmul float %30, 5.000000e-01, !dbg !27
  %362 = fmul float %29, 5.000000e-01, !dbg !27
  %363 = fmul float %28, 5.000000e-01, !dbg !27
  %364 = fmul float %27, 5.000000e-01, !dbg !27
  %365 = fmul float %26, 5.000000e-01, !dbg !27
  %366 = fmul float %25, 5.000000e-01, !dbg !27
  %367 = fadd float %s.1.i, 1.000000e+00, !dbg !28
  %368 = fadd float %s.1.i14, 1.000000e+00, !dbg !28
  %369 = fadd float %s.1.i33, 1.000000e+00, !dbg !28
  %370 = fadd float %s.1.i52, 1.000000e+00, !dbg !28
  %371 = fadd float %s.1.i71, 1.000000e+00, !dbg !28
  %372 = fadd float %s.1.i90, 1.000000e+00, !dbg !28
  %373 = fadd float %s.1.i109, 1.000000e+00, !dbg !28
  %374 = fadd float %s.1.i128, 1.000000e+00, !dbg !28
  %375 = fmul float %366, %367, !dbg !29
  %376 = fmul float %365, %368, !dbg !29
  %377 = fmul float %364, %369, !dbg !29
  %378 = fmul float %363, %370, !dbg !29
  %379 = fmul float %362, %371, !dbg !29
  %380 = fmul float %361, %372, !dbg !29
  %381 = fmul float %360, %373, !dbg !29
  %382 = fmul float %359, %374, !dbg !29
  %383 = fmul float %47, %375, !dbg !30
  %384 = fmul float %48, %376, !dbg !30
  %385 = fmul float %49, %377, !dbg !30
  %386 = fmul float %50, %378, !dbg !30
  %387 = fmul float %51, %379, !dbg !30
  %388 = fmul float %52, %380, !dbg !30
  %389 = fmul float %53, %381, !dbg !30
  %390 = fmul float %54, %382, !dbg !30
  %391 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %383) #4, !dbg !31
  %392 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %384) #4, !dbg !31
  %393 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %385) #4, !dbg !31
  %394 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %386) #4, !dbg !31
  %395 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %387) #4, !dbg !31
  %396 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %388) #4, !dbg !31
  %397 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %389) #4, !dbg !31
  %398 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %390) #4, !dbg !31
  %399 = insertelement <2 x i16> undef, i16 %391, i64 0, !dbg !31
  %400 = insertelement <2 x i16> %399, i16 %392, i64 1, !dbg !31
  %401 = bitcast <2 x i16> %400 to i32, !dbg !31
  %402 = insertelement <2 x i16> undef, i16 %393, i64 0, !dbg !31
  %403 = insertelement <2 x i16> %402, i16 %394, i64 1, !dbg !31
  %404 = bitcast <2 x i16> %403 to i32, !dbg !31
  %405 = insertelement <2 x i16> undef, i16 %395, i64 0, !dbg !31
  %406 = insertelement <2 x i16> %405, i16 %396, i64 1, !dbg !31
  %407 = bitcast <2 x i16> %406 to i32, !dbg !31
  %408 = insertelement <2 x i16> undef, i16 %397, i64 0, !dbg !31
  %409 = insertelement <2 x i16> %408, i16 %398, i64 1, !dbg !31
  %410 = bitcast <2 x i16> %409 to i32, !dbg !31
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %401, i32 %404, i32 %407, i32 %410, ptr addrspace(1) %11, i1 true) #4, !dbg !31
  ret void, !dbg !32
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: alwaysinline nounwind
define float @__nv_tanhf(float %a) local_unnamed_addr #1 {
__nv_fabsf.exit:
  %0 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not = icmp eq i32 %0, 0
  %1 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #4
  %2 = tail call float @llvm.nvvm.fabs.f(float %a) #4
  %.01 = select i1 %.not, float %2, float %1
  %3 = fcmp ult float %.01, 0x3FE3333340000000
  br i1 %3, label %__internal_fmad.exit3, label %__internal_fmad.exit1

__internal_fmad.exit1:                            ; preds = %__nv_fabsf.exit
  %4 = fmul float %.01, 0x4007154760000000
  %5 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4) #4
  %6 = fadd float %5, 1.000000e+00
  %7 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6) #5, !srcloc !26
  %8 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not6 = icmp eq i32 %8, 0
  %9 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7, float -2.000000e+00, float 1.000000e+00) #4
  %10 = tail call float @llvm.nvvm.fma.rn.f(float %7, float -2.000000e+00, float 1.000000e+00) #4
  %.03 = select i1 %.not6, float %10, float %9
  %11 = fcmp oge float %.01, 0x4022059680000000
  %s.0 = select i1 %11, float 1.000000e+00, float %.03
  %12 = bitcast float %s.0 to i32
  %13 = bitcast float %a to i32
  %14 = and i32 %13, -2147483648
  %15 = or i32 %14, %12
  %16 = bitcast i32 %15 to float
  br label %33

__internal_fmad.exit3:                            ; preds = %__nv_fabsf.exit
  %17 = fmul float %a, %a
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not1 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #4
  %20 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #4
  %.06 = select i1 %.not1, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not2 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06, float %17, float 0x3FC10B2820000000) #4
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.06, float %17, float 0x3FC10B2820000000) #4
  %.05 = select i1 %.not2, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not3 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %17, float 0xBFD5553DA0000000) #4
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %17, float 0xBFD5553DA0000000) #4
  %.0 = select i1 %.not3, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not4 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0, float %17, float 0.000000e+00) #4
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.0, float %17, float 0.000000e+00) #4
  %.04 = select i1 %.not4, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not5 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04, float %a, float %a) #4
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.04, float %a, float %a) #4
  %.02 = select i1 %.not5, float %32, float %31
  br label %33

33:                                               ; preds = %__internal_fmad.exit3, %__internal_fmad.exit1
  %s.1 = phi float [ %16, %__internal_fmad.exit1 ], [ %.02, %__internal_fmad.exit3 ]
  ret float %s.1
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "cnnzb2r7u3bwe5sh2issgd4lmp5pwrsvw5z6nrzs5v4tf4fxxj4k.py", directory: "/tmp/torchinductor_zeus/nn")
!4 = !{ptr @triton__0d1d2de, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2de, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2de", linkageName: "triton__0d1d2de", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 36, scope: !7)
!11 = !DILocation(line: 20, column: 28, scope: !7)
!12 = !DILocation(line: 20, column: 33, scope: !7)
!13 = !DILocation(line: 21, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 34, scope: !7)
!15 = !DILocation(line: 24, column: 39, scope: !7)
!16 = !DILocation(line: 24, column: 48, scope: !7)
!17 = !DILocation(line: 25, column: 31, scope: !7)
!18 = !DILocation(line: 25, column: 36, scope: !7)
!19 = !DILocation(line: 25, column: 45, scope: !7)
!20 = !DILocation(line: 29, column: 18, scope: !7)
!21 = !DILocation(line: 30, column: 18, scope: !7)
!22 = !DILocation(line: 32, column: 18, scope: !7)
!23 = !DILocation(line: 33, column: 18, scope: !7)
!24 = !DILocation(line: 35, column: 19, scope: !7)
!25 = !DILocation(line: 36, column: 25, scope: !7)
!26 = !{i32 21046}
!27 = !DILocation(line: 28, column: 18, scope: !7)
!28 = !DILocation(line: 38, column: 20, scope: !7)
!29 = !DILocation(line: 39, column: 19, scope: !7)
!30 = !DILocation(line: 41, column: 20, scope: !7)
!31 = !DILocation(line: 42, column: 40, scope: !7)
!32 = !DILocation(line: 42, column: 4, scope: !7)
