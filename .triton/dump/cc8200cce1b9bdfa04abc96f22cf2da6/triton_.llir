; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton__0d1d2de(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !5 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %5 = shl i32 %4, 1, !dbg !8
  %6 = and i32 %5, 510, !dbg !8
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !9
  %8 = shl i32 %7, 9, !dbg !10
  %9 = or i32 %8, %6, !dbg !11
  %.frozen = freeze i32 %9
  %10 = sdiv i32 %.frozen, 256, !dbg !12
  %11 = mul i32 %10, 256
  %.decomposed = sub i32 %.frozen, %11
  %12 = srem i32 %10, 8, !dbg !13
  %13 = sdiv i32 %9, 2048, !dbg !14
  %14 = shl nsw i32 %13, 8, !dbg !15
  %15 = add nsw i32 %14, %.decomposed, !dbg !16
  %16 = shl nsw i32 %12, 19, !dbg !17
  %17 = add nsw i32 %15, %16, !dbg !18
  %18 = sext i32 %17 to i64, !dbg !19
  %19 = getelementptr i16, ptr addrspace(1) %0, i64 %18, !dbg !19
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !20
  %21 = trunc i32 %20 to i16, !dbg !20
  %extelt.offset = lshr i32 %20, 16, !dbg !20
  %22 = trunc i32 %extelt.offset to i16, !dbg !20
  %23 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %21) #1, !dbg !21
  %24 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %22) #1, !dbg !21
  %25 = sext i32 %9 to i64, !dbg !22
  %26 = getelementptr i16, ptr addrspace(1) %1, i64 %25, !dbg !22
  %27 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %23) #1, !dbg !23
  %28 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %24) #1, !dbg !23
  %29 = insertelement <2 x i16> undef, i16 %27, i64 0, !dbg !23
  %30 = insertelement <2 x i16> %29, i16 %28, i64 1, !dbg !23
  %31 = bitcast <2 x i16> %30 to i32, !dbg !23
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %31, ptr addrspace(1) %26, i1 true) #1, !dbg !23
  ret void, !dbg !24
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "ckmgovravn2j2csvwovjf2i2c3j2tf5e522qql2n2gohi2byrb34.py", directory: "/tmp/torchinductor_zeus/km")
!3 = !{ptr @triton__0d1d2de, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d2de, !"maxntidx", i32 256}
!5 = distinct !DISubprogram(name: "triton__0d1d2de", linkageName: "triton__0d1d2de", scope: !2, file: !2, line: 18, type: !6, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 21, column: 36, scope: !5)
!9 = !DILocation(line: 20, column: 28, scope: !5)
!10 = !DILocation(line: 20, column: 33, scope: !5)
!11 = !DILocation(line: 21, column: 23, scope: !5)
!12 = !DILocation(line: 24, column: 20, scope: !5)
!13 = !DILocation(line: 24, column: 27, scope: !5)
!14 = !DILocation(line: 25, column: 20, scope: !5)
!15 = !DILocation(line: 27, column: 40, scope: !5)
!16 = !DILocation(line: 27, column: 36, scope: !5)
!17 = !DILocation(line: 27, column: 54, scope: !5)
!18 = !DILocation(line: 27, column: 47, scope: !5)
!19 = !DILocation(line: 27, column: 30, scope: !5)
!20 = !DILocation(line: 27, column: 60, scope: !5)
!21 = !DILocation(line: 27, column: 69, scope: !5)
!22 = !DILocation(line: 28, column: 25, scope: !5)
!23 = !DILocation(line: 28, column: 36, scope: !5)
!24 = !DILocation(line: 28, column: 4, scope: !5)
