; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8]
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2de3de(ptr addrspace(1) %0, ptr addrspace(1) %1, i64 %2, i64 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = lshr i32 %5, 5, !dbg !10
  %urem = shl i32 %5, 3, !dbg !10
  %7 = and i32 %urem, 2040, !dbg !10
  %8 = or i32 %7, 1, !dbg !10
  %9 = or i32 %7, 2, !dbg !10
  %10 = or i32 %7, 3, !dbg !10
  %11 = insertelement <4 x i32> poison, i32 %7, i64 0, !dbg !10
  %12 = shufflevector <4 x i32> %11, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !10
  %13 = or <4 x i32> %12, <i32 7, i32 6, i32 5, i32 4>, !dbg !10
  %14 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #6, !dbg !11
  %15 = sext i32 %14 to i64, !dbg !12
  %16 = shufflevector <4 x i32> %13, <4 x i32> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>
  %17 = insertelement <8 x i32> %16, i32 %10, i64 4
  %18 = insertelement <8 x i32> %17, i32 %9, i64 5
  %19 = insertelement <8 x i32> %18, i32 %8, i64 6
  %20 = insertelement <8 x i32> %19, i32 %7, i64 7
  %21 = zext <8 x i32> %20 to <8 x i64>
  %22 = srem i32 %14, 8192, !dbg !13
  %.sext = sext i32 %22 to i64, !dbg !13
  %23 = shl nsw i64 %15, 13, !dbg !14
  %invariant.gep = getelementptr i16, ptr addrspace(1) %0, i64 %23, !dbg !15
  %24 = insertelement <8 x i64> poison, i64 %.sext, i64 0, !dbg !16
  %25 = shufflevector <8 x i64> %24, <8 x i64> poison, <8 x i32> zeroinitializer, !dbg !16
  br label %26, !dbg !15

26:                                               ; preds = %4, %__nv_tanhf.exit466
  %27 = phi i32 [ 0, %4 ], [ %355, %__nv_tanhf.exit466 ]
  %28 = phi <8 x float> [ <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, %4 ], [ %354, %__nv_tanhf.exit466 ]
  %29 = zext nneg i32 %27 to i64, !dbg !17
  %30 = insertelement <8 x i64> poison, i64 %29, i64 0, !dbg !17
  %31 = shufflevector <8 x i64> %30, <8 x i64> poison, <8 x i32> zeroinitializer, !dbg !17
  %32 = or <8 x i64> %31, %21, !dbg !17
  %33 = extractelement <8 x i64> %32, i64 7, !dbg !18
  %34 = icmp ult i64 %33, 8192, !dbg !19
  %gep = getelementptr i16, ptr addrspace(1) %invariant.gep, i64 %33, !dbg !18
  %35 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %gep, i1 %34, i32 0, i1 %34, i32 0, i1 %34, i32 0, i1 %34, i32 0, i1 %34) #6, !dbg !20
  %36 = extractvalue { i32, i32, i32, i32 } %35, 0, !dbg !20
  %37 = extractvalue { i32, i32, i32, i32 } %35, 1, !dbg !20
  %38 = extractvalue { i32, i32, i32, i32 } %35, 2, !dbg !20
  %39 = extractvalue { i32, i32, i32, i32 } %35, 3, !dbg !20
  %40 = trunc i32 %36 to i16, !dbg !20
  %extelt.offset10 = lshr i32 %36, 16, !dbg !20
  %41 = trunc i32 %extelt.offset10 to i16, !dbg !20
  %42 = trunc i32 %37 to i16, !dbg !20
  %extelt.offset11 = lshr i32 %37, 16, !dbg !20
  %43 = trunc i32 %extelt.offset11 to i16, !dbg !20
  %44 = trunc i32 %38 to i16, !dbg !20
  %extelt.offset12 = lshr i32 %38, 16, !dbg !20
  %45 = trunc i32 %extelt.offset12 to i16, !dbg !20
  %46 = trunc i32 %39 to i16, !dbg !20
  %extelt.offset13 = lshr i32 %39, 16, !dbg !20
  %47 = trunc i32 %extelt.offset13 to i16, !dbg !20
  %48 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %40) #6, !dbg !21
  %49 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %41) #6, !dbg !21
  %50 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %42) #6, !dbg !21
  %51 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %43) #6, !dbg !21
  %52 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %44) #6, !dbg !21
  %53 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %45) #6, !dbg !21
  %54 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %46) #6, !dbg !21
  %55 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %47) #6, !dbg !21
  %56 = fmul float %48, 6.250000e-02, !dbg !22
  %57 = fmul float %49, 6.250000e-02, !dbg !22
  %58 = fmul float %50, 6.250000e-02, !dbg !22
  %59 = fmul float %51, 6.250000e-02, !dbg !22
  %60 = fmul float %52, 6.250000e-02, !dbg !22
  %61 = fmul float %53, 6.250000e-02, !dbg !22
  %62 = fmul float %54, 6.250000e-02, !dbg !22
  %63 = fmul float %55, 6.250000e-02, !dbg !22
  %64 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %56, float 5.000000e+01) #6, !dbg !23
  %65 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %57, float 5.000000e+01) #6, !dbg !23
  %66 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %58, float 5.000000e+01) #6, !dbg !23
  %67 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %59, float 5.000000e+01) #6, !dbg !23
  %68 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %60, float 5.000000e+01) #6, !dbg !23
  %69 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %61, float 5.000000e+01) #6, !dbg !23
  %70 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %62, float 5.000000e+01) #6, !dbg !23
  %71 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %63, float 5.000000e+01) #6, !dbg !23
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not.i315 = icmp eq i32 %72, 0, !dbg !24
  %73 = tail call float @llvm.nvvm.fabs.ftz.f(float %64) #6, !dbg !24
  %74 = tail call float @llvm.nvvm.fabs.f(float %64) #6, !dbg !24
  %.01.i316 = select i1 %.not.i315, float %74, float %73, !dbg !24
  %75 = fcmp ult float %.01.i316, 0x3FE3333340000000, !dbg !24
  br i1 %75, label %__internal_fmad.exit3.i322, label %__internal_fmad.exit1.i317, !dbg !24

__internal_fmad.exit1.i317:                       ; preds = %26
  %76 = fmul float %.01.i316, 0x4007154760000000, !dbg !24
  %77 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %76) #6, !dbg !24
  %78 = fadd float %77, 1.000000e+00, !dbg !24
  %79 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %78) #7, !dbg !24, !srcloc !25
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not6.i318 = icmp eq i32 %80, 0, !dbg !24
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %79, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %79, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %.03.i319 = select i1 %.not6.i318, float %82, float %81, !dbg !24
  %83 = fcmp oge float %.01.i316, 0x4022059680000000, !dbg !24
  %s.0.i320 = select i1 %83, float 1.000000e+00, float %.03.i319, !dbg !24
  %84 = bitcast float %s.0.i320 to i32, !dbg !24
  %85 = bitcast float %64 to i32, !dbg !24
  %86 = and i32 %85, -2147483648, !dbg !24
  %87 = or i32 %86, %84, !dbg !24
  %88 = bitcast i32 %87 to float, !dbg !24
  br label %__nv_tanhf.exit333, !dbg !24

__internal_fmad.exit3.i322:                       ; preds = %26
  %89 = fmul float %64, %64, !dbg !24
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not1.i323 = icmp eq i32 %90, 0, !dbg !24
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %89, float 0xBFAAC795C0000000) #6, !dbg !24
  %92 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %89, float 0xBFAAC795C0000000) #6, !dbg !24
  %.06.i324 = select i1 %.not1.i323, float %92, float %91, !dbg !24
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not2.i325 = icmp eq i32 %93, 0, !dbg !24
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i324, float %89, float 0x3FC10B2820000000) #6, !dbg !24
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i324, float %89, float 0x3FC10B2820000000) #6, !dbg !24
  %.05.i326 = select i1 %.not2.i325, float %95, float %94, !dbg !24
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not3.i327 = icmp eq i32 %96, 0, !dbg !24
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i326, float %89, float 0xBFD5553DA0000000) #6, !dbg !24
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i326, float %89, float 0xBFD5553DA0000000) #6, !dbg !24
  %.0.i328 = select i1 %.not3.i327, float %98, float %97, !dbg !24
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not4.i329 = icmp eq i32 %99, 0, !dbg !24
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i328, float %89, float 0.000000e+00) #6, !dbg !24
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i328, float %89, float 0.000000e+00) #6, !dbg !24
  %.04.i330 = select i1 %.not4.i329, float %101, float %100, !dbg !24
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not5.i331 = icmp eq i32 %102, 0, !dbg !24
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i330, float %64, float %64) #6, !dbg !24
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i330, float %64, float %64) #6, !dbg !24
  %.02.i332 = select i1 %.not5.i331, float %104, float %103, !dbg !24
  br label %__nv_tanhf.exit333, !dbg !24

__nv_tanhf.exit333:                               ; preds = %__internal_fmad.exit1.i317, %__internal_fmad.exit3.i322
  %s.1.i321 = phi float [ %88, %__internal_fmad.exit1.i317 ], [ %.02.i332, %__internal_fmad.exit3.i322 ], !dbg !24
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not.i334 = icmp eq i32 %105, 0, !dbg !24
  %106 = tail call float @llvm.nvvm.fabs.ftz.f(float %65) #6, !dbg !24
  %107 = tail call float @llvm.nvvm.fabs.f(float %65) #6, !dbg !24
  %.01.i335 = select i1 %.not.i334, float %107, float %106, !dbg !24
  %108 = fcmp ult float %.01.i335, 0x3FE3333340000000, !dbg !24
  br i1 %108, label %__internal_fmad.exit3.i341, label %__internal_fmad.exit1.i336, !dbg !24

__internal_fmad.exit1.i336:                       ; preds = %__nv_tanhf.exit333
  %109 = fmul float %.01.i335, 0x4007154760000000, !dbg !24
  %110 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %109) #6, !dbg !24
  %111 = fadd float %110, 1.000000e+00, !dbg !24
  %112 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %111) #7, !dbg !24, !srcloc !25
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not6.i337 = icmp eq i32 %113, 0, !dbg !24
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %112, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %112, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %.03.i338 = select i1 %.not6.i337, float %115, float %114, !dbg !24
  %116 = fcmp oge float %.01.i335, 0x4022059680000000, !dbg !24
  %s.0.i339 = select i1 %116, float 1.000000e+00, float %.03.i338, !dbg !24
  %117 = bitcast float %s.0.i339 to i32, !dbg !24
  %118 = bitcast float %65 to i32, !dbg !24
  %119 = and i32 %118, -2147483648, !dbg !24
  %120 = or i32 %119, %117, !dbg !24
  %121 = bitcast i32 %120 to float, !dbg !24
  br label %__nv_tanhf.exit352, !dbg !24

__internal_fmad.exit3.i341:                       ; preds = %__nv_tanhf.exit333
  %122 = fmul float %65, %65, !dbg !24
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not1.i342 = icmp eq i32 %123, 0, !dbg !24
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %122, float 0xBFAAC795C0000000) #6, !dbg !24
  %125 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %122, float 0xBFAAC795C0000000) #6, !dbg !24
  %.06.i343 = select i1 %.not1.i342, float %125, float %124, !dbg !24
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not2.i344 = icmp eq i32 %126, 0, !dbg !24
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i343, float %122, float 0x3FC10B2820000000) #6, !dbg !24
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i343, float %122, float 0x3FC10B2820000000) #6, !dbg !24
  %.05.i345 = select i1 %.not2.i344, float %128, float %127, !dbg !24
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not3.i346 = icmp eq i32 %129, 0, !dbg !24
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i345, float %122, float 0xBFD5553DA0000000) #6, !dbg !24
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i345, float %122, float 0xBFD5553DA0000000) #6, !dbg !24
  %.0.i347 = select i1 %.not3.i346, float %131, float %130, !dbg !24
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not4.i348 = icmp eq i32 %132, 0, !dbg !24
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i347, float %122, float 0.000000e+00) #6, !dbg !24
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i347, float %122, float 0.000000e+00) #6, !dbg !24
  %.04.i349 = select i1 %.not4.i348, float %134, float %133, !dbg !24
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not5.i350 = icmp eq i32 %135, 0, !dbg !24
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i349, float %65, float %65) #6, !dbg !24
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i349, float %65, float %65) #6, !dbg !24
  %.02.i351 = select i1 %.not5.i350, float %137, float %136, !dbg !24
  br label %__nv_tanhf.exit352, !dbg !24

__nv_tanhf.exit352:                               ; preds = %__internal_fmad.exit1.i336, %__internal_fmad.exit3.i341
  %s.1.i340 = phi float [ %121, %__internal_fmad.exit1.i336 ], [ %.02.i351, %__internal_fmad.exit3.i341 ], !dbg !24
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not.i353 = icmp eq i32 %138, 0, !dbg !24
  %139 = tail call float @llvm.nvvm.fabs.ftz.f(float %66) #6, !dbg !24
  %140 = tail call float @llvm.nvvm.fabs.f(float %66) #6, !dbg !24
  %.01.i354 = select i1 %.not.i353, float %140, float %139, !dbg !24
  %141 = fcmp ult float %.01.i354, 0x3FE3333340000000, !dbg !24
  br i1 %141, label %__internal_fmad.exit3.i360, label %__internal_fmad.exit1.i355, !dbg !24

__internal_fmad.exit1.i355:                       ; preds = %__nv_tanhf.exit352
  %142 = fmul float %.01.i354, 0x4007154760000000, !dbg !24
  %143 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %142) #6, !dbg !24
  %144 = fadd float %143, 1.000000e+00, !dbg !24
  %145 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %144) #7, !dbg !24, !srcloc !25
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not6.i356 = icmp eq i32 %146, 0, !dbg !24
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %145, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %145, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %.03.i357 = select i1 %.not6.i356, float %148, float %147, !dbg !24
  %149 = fcmp oge float %.01.i354, 0x4022059680000000, !dbg !24
  %s.0.i358 = select i1 %149, float 1.000000e+00, float %.03.i357, !dbg !24
  %150 = bitcast float %s.0.i358 to i32, !dbg !24
  %151 = bitcast float %66 to i32, !dbg !24
  %152 = and i32 %151, -2147483648, !dbg !24
  %153 = or i32 %152, %150, !dbg !24
  %154 = bitcast i32 %153 to float, !dbg !24
  br label %__nv_tanhf.exit371, !dbg !24

__internal_fmad.exit3.i360:                       ; preds = %__nv_tanhf.exit352
  %155 = fmul float %66, %66, !dbg !24
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not1.i361 = icmp eq i32 %156, 0, !dbg !24
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %155, float 0xBFAAC795C0000000) #6, !dbg !24
  %158 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %155, float 0xBFAAC795C0000000) #6, !dbg !24
  %.06.i362 = select i1 %.not1.i361, float %158, float %157, !dbg !24
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not2.i363 = icmp eq i32 %159, 0, !dbg !24
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i362, float %155, float 0x3FC10B2820000000) #6, !dbg !24
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i362, float %155, float 0x3FC10B2820000000) #6, !dbg !24
  %.05.i364 = select i1 %.not2.i363, float %161, float %160, !dbg !24
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not3.i365 = icmp eq i32 %162, 0, !dbg !24
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i364, float %155, float 0xBFD5553DA0000000) #6, !dbg !24
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i364, float %155, float 0xBFD5553DA0000000) #6, !dbg !24
  %.0.i366 = select i1 %.not3.i365, float %164, float %163, !dbg !24
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not4.i367 = icmp eq i32 %165, 0, !dbg !24
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i366, float %155, float 0.000000e+00) #6, !dbg !24
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i366, float %155, float 0.000000e+00) #6, !dbg !24
  %.04.i368 = select i1 %.not4.i367, float %167, float %166, !dbg !24
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not5.i369 = icmp eq i32 %168, 0, !dbg !24
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i368, float %66, float %66) #6, !dbg !24
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i368, float %66, float %66) #6, !dbg !24
  %.02.i370 = select i1 %.not5.i369, float %170, float %169, !dbg !24
  br label %__nv_tanhf.exit371, !dbg !24

__nv_tanhf.exit371:                               ; preds = %__internal_fmad.exit1.i355, %__internal_fmad.exit3.i360
  %s.1.i359 = phi float [ %154, %__internal_fmad.exit1.i355 ], [ %.02.i370, %__internal_fmad.exit3.i360 ], !dbg !24
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not.i372 = icmp eq i32 %171, 0, !dbg !24
  %172 = tail call float @llvm.nvvm.fabs.ftz.f(float %67) #6, !dbg !24
  %173 = tail call float @llvm.nvvm.fabs.f(float %67) #6, !dbg !24
  %.01.i373 = select i1 %.not.i372, float %173, float %172, !dbg !24
  %174 = fcmp ult float %.01.i373, 0x3FE3333340000000, !dbg !24
  br i1 %174, label %__internal_fmad.exit3.i379, label %__internal_fmad.exit1.i374, !dbg !24

__internal_fmad.exit1.i374:                       ; preds = %__nv_tanhf.exit371
  %175 = fmul float %.01.i373, 0x4007154760000000, !dbg !24
  %176 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %175) #6, !dbg !24
  %177 = fadd float %176, 1.000000e+00, !dbg !24
  %178 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %177) #7, !dbg !24, !srcloc !25
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not6.i375 = icmp eq i32 %179, 0, !dbg !24
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %178, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %178, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %.03.i376 = select i1 %.not6.i375, float %181, float %180, !dbg !24
  %182 = fcmp oge float %.01.i373, 0x4022059680000000, !dbg !24
  %s.0.i377 = select i1 %182, float 1.000000e+00, float %.03.i376, !dbg !24
  %183 = bitcast float %s.0.i377 to i32, !dbg !24
  %184 = bitcast float %67 to i32, !dbg !24
  %185 = and i32 %184, -2147483648, !dbg !24
  %186 = or i32 %185, %183, !dbg !24
  %187 = bitcast i32 %186 to float, !dbg !24
  br label %__nv_tanhf.exit390, !dbg !24

__internal_fmad.exit3.i379:                       ; preds = %__nv_tanhf.exit371
  %188 = fmul float %67, %67, !dbg !24
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not1.i380 = icmp eq i32 %189, 0, !dbg !24
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %188, float 0xBFAAC795C0000000) #6, !dbg !24
  %191 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %188, float 0xBFAAC795C0000000) #6, !dbg !24
  %.06.i381 = select i1 %.not1.i380, float %191, float %190, !dbg !24
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not2.i382 = icmp eq i32 %192, 0, !dbg !24
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i381, float %188, float 0x3FC10B2820000000) #6, !dbg !24
  %194 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i381, float %188, float 0x3FC10B2820000000) #6, !dbg !24
  %.05.i383 = select i1 %.not2.i382, float %194, float %193, !dbg !24
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not3.i384 = icmp eq i32 %195, 0, !dbg !24
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i383, float %188, float 0xBFD5553DA0000000) #6, !dbg !24
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i383, float %188, float 0xBFD5553DA0000000) #6, !dbg !24
  %.0.i385 = select i1 %.not3.i384, float %197, float %196, !dbg !24
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not4.i386 = icmp eq i32 %198, 0, !dbg !24
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i385, float %188, float 0.000000e+00) #6, !dbg !24
  %200 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i385, float %188, float 0.000000e+00) #6, !dbg !24
  %.04.i387 = select i1 %.not4.i386, float %200, float %199, !dbg !24
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not5.i388 = icmp eq i32 %201, 0, !dbg !24
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i387, float %67, float %67) #6, !dbg !24
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i387, float %67, float %67) #6, !dbg !24
  %.02.i389 = select i1 %.not5.i388, float %203, float %202, !dbg !24
  br label %__nv_tanhf.exit390, !dbg !24

__nv_tanhf.exit390:                               ; preds = %__internal_fmad.exit1.i374, %__internal_fmad.exit3.i379
  %s.1.i378 = phi float [ %187, %__internal_fmad.exit1.i374 ], [ %.02.i389, %__internal_fmad.exit3.i379 ], !dbg !24
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not.i391 = icmp eq i32 %204, 0, !dbg !24
  %205 = tail call float @llvm.nvvm.fabs.ftz.f(float %68) #6, !dbg !24
  %206 = tail call float @llvm.nvvm.fabs.f(float %68) #6, !dbg !24
  %.01.i392 = select i1 %.not.i391, float %206, float %205, !dbg !24
  %207 = fcmp ult float %.01.i392, 0x3FE3333340000000, !dbg !24
  br i1 %207, label %__internal_fmad.exit3.i398, label %__internal_fmad.exit1.i393, !dbg !24

__internal_fmad.exit1.i393:                       ; preds = %__nv_tanhf.exit390
  %208 = fmul float %.01.i392, 0x4007154760000000, !dbg !24
  %209 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %208) #6, !dbg !24
  %210 = fadd float %209, 1.000000e+00, !dbg !24
  %211 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %210) #7, !dbg !24, !srcloc !25
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not6.i394 = icmp eq i32 %212, 0, !dbg !24
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %211, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %214 = tail call float @llvm.nvvm.fma.rn.f(float %211, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %.03.i395 = select i1 %.not6.i394, float %214, float %213, !dbg !24
  %215 = fcmp oge float %.01.i392, 0x4022059680000000, !dbg !24
  %s.0.i396 = select i1 %215, float 1.000000e+00, float %.03.i395, !dbg !24
  %216 = bitcast float %s.0.i396 to i32, !dbg !24
  %217 = bitcast float %68 to i32, !dbg !24
  %218 = and i32 %217, -2147483648, !dbg !24
  %219 = or i32 %218, %216, !dbg !24
  %220 = bitcast i32 %219 to float, !dbg !24
  br label %__nv_tanhf.exit409, !dbg !24

__internal_fmad.exit3.i398:                       ; preds = %__nv_tanhf.exit390
  %221 = fmul float %68, %68, !dbg !24
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not1.i399 = icmp eq i32 %222, 0, !dbg !24
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %221, float 0xBFAAC795C0000000) #6, !dbg !24
  %224 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %221, float 0xBFAAC795C0000000) #6, !dbg !24
  %.06.i400 = select i1 %.not1.i399, float %224, float %223, !dbg !24
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not2.i401 = icmp eq i32 %225, 0, !dbg !24
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i400, float %221, float 0x3FC10B2820000000) #6, !dbg !24
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i400, float %221, float 0x3FC10B2820000000) #6, !dbg !24
  %.05.i402 = select i1 %.not2.i401, float %227, float %226, !dbg !24
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not3.i403 = icmp eq i32 %228, 0, !dbg !24
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i402, float %221, float 0xBFD5553DA0000000) #6, !dbg !24
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i402, float %221, float 0xBFD5553DA0000000) #6, !dbg !24
  %.0.i404 = select i1 %.not3.i403, float %230, float %229, !dbg !24
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not4.i405 = icmp eq i32 %231, 0, !dbg !24
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i404, float %221, float 0.000000e+00) #6, !dbg !24
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i404, float %221, float 0.000000e+00) #6, !dbg !24
  %.04.i406 = select i1 %.not4.i405, float %233, float %232, !dbg !24
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not5.i407 = icmp eq i32 %234, 0, !dbg !24
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i406, float %68, float %68) #6, !dbg !24
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i406, float %68, float %68) #6, !dbg !24
  %.02.i408 = select i1 %.not5.i407, float %236, float %235, !dbg !24
  br label %__nv_tanhf.exit409, !dbg !24

__nv_tanhf.exit409:                               ; preds = %__internal_fmad.exit1.i393, %__internal_fmad.exit3.i398
  %s.1.i397 = phi float [ %220, %__internal_fmad.exit1.i393 ], [ %.02.i408, %__internal_fmad.exit3.i398 ], !dbg !24
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not.i410 = icmp eq i32 %237, 0, !dbg !24
  %238 = tail call float @llvm.nvvm.fabs.ftz.f(float %69) #6, !dbg !24
  %239 = tail call float @llvm.nvvm.fabs.f(float %69) #6, !dbg !24
  %.01.i411 = select i1 %.not.i410, float %239, float %238, !dbg !24
  %240 = fcmp ult float %.01.i411, 0x3FE3333340000000, !dbg !24
  br i1 %240, label %__internal_fmad.exit3.i417, label %__internal_fmad.exit1.i412, !dbg !24

__internal_fmad.exit1.i412:                       ; preds = %__nv_tanhf.exit409
  %241 = fmul float %.01.i411, 0x4007154760000000, !dbg !24
  %242 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %241) #6, !dbg !24
  %243 = fadd float %242, 1.000000e+00, !dbg !24
  %244 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %243) #7, !dbg !24, !srcloc !25
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not6.i413 = icmp eq i32 %245, 0, !dbg !24
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %244, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %244, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %.03.i414 = select i1 %.not6.i413, float %247, float %246, !dbg !24
  %248 = fcmp oge float %.01.i411, 0x4022059680000000, !dbg !24
  %s.0.i415 = select i1 %248, float 1.000000e+00, float %.03.i414, !dbg !24
  %249 = bitcast float %s.0.i415 to i32, !dbg !24
  %250 = bitcast float %69 to i32, !dbg !24
  %251 = and i32 %250, -2147483648, !dbg !24
  %252 = or i32 %251, %249, !dbg !24
  %253 = bitcast i32 %252 to float, !dbg !24
  br label %__nv_tanhf.exit428, !dbg !24

__internal_fmad.exit3.i417:                       ; preds = %__nv_tanhf.exit409
  %254 = fmul float %69, %69, !dbg !24
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not1.i418 = icmp eq i32 %255, 0, !dbg !24
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %254, float 0xBFAAC795C0000000) #6, !dbg !24
  %257 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %254, float 0xBFAAC795C0000000) #6, !dbg !24
  %.06.i419 = select i1 %.not1.i418, float %257, float %256, !dbg !24
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not2.i420 = icmp eq i32 %258, 0, !dbg !24
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i419, float %254, float 0x3FC10B2820000000) #6, !dbg !24
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i419, float %254, float 0x3FC10B2820000000) #6, !dbg !24
  %.05.i421 = select i1 %.not2.i420, float %260, float %259, !dbg !24
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not3.i422 = icmp eq i32 %261, 0, !dbg !24
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i421, float %254, float 0xBFD5553DA0000000) #6, !dbg !24
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i421, float %254, float 0xBFD5553DA0000000) #6, !dbg !24
  %.0.i423 = select i1 %.not3.i422, float %263, float %262, !dbg !24
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not4.i424 = icmp eq i32 %264, 0, !dbg !24
  %265 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i423, float %254, float 0.000000e+00) #6, !dbg !24
  %266 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i423, float %254, float 0.000000e+00) #6, !dbg !24
  %.04.i425 = select i1 %.not4.i424, float %266, float %265, !dbg !24
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not5.i426 = icmp eq i32 %267, 0, !dbg !24
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i425, float %69, float %69) #6, !dbg !24
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i425, float %69, float %69) #6, !dbg !24
  %.02.i427 = select i1 %.not5.i426, float %269, float %268, !dbg !24
  br label %__nv_tanhf.exit428, !dbg !24

__nv_tanhf.exit428:                               ; preds = %__internal_fmad.exit1.i412, %__internal_fmad.exit3.i417
  %s.1.i416 = phi float [ %253, %__internal_fmad.exit1.i412 ], [ %.02.i427, %__internal_fmad.exit3.i417 ], !dbg !24
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not.i429 = icmp eq i32 %270, 0, !dbg !24
  %271 = tail call float @llvm.nvvm.fabs.ftz.f(float %70) #6, !dbg !24
  %272 = tail call float @llvm.nvvm.fabs.f(float %70) #6, !dbg !24
  %.01.i430 = select i1 %.not.i429, float %272, float %271, !dbg !24
  %273 = fcmp ult float %.01.i430, 0x3FE3333340000000, !dbg !24
  br i1 %273, label %__internal_fmad.exit3.i436, label %__internal_fmad.exit1.i431, !dbg !24

__internal_fmad.exit1.i431:                       ; preds = %__nv_tanhf.exit428
  %274 = fmul float %.01.i430, 0x4007154760000000, !dbg !24
  %275 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %274) #6, !dbg !24
  %276 = fadd float %275, 1.000000e+00, !dbg !24
  %277 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %276) #7, !dbg !24, !srcloc !25
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not6.i432 = icmp eq i32 %278, 0, !dbg !24
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %277, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %277, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %.03.i433 = select i1 %.not6.i432, float %280, float %279, !dbg !24
  %281 = fcmp oge float %.01.i430, 0x4022059680000000, !dbg !24
  %s.0.i434 = select i1 %281, float 1.000000e+00, float %.03.i433, !dbg !24
  %282 = bitcast float %s.0.i434 to i32, !dbg !24
  %283 = bitcast float %70 to i32, !dbg !24
  %284 = and i32 %283, -2147483648, !dbg !24
  %285 = or i32 %284, %282, !dbg !24
  %286 = bitcast i32 %285 to float, !dbg !24
  br label %__nv_tanhf.exit447, !dbg !24

__internal_fmad.exit3.i436:                       ; preds = %__nv_tanhf.exit428
  %287 = fmul float %70, %70, !dbg !24
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not1.i437 = icmp eq i32 %288, 0, !dbg !24
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %287, float 0xBFAAC795C0000000) #6, !dbg !24
  %290 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %287, float 0xBFAAC795C0000000) #6, !dbg !24
  %.06.i438 = select i1 %.not1.i437, float %290, float %289, !dbg !24
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not2.i439 = icmp eq i32 %291, 0, !dbg !24
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i438, float %287, float 0x3FC10B2820000000) #6, !dbg !24
  %293 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i438, float %287, float 0x3FC10B2820000000) #6, !dbg !24
  %.05.i440 = select i1 %.not2.i439, float %293, float %292, !dbg !24
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not3.i441 = icmp eq i32 %294, 0, !dbg !24
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i440, float %287, float 0xBFD5553DA0000000) #6, !dbg !24
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i440, float %287, float 0xBFD5553DA0000000) #6, !dbg !24
  %.0.i442 = select i1 %.not3.i441, float %296, float %295, !dbg !24
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not4.i443 = icmp eq i32 %297, 0, !dbg !24
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i442, float %287, float 0.000000e+00) #6, !dbg !24
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i442, float %287, float 0.000000e+00) #6, !dbg !24
  %.04.i444 = select i1 %.not4.i443, float %299, float %298, !dbg !24
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not5.i445 = icmp eq i32 %300, 0, !dbg !24
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i444, float %70, float %70) #6, !dbg !24
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i444, float %70, float %70) #6, !dbg !24
  %.02.i446 = select i1 %.not5.i445, float %302, float %301, !dbg !24
  br label %__nv_tanhf.exit447, !dbg !24

__nv_tanhf.exit447:                               ; preds = %__internal_fmad.exit1.i431, %__internal_fmad.exit3.i436
  %s.1.i435 = phi float [ %286, %__internal_fmad.exit1.i431 ], [ %.02.i446, %__internal_fmad.exit3.i436 ], !dbg !24
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not.i448 = icmp eq i32 %303, 0, !dbg !24
  %304 = tail call float @llvm.nvvm.fabs.ftz.f(float %71) #6, !dbg !24
  %305 = tail call float @llvm.nvvm.fabs.f(float %71) #6, !dbg !24
  %.01.i449 = select i1 %.not.i448, float %305, float %304, !dbg !24
  %306 = fcmp ult float %.01.i449, 0x3FE3333340000000, !dbg !24
  br i1 %306, label %__internal_fmad.exit3.i455, label %__internal_fmad.exit1.i450, !dbg !24

__internal_fmad.exit1.i450:                       ; preds = %__nv_tanhf.exit447
  %307 = fmul float %.01.i449, 0x4007154760000000, !dbg !24
  %308 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %307) #6, !dbg !24
  %309 = fadd float %308, 1.000000e+00, !dbg !24
  %310 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %309) #7, !dbg !24, !srcloc !25
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not6.i451 = icmp eq i32 %311, 0, !dbg !24
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %310, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %313 = tail call float @llvm.nvvm.fma.rn.f(float %310, float -2.000000e+00, float 1.000000e+00) #6, !dbg !24
  %.03.i452 = select i1 %.not6.i451, float %313, float %312, !dbg !24
  %314 = fcmp oge float %.01.i449, 0x4022059680000000, !dbg !24
  %s.0.i453 = select i1 %314, float 1.000000e+00, float %.03.i452, !dbg !24
  %315 = bitcast float %s.0.i453 to i32, !dbg !24
  %316 = bitcast float %71 to i32, !dbg !24
  %317 = and i32 %316, -2147483648, !dbg !24
  %318 = or i32 %317, %315, !dbg !24
  %319 = bitcast i32 %318 to float, !dbg !24
  br label %__nv_tanhf.exit466, !dbg !24

__internal_fmad.exit3.i455:                       ; preds = %__nv_tanhf.exit447
  %320 = fmul float %71, %71, !dbg !24
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not1.i456 = icmp eq i32 %321, 0, !dbg !24
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %320, float 0xBFAAC795C0000000) #6, !dbg !24
  %323 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %320, float 0xBFAAC795C0000000) #6, !dbg !24
  %.06.i457 = select i1 %.not1.i456, float %323, float %322, !dbg !24
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not2.i458 = icmp eq i32 %324, 0, !dbg !24
  %325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i457, float %320, float 0x3FC10B2820000000) #6, !dbg !24
  %326 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i457, float %320, float 0x3FC10B2820000000) #6, !dbg !24
  %.05.i459 = select i1 %.not2.i458, float %326, float %325, !dbg !24
  %327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not3.i460 = icmp eq i32 %327, 0, !dbg !24
  %328 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i459, float %320, float 0xBFD5553DA0000000) #6, !dbg !24
  %329 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i459, float %320, float 0xBFD5553DA0000000) #6, !dbg !24
  %.0.i461 = select i1 %.not3.i460, float %329, float %328, !dbg !24
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not4.i462 = icmp eq i32 %330, 0, !dbg !24
  %331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i461, float %320, float 0.000000e+00) #6, !dbg !24
  %332 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i461, float %320, float 0.000000e+00) #6, !dbg !24
  %.04.i463 = select i1 %.not4.i462, float %332, float %331, !dbg !24
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not5.i464 = icmp eq i32 %333, 0, !dbg !24
  %334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i463, float %71, float %71) #6, !dbg !24
  %335 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i463, float %71, float %71) #6, !dbg !24
  %.02.i465 = select i1 %.not5.i464, float %335, float %334, !dbg !24
  br label %__nv_tanhf.exit466, !dbg !24

__nv_tanhf.exit466:                               ; preds = %__internal_fmad.exit1.i450, %__internal_fmad.exit3.i455
  %s.1.i454 = phi float [ %319, %__internal_fmad.exit1.i450 ], [ %.02.i465, %__internal_fmad.exit3.i455 ], !dbg !24
  %336 = insertelement <8 x float> poison, float %s.1.i454, i64 0, !dbg !26
  %337 = insertelement <8 x float> %336, float %s.1.i435, i64 1, !dbg !26
  %338 = insertelement <8 x float> %337, float %s.1.i416, i64 2, !dbg !26
  %339 = insertelement <8 x float> %338, float %s.1.i397, i64 3, !dbg !26
  %340 = insertelement <8 x float> %339, float %s.1.i378, i64 4, !dbg !26
  %341 = insertelement <8 x float> %340, float %s.1.i359, i64 5, !dbg !26
  %342 = insertelement <8 x float> %341, float %s.1.i340, i64 6, !dbg !26
  %343 = insertelement <8 x float> %342, float %s.1.i321, i64 7, !dbg !26
  %344 = fmul <8 x float> %343, <float 5.000000e+01, float 5.000000e+01, float 5.000000e+01, float 5.000000e+01, float 5.000000e+01, float 5.000000e+01, float 5.000000e+01, float 5.000000e+01>, !dbg !26
  %345 = icmp sgt <8 x i64> %32, %25, !dbg !16
  %346 = fcmp ord <8 x float> %28, zeroinitializer, !dbg !27
  %347 = select <8 x i1> %345, <8 x float> <float 0xC7EFE00000000000, float 0xC7EFE00000000000, float 0xC7EFE00000000000, float 0xC7EFE00000000000, float 0xC7EFE00000000000, float 0xC7EFE00000000000, float 0xC7EFE00000000000, float 0xC7EFE00000000000>, <8 x float> zeroinitializer, !dbg !31
  %348 = fadd <8 x float> %347, %344, !dbg !32
  %349 = fcmp ule <8 x float> %28, %348, !dbg !33
  %350 = and <8 x i1> %346, %349, !dbg !34
  %351 = insertelement <8 x i1> poison, i1 %34, i64 0, !dbg !34
  %352 = shufflevector <8 x i1> %351, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !34
  %353 = and <8 x i1> %352, %350, !dbg !34
  %354 = select <8 x i1> %353, <8 x float> %348, <8 x float> %28, !dbg !34
  %355 = add nuw nsw i32 %27, 2048, !dbg !15
  %356 = icmp ult i32 %27, 6144, !dbg !15
  br i1 %356, label %26, label %357, !dbg !15

357:                                              ; preds = %__nv_tanhf.exit466
  %358 = and i32 %5, 31, !dbg !10
  %359 = and i32 %6, 7, !dbg !10
  %360 = extractelement <8 x float> %354, i64 6, !dbg !35
  %361 = extractelement <8 x float> %354, i64 7, !dbg !35
  %362 = fcmp ogt float %361, %360, !dbg !35
  %363 = fcmp uno float %361, 0.000000e+00, !dbg !39
  %364 = or i1 %362, %363, !dbg !40
  %365 = select i1 %364, float %361, float %360, !dbg !41
  %366 = extractelement <8 x float> %354, i64 5, !dbg !35
  %367 = fcmp ogt float %365, %366, !dbg !35
  %368 = fcmp uno float %365, 0.000000e+00, !dbg !39
  %369 = or i1 %367, %368, !dbg !40
  %370 = select i1 %369, float %365, float %366, !dbg !41
  %371 = extractelement <8 x float> %354, i64 4, !dbg !35
  %372 = fcmp ogt float %370, %371, !dbg !35
  %373 = fcmp uno float %370, 0.000000e+00, !dbg !39
  %374 = or i1 %372, %373, !dbg !40
  %375 = select i1 %374, float %370, float %371, !dbg !41
  %376 = extractelement <8 x float> %354, i64 3, !dbg !35
  %377 = fcmp ogt float %375, %376, !dbg !35
  %378 = fcmp uno float %375, 0.000000e+00, !dbg !39
  %379 = or i1 %377, %378, !dbg !40
  %380 = select i1 %379, float %375, float %376, !dbg !41
  %381 = extractelement <8 x float> %354, i64 2, !dbg !35
  %382 = fcmp ogt float %380, %381, !dbg !35
  %383 = fcmp uno float %380, 0.000000e+00, !dbg !39
  %384 = or i1 %382, %383, !dbg !40
  %385 = select i1 %384, float %380, float %381, !dbg !41
  %386 = extractelement <8 x float> %354, i64 1, !dbg !35
  %387 = fcmp ogt float %385, %386, !dbg !35
  %388 = fcmp uno float %385, 0.000000e+00, !dbg !39
  %389 = or i1 %387, %388, !dbg !40
  %390 = select i1 %389, float %385, float %386, !dbg !41
  %391 = extractelement <8 x float> %354, i64 0, !dbg !35
  %392 = fcmp ogt float %390, %391, !dbg !35
  %393 = fcmp uno float %390, 0.000000e+00, !dbg !39
  %394 = or i1 %392, %393, !dbg !40
  %395 = select i1 %394, float %390, float %391, !dbg !41
  %396 = bitcast float %395 to i32, !dbg !42
  %397 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %396, i32 16, i32 31), !dbg !42
  %398 = bitcast i32 %397 to float, !dbg !42
  %399 = fcmp ogt float %395, %398, !dbg !35
  %400 = fcmp uno float %395, 0.000000e+00, !dbg !39
  %401 = or i1 %400, %399, !dbg !40
  %402 = select i1 %401, float %395, float %398, !dbg !41
  %403 = bitcast float %402 to i32, !dbg !42
  %404 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %403, i32 8, i32 31), !dbg !42
  %405 = bitcast i32 %404 to float, !dbg !42
  %406 = fcmp ogt float %402, %405, !dbg !35
  %407 = fcmp uno float %402, 0.000000e+00, !dbg !39
  %408 = or i1 %406, %407, !dbg !40
  %409 = select i1 %408, float %402, float %405, !dbg !41
  %410 = bitcast float %409 to i32, !dbg !42
  %411 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %410, i32 4, i32 31), !dbg !42
  %412 = bitcast i32 %411 to float, !dbg !42
  %413 = fcmp ogt float %409, %412, !dbg !35
  %414 = fcmp uno float %409, 0.000000e+00, !dbg !39
  %415 = or i1 %413, %414, !dbg !40
  %416 = select i1 %415, float %409, float %412, !dbg !41
  %417 = bitcast float %416 to i32, !dbg !42
  %418 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %417, i32 2, i32 31), !dbg !42
  %419 = bitcast i32 %418 to float, !dbg !42
  %420 = fcmp ogt float %416, %419, !dbg !35
  %421 = fcmp uno float %416, 0.000000e+00, !dbg !39
  %422 = or i1 %420, %421, !dbg !40
  %423 = select i1 %422, float %416, float %419, !dbg !41
  %424 = bitcast float %423 to i32, !dbg !42
  %425 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %424, i32 1, i32 31), !dbg !42
  %426 = bitcast i32 %425 to float, !dbg !42
  %427 = fcmp ogt float %423, %426, !dbg !35
  %428 = fcmp uno float %423, 0.000000e+00, !dbg !39
  %429 = or i1 %427, %428, !dbg !40
  %430 = select i1 %429, float %423, float %426, !dbg !41
  %431 = icmp eq i32 %358, 0, !dbg !42
  %432 = zext nneg i32 %359 to i64, !dbg !42
  %433 = getelementptr float, ptr addrspace(3) @global_smem, i64 %432, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %433, float %430, i1 %431) #6, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %434 = icmp slt i32 %5, 8, !dbg !42
  %435 = sext i32 %5 to i64, !dbg !42
  %436 = getelementptr float, ptr addrspace(3) @global_smem, i64 %435, !dbg !42
  %437 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %436, i1 %434) #6, !dbg !42
  %438 = bitcast float %437 to i32, !dbg !42
  %439 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %438, i32 4, i32 31), !dbg !42
  %440 = bitcast i32 %439 to float, !dbg !42
  %441 = fcmp ogt float %437, %440, !dbg !35
  %442 = fcmp uno float %437, 0.000000e+00, !dbg !39
  %443 = or i1 %442, %441, !dbg !40
  %444 = select i1 %443, float %437, float %440, !dbg !41
  %445 = bitcast float %444 to i32, !dbg !42
  %446 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %445, i32 2, i32 31), !dbg !42
  %447 = bitcast i32 %446 to float, !dbg !42
  %448 = fcmp ogt float %444, %447, !dbg !35
  %449 = fcmp uno float %444, 0.000000e+00, !dbg !39
  %450 = or i1 %448, %449, !dbg !40
  %451 = select i1 %450, float %444, float %447, !dbg !41
  %452 = bitcast float %451 to i32, !dbg !42
  %453 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %452, i32 1, i32 31), !dbg !42
  %454 = bitcast i32 %453 to float, !dbg !42
  %455 = fcmp ogt float %451, %454, !dbg !35
  %456 = fcmp uno float %451, 0.000000e+00, !dbg !39
  %457 = or i1 %455, %456, !dbg !40
  %458 = select i1 %457, float %451, float %454, !dbg !41
  %459 = and i32 %5, 7, !dbg !42
  %460 = icmp eq i32 %459, 0, !dbg !42
  %461 = and i1 %434, %460, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %436, float %458, i1 %461) #6, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %462 = load float, ptr addrspace(3) @global_smem, align 4, !dbg !42
  %463 = extractelement <8 x i64> %21, i64 0, !dbg !44
  %464 = extractelement <8 x i64> %21, i64 1, !dbg !44
  %465 = extractelement <8 x i64> %21, i64 2, !dbg !44
  %466 = extractelement <8 x i64> %21, i64 3, !dbg !44
  %467 = extractelement <8 x i64> %21, i64 4, !dbg !44
  %468 = extractelement <8 x i64> %21, i64 5, !dbg !44
  %469 = extractelement <8 x i64> %21, i64 6, !dbg !44
  %470 = extractelement <8 x i64> %21, i64 7, !dbg !44
  br label %471, !dbg !45

471:                                              ; preds = %357, %__nv_tanhf.exit314
  %472 = phi i32 [ 0, %357 ], [ %853, %__nv_tanhf.exit314 ]
  %473 = phi <8 x float> [ zeroinitializer, %357 ], [ %852, %__nv_tanhf.exit314 ]
  %474 = zext nneg i32 %472 to i64, !dbg !44
  %475 = or i64 %470, %474, !dbg !44
  %476 = or i64 %469, %474, !dbg !44
  %477 = or i64 %468, %474, !dbg !44
  %478 = or i64 %467, %474, !dbg !44
  %479 = or i64 %466, %474, !dbg !44
  %480 = or i64 %465, %474, !dbg !44
  %481 = or i64 %464, %474, !dbg !44
  %482 = or i64 %463, %474, !dbg !44
  %483 = icmp ult i64 %475, 8192, !dbg !46
  %gep469 = getelementptr i16, ptr addrspace(1) %invariant.gep, i64 %475, !dbg !47
  %484 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %gep469, i1 %483, i32 0, i1 %483, i32 0, i1 %483, i32 0, i1 %483, i32 0, i1 %483) #6, !dbg !48
  %485 = extractvalue { i32, i32, i32, i32 } %484, 0, !dbg !48
  %486 = extractvalue { i32, i32, i32, i32 } %484, 1, !dbg !48
  %487 = extractvalue { i32, i32, i32, i32 } %484, 2, !dbg !48
  %488 = extractvalue { i32, i32, i32, i32 } %484, 3, !dbg !48
  %489 = trunc i32 %485 to i16, !dbg !48
  %extelt.offset6 = lshr i32 %485, 16, !dbg !48
  %490 = trunc i32 %extelt.offset6 to i16, !dbg !48
  %491 = trunc i32 %486 to i16, !dbg !48
  %extelt.offset7 = lshr i32 %486, 16, !dbg !48
  %492 = trunc i32 %extelt.offset7 to i16, !dbg !48
  %493 = trunc i32 %487 to i16, !dbg !48
  %extelt.offset8 = lshr i32 %487, 16, !dbg !48
  %494 = trunc i32 %extelt.offset8 to i16, !dbg !48
  %495 = trunc i32 %488 to i16, !dbg !48
  %extelt.offset9 = lshr i32 %488, 16, !dbg !48
  %496 = trunc i32 %extelt.offset9 to i16, !dbg !48
  %497 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %489) #6, !dbg !49
  %498 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %490) #6, !dbg !49
  %499 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %491) #6, !dbg !49
  %500 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %492) #6, !dbg !49
  %501 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %493) #6, !dbg !49
  %502 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %494) #6, !dbg !49
  %503 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %495) #6, !dbg !49
  %504 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %496) #6, !dbg !49
  %505 = fmul float %497, 6.250000e-02, !dbg !50
  %506 = fmul float %498, 6.250000e-02, !dbg !50
  %507 = fmul float %499, 6.250000e-02, !dbg !50
  %508 = fmul float %500, 6.250000e-02, !dbg !50
  %509 = fmul float %501, 6.250000e-02, !dbg !50
  %510 = fmul float %502, 6.250000e-02, !dbg !50
  %511 = fmul float %503, 6.250000e-02, !dbg !50
  %512 = fmul float %504, 6.250000e-02, !dbg !50
  %513 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %505, float 5.000000e+01) #6, !dbg !51
  %514 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %506, float 5.000000e+01) #6, !dbg !51
  %515 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %507, float 5.000000e+01) #6, !dbg !51
  %516 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %508, float 5.000000e+01) #6, !dbg !51
  %517 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %509, float 5.000000e+01) #6, !dbg !51
  %518 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %510, float 5.000000e+01) #6, !dbg !51
  %519 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %511, float 5.000000e+01) #6, !dbg !51
  %520 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %512, float 5.000000e+01) #6, !dbg !51
  %521 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i163 = icmp eq i32 %521, 0, !dbg !52
  %522 = tail call float @llvm.nvvm.fabs.ftz.f(float %513) #6, !dbg !52
  %523 = tail call float @llvm.nvvm.fabs.f(float %513) #6, !dbg !52
  %.01.i164 = select i1 %.not.i163, float %523, float %522, !dbg !52
  %524 = fcmp ult float %.01.i164, 0x3FE3333340000000, !dbg !52
  br i1 %524, label %__internal_fmad.exit3.i170, label %__internal_fmad.exit1.i165, !dbg !52

__internal_fmad.exit1.i165:                       ; preds = %471
  %525 = fmul float %.01.i164, 0x4007154760000000, !dbg !52
  %526 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %525) #6, !dbg !52
  %527 = fadd float %526, 1.000000e+00, !dbg !52
  %528 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %527) #7, !dbg !52, !srcloc !25
  %529 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i166 = icmp eq i32 %529, 0, !dbg !52
  %530 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %528, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %531 = tail call float @llvm.nvvm.fma.rn.f(float %528, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i167 = select i1 %.not6.i166, float %531, float %530, !dbg !52
  %532 = fcmp oge float %.01.i164, 0x4022059680000000, !dbg !52
  %s.0.i168 = select i1 %532, float 1.000000e+00, float %.03.i167, !dbg !52
  %533 = bitcast float %s.0.i168 to i32, !dbg !52
  %534 = bitcast float %513 to i32, !dbg !52
  %535 = and i32 %534, -2147483648, !dbg !52
  %536 = or i32 %535, %533, !dbg !52
  %537 = bitcast i32 %536 to float, !dbg !52
  br label %__nv_tanhf.exit181, !dbg !52

__internal_fmad.exit3.i170:                       ; preds = %471
  %538 = fmul float %513, %513, !dbg !52
  %539 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i171 = icmp eq i32 %539, 0, !dbg !52
  %540 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %538, float 0xBFAAC795C0000000) #6, !dbg !52
  %541 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %538, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i172 = select i1 %.not1.i171, float %541, float %540, !dbg !52
  %542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i173 = icmp eq i32 %542, 0, !dbg !52
  %543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i172, float %538, float 0x3FC10B2820000000) #6, !dbg !52
  %544 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i172, float %538, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i174 = select i1 %.not2.i173, float %544, float %543, !dbg !52
  %545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i175 = icmp eq i32 %545, 0, !dbg !52
  %546 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i174, float %538, float 0xBFD5553DA0000000) #6, !dbg !52
  %547 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i174, float %538, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i176 = select i1 %.not3.i175, float %547, float %546, !dbg !52
  %548 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i177 = icmp eq i32 %548, 0, !dbg !52
  %549 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i176, float %538, float 0.000000e+00) #6, !dbg !52
  %550 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i176, float %538, float 0.000000e+00) #6, !dbg !52
  %.04.i178 = select i1 %.not4.i177, float %550, float %549, !dbg !52
  %551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i179 = icmp eq i32 %551, 0, !dbg !52
  %552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i178, float %513, float %513) #6, !dbg !52
  %553 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i178, float %513, float %513) #6, !dbg !52
  %.02.i180 = select i1 %.not5.i179, float %553, float %552, !dbg !52
  br label %__nv_tanhf.exit181, !dbg !52

__nv_tanhf.exit181:                               ; preds = %__internal_fmad.exit1.i165, %__internal_fmad.exit3.i170
  %s.1.i169 = phi float [ %537, %__internal_fmad.exit1.i165 ], [ %.02.i180, %__internal_fmad.exit3.i170 ], !dbg !52
  %554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i182 = icmp eq i32 %554, 0, !dbg !52
  %555 = tail call float @llvm.nvvm.fabs.ftz.f(float %514) #6, !dbg !52
  %556 = tail call float @llvm.nvvm.fabs.f(float %514) #6, !dbg !52
  %.01.i183 = select i1 %.not.i182, float %556, float %555, !dbg !52
  %557 = fcmp ult float %.01.i183, 0x3FE3333340000000, !dbg !52
  br i1 %557, label %__internal_fmad.exit3.i189, label %__internal_fmad.exit1.i184, !dbg !52

__internal_fmad.exit1.i184:                       ; preds = %__nv_tanhf.exit181
  %558 = fmul float %.01.i183, 0x4007154760000000, !dbg !52
  %559 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %558) #6, !dbg !52
  %560 = fadd float %559, 1.000000e+00, !dbg !52
  %561 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %560) #7, !dbg !52, !srcloc !25
  %562 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i185 = icmp eq i32 %562, 0, !dbg !52
  %563 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %561, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %564 = tail call float @llvm.nvvm.fma.rn.f(float %561, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i186 = select i1 %.not6.i185, float %564, float %563, !dbg !52
  %565 = fcmp oge float %.01.i183, 0x4022059680000000, !dbg !52
  %s.0.i187 = select i1 %565, float 1.000000e+00, float %.03.i186, !dbg !52
  %566 = bitcast float %s.0.i187 to i32, !dbg !52
  %567 = bitcast float %514 to i32, !dbg !52
  %568 = and i32 %567, -2147483648, !dbg !52
  %569 = or i32 %568, %566, !dbg !52
  %570 = bitcast i32 %569 to float, !dbg !52
  br label %__nv_tanhf.exit200, !dbg !52

__internal_fmad.exit3.i189:                       ; preds = %__nv_tanhf.exit181
  %571 = fmul float %514, %514, !dbg !52
  %572 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i190 = icmp eq i32 %572, 0, !dbg !52
  %573 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %571, float 0xBFAAC795C0000000) #6, !dbg !52
  %574 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %571, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i191 = select i1 %.not1.i190, float %574, float %573, !dbg !52
  %575 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i192 = icmp eq i32 %575, 0, !dbg !52
  %576 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i191, float %571, float 0x3FC10B2820000000) #6, !dbg !52
  %577 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i191, float %571, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i193 = select i1 %.not2.i192, float %577, float %576, !dbg !52
  %578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i194 = icmp eq i32 %578, 0, !dbg !52
  %579 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i193, float %571, float 0xBFD5553DA0000000) #6, !dbg !52
  %580 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i193, float %571, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i195 = select i1 %.not3.i194, float %580, float %579, !dbg !52
  %581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i196 = icmp eq i32 %581, 0, !dbg !52
  %582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i195, float %571, float 0.000000e+00) #6, !dbg !52
  %583 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i195, float %571, float 0.000000e+00) #6, !dbg !52
  %.04.i197 = select i1 %.not4.i196, float %583, float %582, !dbg !52
  %584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i198 = icmp eq i32 %584, 0, !dbg !52
  %585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i197, float %514, float %514) #6, !dbg !52
  %586 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i197, float %514, float %514) #6, !dbg !52
  %.02.i199 = select i1 %.not5.i198, float %586, float %585, !dbg !52
  br label %__nv_tanhf.exit200, !dbg !52

__nv_tanhf.exit200:                               ; preds = %__internal_fmad.exit1.i184, %__internal_fmad.exit3.i189
  %s.1.i188 = phi float [ %570, %__internal_fmad.exit1.i184 ], [ %.02.i199, %__internal_fmad.exit3.i189 ], !dbg !52
  %587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i201 = icmp eq i32 %587, 0, !dbg !52
  %588 = tail call float @llvm.nvvm.fabs.ftz.f(float %515) #6, !dbg !52
  %589 = tail call float @llvm.nvvm.fabs.f(float %515) #6, !dbg !52
  %.01.i202 = select i1 %.not.i201, float %589, float %588, !dbg !52
  %590 = fcmp ult float %.01.i202, 0x3FE3333340000000, !dbg !52
  br i1 %590, label %__internal_fmad.exit3.i208, label %__internal_fmad.exit1.i203, !dbg !52

__internal_fmad.exit1.i203:                       ; preds = %__nv_tanhf.exit200
  %591 = fmul float %.01.i202, 0x4007154760000000, !dbg !52
  %592 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %591) #6, !dbg !52
  %593 = fadd float %592, 1.000000e+00, !dbg !52
  %594 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %593) #7, !dbg !52, !srcloc !25
  %595 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i204 = icmp eq i32 %595, 0, !dbg !52
  %596 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %594, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %597 = tail call float @llvm.nvvm.fma.rn.f(float %594, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i205 = select i1 %.not6.i204, float %597, float %596, !dbg !52
  %598 = fcmp oge float %.01.i202, 0x4022059680000000, !dbg !52
  %s.0.i206 = select i1 %598, float 1.000000e+00, float %.03.i205, !dbg !52
  %599 = bitcast float %s.0.i206 to i32, !dbg !52
  %600 = bitcast float %515 to i32, !dbg !52
  %601 = and i32 %600, -2147483648, !dbg !52
  %602 = or i32 %601, %599, !dbg !52
  %603 = bitcast i32 %602 to float, !dbg !52
  br label %__nv_tanhf.exit219, !dbg !52

__internal_fmad.exit3.i208:                       ; preds = %__nv_tanhf.exit200
  %604 = fmul float %515, %515, !dbg !52
  %605 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i209 = icmp eq i32 %605, 0, !dbg !52
  %606 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %604, float 0xBFAAC795C0000000) #6, !dbg !52
  %607 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %604, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i210 = select i1 %.not1.i209, float %607, float %606, !dbg !52
  %608 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i211 = icmp eq i32 %608, 0, !dbg !52
  %609 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i210, float %604, float 0x3FC10B2820000000) #6, !dbg !52
  %610 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i210, float %604, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i212 = select i1 %.not2.i211, float %610, float %609, !dbg !52
  %611 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i213 = icmp eq i32 %611, 0, !dbg !52
  %612 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i212, float %604, float 0xBFD5553DA0000000) #6, !dbg !52
  %613 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i212, float %604, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i214 = select i1 %.not3.i213, float %613, float %612, !dbg !52
  %614 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i215 = icmp eq i32 %614, 0, !dbg !52
  %615 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i214, float %604, float 0.000000e+00) #6, !dbg !52
  %616 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i214, float %604, float 0.000000e+00) #6, !dbg !52
  %.04.i216 = select i1 %.not4.i215, float %616, float %615, !dbg !52
  %617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i217 = icmp eq i32 %617, 0, !dbg !52
  %618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i216, float %515, float %515) #6, !dbg !52
  %619 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i216, float %515, float %515) #6, !dbg !52
  %.02.i218 = select i1 %.not5.i217, float %619, float %618, !dbg !52
  br label %__nv_tanhf.exit219, !dbg !52

__nv_tanhf.exit219:                               ; preds = %__internal_fmad.exit1.i203, %__internal_fmad.exit3.i208
  %s.1.i207 = phi float [ %603, %__internal_fmad.exit1.i203 ], [ %.02.i218, %__internal_fmad.exit3.i208 ], !dbg !52
  %620 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i220 = icmp eq i32 %620, 0, !dbg !52
  %621 = tail call float @llvm.nvvm.fabs.ftz.f(float %516) #6, !dbg !52
  %622 = tail call float @llvm.nvvm.fabs.f(float %516) #6, !dbg !52
  %.01.i221 = select i1 %.not.i220, float %622, float %621, !dbg !52
  %623 = fcmp ult float %.01.i221, 0x3FE3333340000000, !dbg !52
  br i1 %623, label %__internal_fmad.exit3.i227, label %__internal_fmad.exit1.i222, !dbg !52

__internal_fmad.exit1.i222:                       ; preds = %__nv_tanhf.exit219
  %624 = fmul float %.01.i221, 0x4007154760000000, !dbg !52
  %625 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %624) #6, !dbg !52
  %626 = fadd float %625, 1.000000e+00, !dbg !52
  %627 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %626) #7, !dbg !52, !srcloc !25
  %628 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i223 = icmp eq i32 %628, 0, !dbg !52
  %629 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %627, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %630 = tail call float @llvm.nvvm.fma.rn.f(float %627, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i224 = select i1 %.not6.i223, float %630, float %629, !dbg !52
  %631 = fcmp oge float %.01.i221, 0x4022059680000000, !dbg !52
  %s.0.i225 = select i1 %631, float 1.000000e+00, float %.03.i224, !dbg !52
  %632 = bitcast float %s.0.i225 to i32, !dbg !52
  %633 = bitcast float %516 to i32, !dbg !52
  %634 = and i32 %633, -2147483648, !dbg !52
  %635 = or i32 %634, %632, !dbg !52
  %636 = bitcast i32 %635 to float, !dbg !52
  br label %__nv_tanhf.exit238, !dbg !52

__internal_fmad.exit3.i227:                       ; preds = %__nv_tanhf.exit219
  %637 = fmul float %516, %516, !dbg !52
  %638 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i228 = icmp eq i32 %638, 0, !dbg !52
  %639 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %637, float 0xBFAAC795C0000000) #6, !dbg !52
  %640 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %637, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i229 = select i1 %.not1.i228, float %640, float %639, !dbg !52
  %641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i230 = icmp eq i32 %641, 0, !dbg !52
  %642 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i229, float %637, float 0x3FC10B2820000000) #6, !dbg !52
  %643 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i229, float %637, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i231 = select i1 %.not2.i230, float %643, float %642, !dbg !52
  %644 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i232 = icmp eq i32 %644, 0, !dbg !52
  %645 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i231, float %637, float 0xBFD5553DA0000000) #6, !dbg !52
  %646 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i231, float %637, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i233 = select i1 %.not3.i232, float %646, float %645, !dbg !52
  %647 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i234 = icmp eq i32 %647, 0, !dbg !52
  %648 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i233, float %637, float 0.000000e+00) #6, !dbg !52
  %649 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i233, float %637, float 0.000000e+00) #6, !dbg !52
  %.04.i235 = select i1 %.not4.i234, float %649, float %648, !dbg !52
  %650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i236 = icmp eq i32 %650, 0, !dbg !52
  %651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i235, float %516, float %516) #6, !dbg !52
  %652 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i235, float %516, float %516) #6, !dbg !52
  %.02.i237 = select i1 %.not5.i236, float %652, float %651, !dbg !52
  br label %__nv_tanhf.exit238, !dbg !52

__nv_tanhf.exit238:                               ; preds = %__internal_fmad.exit1.i222, %__internal_fmad.exit3.i227
  %s.1.i226 = phi float [ %636, %__internal_fmad.exit1.i222 ], [ %.02.i237, %__internal_fmad.exit3.i227 ], !dbg !52
  %653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i239 = icmp eq i32 %653, 0, !dbg !52
  %654 = tail call float @llvm.nvvm.fabs.ftz.f(float %517) #6, !dbg !52
  %655 = tail call float @llvm.nvvm.fabs.f(float %517) #6, !dbg !52
  %.01.i240 = select i1 %.not.i239, float %655, float %654, !dbg !52
  %656 = fcmp ult float %.01.i240, 0x3FE3333340000000, !dbg !52
  br i1 %656, label %__internal_fmad.exit3.i246, label %__internal_fmad.exit1.i241, !dbg !52

__internal_fmad.exit1.i241:                       ; preds = %__nv_tanhf.exit238
  %657 = fmul float %.01.i240, 0x4007154760000000, !dbg !52
  %658 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %657) #6, !dbg !52
  %659 = fadd float %658, 1.000000e+00, !dbg !52
  %660 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %659) #7, !dbg !52, !srcloc !25
  %661 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i242 = icmp eq i32 %661, 0, !dbg !52
  %662 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %660, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %663 = tail call float @llvm.nvvm.fma.rn.f(float %660, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i243 = select i1 %.not6.i242, float %663, float %662, !dbg !52
  %664 = fcmp oge float %.01.i240, 0x4022059680000000, !dbg !52
  %s.0.i244 = select i1 %664, float 1.000000e+00, float %.03.i243, !dbg !52
  %665 = bitcast float %s.0.i244 to i32, !dbg !52
  %666 = bitcast float %517 to i32, !dbg !52
  %667 = and i32 %666, -2147483648, !dbg !52
  %668 = or i32 %667, %665, !dbg !52
  %669 = bitcast i32 %668 to float, !dbg !52
  br label %__nv_tanhf.exit257, !dbg !52

__internal_fmad.exit3.i246:                       ; preds = %__nv_tanhf.exit238
  %670 = fmul float %517, %517, !dbg !52
  %671 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i247 = icmp eq i32 %671, 0, !dbg !52
  %672 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %670, float 0xBFAAC795C0000000) #6, !dbg !52
  %673 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %670, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i248 = select i1 %.not1.i247, float %673, float %672, !dbg !52
  %674 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i249 = icmp eq i32 %674, 0, !dbg !52
  %675 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i248, float %670, float 0x3FC10B2820000000) #6, !dbg !52
  %676 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i248, float %670, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i250 = select i1 %.not2.i249, float %676, float %675, !dbg !52
  %677 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i251 = icmp eq i32 %677, 0, !dbg !52
  %678 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i250, float %670, float 0xBFD5553DA0000000) #6, !dbg !52
  %679 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i250, float %670, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i252 = select i1 %.not3.i251, float %679, float %678, !dbg !52
  %680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i253 = icmp eq i32 %680, 0, !dbg !52
  %681 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i252, float %670, float 0.000000e+00) #6, !dbg !52
  %682 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i252, float %670, float 0.000000e+00) #6, !dbg !52
  %.04.i254 = select i1 %.not4.i253, float %682, float %681, !dbg !52
  %683 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i255 = icmp eq i32 %683, 0, !dbg !52
  %684 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i254, float %517, float %517) #6, !dbg !52
  %685 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i254, float %517, float %517) #6, !dbg !52
  %.02.i256 = select i1 %.not5.i255, float %685, float %684, !dbg !52
  br label %__nv_tanhf.exit257, !dbg !52

__nv_tanhf.exit257:                               ; preds = %__internal_fmad.exit1.i241, %__internal_fmad.exit3.i246
  %s.1.i245 = phi float [ %669, %__internal_fmad.exit1.i241 ], [ %.02.i256, %__internal_fmad.exit3.i246 ], !dbg !52
  %686 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i258 = icmp eq i32 %686, 0, !dbg !52
  %687 = tail call float @llvm.nvvm.fabs.ftz.f(float %518) #6, !dbg !52
  %688 = tail call float @llvm.nvvm.fabs.f(float %518) #6, !dbg !52
  %.01.i259 = select i1 %.not.i258, float %688, float %687, !dbg !52
  %689 = fcmp ult float %.01.i259, 0x3FE3333340000000, !dbg !52
  br i1 %689, label %__internal_fmad.exit3.i265, label %__internal_fmad.exit1.i260, !dbg !52

__internal_fmad.exit1.i260:                       ; preds = %__nv_tanhf.exit257
  %690 = fmul float %.01.i259, 0x4007154760000000, !dbg !52
  %691 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %690) #6, !dbg !52
  %692 = fadd float %691, 1.000000e+00, !dbg !52
  %693 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %692) #7, !dbg !52, !srcloc !25
  %694 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i261 = icmp eq i32 %694, 0, !dbg !52
  %695 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %693, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %696 = tail call float @llvm.nvvm.fma.rn.f(float %693, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i262 = select i1 %.not6.i261, float %696, float %695, !dbg !52
  %697 = fcmp oge float %.01.i259, 0x4022059680000000, !dbg !52
  %s.0.i263 = select i1 %697, float 1.000000e+00, float %.03.i262, !dbg !52
  %698 = bitcast float %s.0.i263 to i32, !dbg !52
  %699 = bitcast float %518 to i32, !dbg !52
  %700 = and i32 %699, -2147483648, !dbg !52
  %701 = or i32 %700, %698, !dbg !52
  %702 = bitcast i32 %701 to float, !dbg !52
  br label %__nv_tanhf.exit276, !dbg !52

__internal_fmad.exit3.i265:                       ; preds = %__nv_tanhf.exit257
  %703 = fmul float %518, %518, !dbg !52
  %704 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i266 = icmp eq i32 %704, 0, !dbg !52
  %705 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %703, float 0xBFAAC795C0000000) #6, !dbg !52
  %706 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %703, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i267 = select i1 %.not1.i266, float %706, float %705, !dbg !52
  %707 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i268 = icmp eq i32 %707, 0, !dbg !52
  %708 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i267, float %703, float 0x3FC10B2820000000) #6, !dbg !52
  %709 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i267, float %703, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i269 = select i1 %.not2.i268, float %709, float %708, !dbg !52
  %710 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i270 = icmp eq i32 %710, 0, !dbg !52
  %711 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i269, float %703, float 0xBFD5553DA0000000) #6, !dbg !52
  %712 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i269, float %703, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i271 = select i1 %.not3.i270, float %712, float %711, !dbg !52
  %713 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i272 = icmp eq i32 %713, 0, !dbg !52
  %714 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i271, float %703, float 0.000000e+00) #6, !dbg !52
  %715 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i271, float %703, float 0.000000e+00) #6, !dbg !52
  %.04.i273 = select i1 %.not4.i272, float %715, float %714, !dbg !52
  %716 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i274 = icmp eq i32 %716, 0, !dbg !52
  %717 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i273, float %518, float %518) #6, !dbg !52
  %718 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i273, float %518, float %518) #6, !dbg !52
  %.02.i275 = select i1 %.not5.i274, float %718, float %717, !dbg !52
  br label %__nv_tanhf.exit276, !dbg !52

__nv_tanhf.exit276:                               ; preds = %__internal_fmad.exit1.i260, %__internal_fmad.exit3.i265
  %s.1.i264 = phi float [ %702, %__internal_fmad.exit1.i260 ], [ %.02.i275, %__internal_fmad.exit3.i265 ], !dbg !52
  %719 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i277 = icmp eq i32 %719, 0, !dbg !52
  %720 = tail call float @llvm.nvvm.fabs.ftz.f(float %519) #6, !dbg !52
  %721 = tail call float @llvm.nvvm.fabs.f(float %519) #6, !dbg !52
  %.01.i278 = select i1 %.not.i277, float %721, float %720, !dbg !52
  %722 = fcmp ult float %.01.i278, 0x3FE3333340000000, !dbg !52
  br i1 %722, label %__internal_fmad.exit3.i284, label %__internal_fmad.exit1.i279, !dbg !52

__internal_fmad.exit1.i279:                       ; preds = %__nv_tanhf.exit276
  %723 = fmul float %.01.i278, 0x4007154760000000, !dbg !52
  %724 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %723) #6, !dbg !52
  %725 = fadd float %724, 1.000000e+00, !dbg !52
  %726 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %725) #7, !dbg !52, !srcloc !25
  %727 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i280 = icmp eq i32 %727, 0, !dbg !52
  %728 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %726, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %729 = tail call float @llvm.nvvm.fma.rn.f(float %726, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i281 = select i1 %.not6.i280, float %729, float %728, !dbg !52
  %730 = fcmp oge float %.01.i278, 0x4022059680000000, !dbg !52
  %s.0.i282 = select i1 %730, float 1.000000e+00, float %.03.i281, !dbg !52
  %731 = bitcast float %s.0.i282 to i32, !dbg !52
  %732 = bitcast float %519 to i32, !dbg !52
  %733 = and i32 %732, -2147483648, !dbg !52
  %734 = or i32 %733, %731, !dbg !52
  %735 = bitcast i32 %734 to float, !dbg !52
  br label %__nv_tanhf.exit295, !dbg !52

__internal_fmad.exit3.i284:                       ; preds = %__nv_tanhf.exit276
  %736 = fmul float %519, %519, !dbg !52
  %737 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i285 = icmp eq i32 %737, 0, !dbg !52
  %738 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %736, float 0xBFAAC795C0000000) #6, !dbg !52
  %739 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %736, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i286 = select i1 %.not1.i285, float %739, float %738, !dbg !52
  %740 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i287 = icmp eq i32 %740, 0, !dbg !52
  %741 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i286, float %736, float 0x3FC10B2820000000) #6, !dbg !52
  %742 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i286, float %736, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i288 = select i1 %.not2.i287, float %742, float %741, !dbg !52
  %743 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i289 = icmp eq i32 %743, 0, !dbg !52
  %744 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i288, float %736, float 0xBFD5553DA0000000) #6, !dbg !52
  %745 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i288, float %736, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i290 = select i1 %.not3.i289, float %745, float %744, !dbg !52
  %746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i291 = icmp eq i32 %746, 0, !dbg !52
  %747 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i290, float %736, float 0.000000e+00) #6, !dbg !52
  %748 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i290, float %736, float 0.000000e+00) #6, !dbg !52
  %.04.i292 = select i1 %.not4.i291, float %748, float %747, !dbg !52
  %749 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i293 = icmp eq i32 %749, 0, !dbg !52
  %750 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i292, float %519, float %519) #6, !dbg !52
  %751 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i292, float %519, float %519) #6, !dbg !52
  %.02.i294 = select i1 %.not5.i293, float %751, float %750, !dbg !52
  br label %__nv_tanhf.exit295, !dbg !52

__nv_tanhf.exit295:                               ; preds = %__internal_fmad.exit1.i279, %__internal_fmad.exit3.i284
  %s.1.i283 = phi float [ %735, %__internal_fmad.exit1.i279 ], [ %.02.i294, %__internal_fmad.exit3.i284 ], !dbg !52
  %752 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i296 = icmp eq i32 %752, 0, !dbg !52
  %753 = tail call float @llvm.nvvm.fabs.ftz.f(float %520) #6, !dbg !52
  %754 = tail call float @llvm.nvvm.fabs.f(float %520) #6, !dbg !52
  %.01.i297 = select i1 %.not.i296, float %754, float %753, !dbg !52
  %755 = fcmp ult float %.01.i297, 0x3FE3333340000000, !dbg !52
  br i1 %755, label %__internal_fmad.exit3.i303, label %__internal_fmad.exit1.i298, !dbg !52

__internal_fmad.exit1.i298:                       ; preds = %__nv_tanhf.exit295
  %756 = fmul float %.01.i297, 0x4007154760000000, !dbg !52
  %757 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %756) #6, !dbg !52
  %758 = fadd float %757, 1.000000e+00, !dbg !52
  %759 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %758) #7, !dbg !52, !srcloc !25
  %760 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i299 = icmp eq i32 %760, 0, !dbg !52
  %761 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %759, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %762 = tail call float @llvm.nvvm.fma.rn.f(float %759, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i300 = select i1 %.not6.i299, float %762, float %761, !dbg !52
  %763 = fcmp oge float %.01.i297, 0x4022059680000000, !dbg !52
  %s.0.i301 = select i1 %763, float 1.000000e+00, float %.03.i300, !dbg !52
  %764 = bitcast float %s.0.i301 to i32, !dbg !52
  %765 = bitcast float %520 to i32, !dbg !52
  %766 = and i32 %765, -2147483648, !dbg !52
  %767 = or i32 %766, %764, !dbg !52
  %768 = bitcast i32 %767 to float, !dbg !52
  br label %__nv_tanhf.exit314, !dbg !52

__internal_fmad.exit3.i303:                       ; preds = %__nv_tanhf.exit295
  %769 = fmul float %520, %520, !dbg !52
  %770 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i304 = icmp eq i32 %770, 0, !dbg !52
  %771 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %769, float 0xBFAAC795C0000000) #6, !dbg !52
  %772 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %769, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i305 = select i1 %.not1.i304, float %772, float %771, !dbg !52
  %773 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i306 = icmp eq i32 %773, 0, !dbg !52
  %774 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i305, float %769, float 0x3FC10B2820000000) #6, !dbg !52
  %775 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i305, float %769, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i307 = select i1 %.not2.i306, float %775, float %774, !dbg !52
  %776 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i308 = icmp eq i32 %776, 0, !dbg !52
  %777 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i307, float %769, float 0xBFD5553DA0000000) #6, !dbg !52
  %778 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i307, float %769, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i309 = select i1 %.not3.i308, float %778, float %777, !dbg !52
  %779 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i310 = icmp eq i32 %779, 0, !dbg !52
  %780 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i309, float %769, float 0.000000e+00) #6, !dbg !52
  %781 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i309, float %769, float 0.000000e+00) #6, !dbg !52
  %.04.i311 = select i1 %.not4.i310, float %781, float %780, !dbg !52
  %782 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i312 = icmp eq i32 %782, 0, !dbg !52
  %783 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i311, float %520, float %520) #6, !dbg !52
  %784 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i311, float %520, float %520) #6, !dbg !52
  %.02.i313 = select i1 %.not5.i312, float %784, float %783, !dbg !52
  br label %__nv_tanhf.exit314, !dbg !52

__nv_tanhf.exit314:                               ; preds = %__internal_fmad.exit1.i298, %__internal_fmad.exit3.i303
  %s.1.i302 = phi float [ %768, %__internal_fmad.exit1.i298 ], [ %.02.i313, %__internal_fmad.exit3.i303 ], !dbg !52
  %785 = fmul float %s.1.i169, 5.000000e+01, !dbg !53
  %786 = fmul float %s.1.i188, 5.000000e+01, !dbg !53
  %787 = fmul float %s.1.i207, 5.000000e+01, !dbg !53
  %788 = fmul float %s.1.i226, 5.000000e+01, !dbg !53
  %789 = fmul float %s.1.i245, 5.000000e+01, !dbg !53
  %790 = fmul float %s.1.i264, 5.000000e+01, !dbg !53
  %791 = fmul float %s.1.i283, 5.000000e+01, !dbg !53
  %792 = fmul float %s.1.i302, 5.000000e+01, !dbg !53
  %793 = icmp sgt i64 %475, %.sext, !dbg !54
  %794 = icmp sgt i64 %476, %.sext, !dbg !54
  %795 = icmp sgt i64 %477, %.sext, !dbg !54
  %796 = icmp sgt i64 %478, %.sext, !dbg !54
  %797 = icmp sgt i64 %479, %.sext, !dbg !54
  %798 = icmp sgt i64 %480, %.sext, !dbg !54
  %799 = icmp sgt i64 %481, %.sext, !dbg !54
  %800 = icmp sgt i64 %482, %.sext, !dbg !54
  %801 = select i1 %793, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !55
  %802 = select i1 %794, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !55
  %803 = select i1 %795, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !55
  %804 = select i1 %796, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !55
  %805 = select i1 %797, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !55
  %806 = select i1 %798, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !55
  %807 = select i1 %799, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !55
  %808 = select i1 %800, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !55
  %809 = fadd float %801, %785, !dbg !56
  %810 = fadd float %802, %786, !dbg !56
  %811 = fadd float %803, %787, !dbg !56
  %812 = fadd float %804, %788, !dbg !56
  %813 = fadd float %805, %789, !dbg !56
  %814 = fadd float %806, %790, !dbg !56
  %815 = fadd float %807, %791, !dbg !56
  %816 = fadd float %808, %792, !dbg !56
  %817 = fsub float %809, %462, !dbg !57
  %818 = fsub float %810, %462, !dbg !57
  %819 = fsub float %811, %462, !dbg !57
  %820 = fsub float %812, %462, !dbg !57
  %821 = fsub float %813, %462, !dbg !57
  %822 = fsub float %814, %462, !dbg !57
  %823 = fsub float %815, %462, !dbg !57
  %824 = fsub float %816, %462, !dbg !57
  %825 = fmul float %817, 0x3FF7154760000000, !dbg !58
  %826 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %825) #6, !dbg !58
  %827 = fmul float %818, 0x3FF7154760000000, !dbg !58
  %828 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %827) #6, !dbg !58
  %829 = fmul float %819, 0x3FF7154760000000, !dbg !58
  %830 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %829) #6, !dbg !58
  %831 = fmul float %820, 0x3FF7154760000000, !dbg !58
  %832 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %831) #6, !dbg !58
  %833 = fmul float %821, 0x3FF7154760000000, !dbg !58
  %834 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %833) #6, !dbg !58
  %835 = fmul float %822, 0x3FF7154760000000, !dbg !58
  %836 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %835) #6, !dbg !58
  %837 = fmul float %823, 0x3FF7154760000000, !dbg !58
  %838 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %837) #6, !dbg !58
  %839 = fmul float %824, 0x3FF7154760000000, !dbg !58
  %840 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %839) #6, !dbg !58
  %841 = insertelement <8 x i1> poison, i1 %483, i64 0, !dbg !59
  %842 = shufflevector <8 x i1> %841, <8 x i1> poison, <8 x i32> zeroinitializer, !dbg !59
  %843 = insertelement <8 x float> poison, float %826, i64 0, !dbg !59
  %844 = insertelement <8 x float> %843, float %828, i64 1, !dbg !59
  %845 = insertelement <8 x float> %844, float %830, i64 2, !dbg !59
  %846 = insertelement <8 x float> %845, float %832, i64 3, !dbg !59
  %847 = insertelement <8 x float> %846, float %834, i64 4, !dbg !59
  %848 = insertelement <8 x float> %847, float %836, i64 5, !dbg !59
  %849 = insertelement <8 x float> %848, float %838, i64 6, !dbg !59
  %850 = insertelement <8 x float> %849, float %840, i64 7, !dbg !59
  %851 = select <8 x i1> %842, <8 x float> %850, <8 x float> <float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00>, !dbg !59
  %852 = fadd <8 x float> %473, %851, !dbg !59
  %853 = add nuw nsw i32 %472, 2048, !dbg !45
  %854 = icmp ult i32 %472, 6144, !dbg !45
  br i1 %854, label %471, label %855, !dbg !45

855:                                              ; preds = %__nv_tanhf.exit314
  tail call void @llvm.nvvm.barrier0(), !dbg !60
  %shift = shufflevector <8 x float> %852, <8 x float> poison, <8 x i32> <i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !64
  %856 = fadd <8 x float> %852, %shift, !dbg !64
  %shift515 = shufflevector <8 x float> %852, <8 x float> poison, <8 x i32> <i32 2, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !64
  %857 = fadd <8 x float> %shift515, %856, !dbg !64
  %shift516 = shufflevector <8 x float> %852, <8 x float> poison, <8 x i32> <i32 3, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !64
  %858 = fadd <8 x float> %shift516, %857, !dbg !64
  %shift517 = shufflevector <8 x float> %852, <8 x float> poison, <8 x i32> <i32 4, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !64
  %859 = fadd <8 x float> %shift517, %858, !dbg !64
  %shift518 = shufflevector <8 x float> %852, <8 x float> poison, <8 x i32> <i32 5, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !64
  %860 = fadd <8 x float> %shift518, %859, !dbg !64
  %shift519 = shufflevector <8 x float> %852, <8 x float> poison, <8 x i32> <i32 6, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !64
  %861 = fadd <8 x float> %shift519, %860, !dbg !64
  %shift520 = shufflevector <8 x float> %852, <8 x float> poison, <8 x i32> <i32 7, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !64
  %862 = fadd <8 x float> %shift520, %861, !dbg !64
  %863 = extractelement <8 x float> %862, i64 0, !dbg !64
  %864 = bitcast float %863 to i32, !dbg !60
  %865 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %864, i32 16, i32 31), !dbg !60
  %866 = bitcast i32 %865 to float, !dbg !60
  %867 = fadd float %863, %866, !dbg !64
  %868 = bitcast float %867 to i32, !dbg !60
  %869 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %868, i32 8, i32 31), !dbg !60
  %870 = bitcast i32 %869 to float, !dbg !60
  %871 = fadd float %867, %870, !dbg !64
  %872 = bitcast float %871 to i32, !dbg !60
  %873 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %872, i32 4, i32 31), !dbg !60
  %874 = bitcast i32 %873 to float, !dbg !60
  %875 = fadd float %871, %874, !dbg !64
  %876 = bitcast float %875 to i32, !dbg !60
  %877 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %876, i32 2, i32 31), !dbg !60
  %878 = bitcast i32 %877 to float, !dbg !60
  %879 = fadd float %875, %878, !dbg !64
  %880 = bitcast float %879 to i32, !dbg !60
  %881 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %880, i32 1, i32 31), !dbg !60
  %882 = bitcast i32 %881 to float, !dbg !60
  %883 = fadd float %879, %882, !dbg !64
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %433, float %883, i1 %431) #6, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !60
  %884 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %436, i1 %434) #6, !dbg !60
  %885 = bitcast float %884 to i32, !dbg !60
  %886 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %885, i32 4, i32 31), !dbg !60
  %887 = bitcast i32 %886 to float, !dbg !60
  %888 = fadd float %884, %887, !dbg !64
  %889 = bitcast float %888 to i32, !dbg !60
  %890 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %889, i32 2, i32 31), !dbg !60
  %891 = bitcast i32 %890 to float, !dbg !60
  %892 = fadd float %888, %891, !dbg !64
  %893 = bitcast float %892 to i32, !dbg !60
  %894 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %893, i32 1, i32 31), !dbg !60
  %895 = bitcast i32 %894 to float, !dbg !60
  %896 = fadd float %892, %895, !dbg !64
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %436, float %896, i1 %461) #6, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !60
  %897 = load float, ptr addrspace(3) @global_smem, align 4, !dbg !60
  br label %898, !dbg !68

898:                                              ; preds = %855, %__nv_tanhf.exit162
  %899 = phi i32 [ 0, %855 ], [ %1298, %__nv_tanhf.exit162 ]
  %900 = zext nneg i32 %899 to i64, !dbg !69
  %901 = or i64 %470, %900, !dbg !69
  %902 = or i64 %469, %900, !dbg !69
  %903 = or i64 %468, %900, !dbg !69
  %904 = or i64 %467, %900, !dbg !69
  %905 = or i64 %466, %900, !dbg !69
  %906 = or i64 %465, %900, !dbg !69
  %907 = or i64 %464, %900, !dbg !69
  %908 = or i64 %463, %900, !dbg !69
  %909 = icmp ult i64 %901, 8192, !dbg !70
  %910 = add nsw i64 %901, %23, !dbg !71
  %911 = getelementptr i16, ptr addrspace(1) %0, i64 %910, !dbg !72
  %912 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %911, i1 %909, i32 0, i1 %909, i32 0, i1 %909, i32 0, i1 %909, i32 0, i1 %909) #6, !dbg !73
  %913 = extractvalue { i32, i32, i32, i32 } %912, 0, !dbg !73
  %914 = extractvalue { i32, i32, i32, i32 } %912, 1, !dbg !73
  %915 = extractvalue { i32, i32, i32, i32 } %912, 2, !dbg !73
  %916 = extractvalue { i32, i32, i32, i32 } %912, 3, !dbg !73
  %917 = trunc i32 %913 to i16, !dbg !73
  %extelt.offset = lshr i32 %913, 16, !dbg !73
  %918 = trunc i32 %extelt.offset to i16, !dbg !73
  %919 = trunc i32 %914 to i16, !dbg !73
  %extelt.offset3 = lshr i32 %914, 16, !dbg !73
  %920 = trunc i32 %extelt.offset3 to i16, !dbg !73
  %921 = trunc i32 %915 to i16, !dbg !73
  %extelt.offset4 = lshr i32 %915, 16, !dbg !73
  %922 = trunc i32 %extelt.offset4 to i16, !dbg !73
  %923 = trunc i32 %916 to i16, !dbg !73
  %extelt.offset5 = lshr i32 %916, 16, !dbg !73
  %924 = trunc i32 %extelt.offset5 to i16, !dbg !73
  %925 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %917) #6, !dbg !74
  %926 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %918) #6, !dbg !74
  %927 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %919) #6, !dbg !74
  %928 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %920) #6, !dbg !74
  %929 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %921) #6, !dbg !74
  %930 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %922) #6, !dbg !74
  %931 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %923) #6, !dbg !74
  %932 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %924) #6, !dbg !74
  %933 = fmul float %925, 6.250000e-02, !dbg !75
  %934 = fmul float %926, 6.250000e-02, !dbg !75
  %935 = fmul float %927, 6.250000e-02, !dbg !75
  %936 = fmul float %928, 6.250000e-02, !dbg !75
  %937 = fmul float %929, 6.250000e-02, !dbg !75
  %938 = fmul float %930, 6.250000e-02, !dbg !75
  %939 = fmul float %931, 6.250000e-02, !dbg !75
  %940 = fmul float %932, 6.250000e-02, !dbg !75
  %941 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %933, float 5.000000e+01) #6, !dbg !76
  %942 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %934, float 5.000000e+01) #6, !dbg !76
  %943 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %935, float 5.000000e+01) #6, !dbg !76
  %944 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %936, float 5.000000e+01) #6, !dbg !76
  %945 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %937, float 5.000000e+01) #6, !dbg !76
  %946 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %938, float 5.000000e+01) #6, !dbg !76
  %947 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %939, float 5.000000e+01) #6, !dbg !76
  %948 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %940, float 5.000000e+01) #6, !dbg !76
  %949 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not.i = icmp eq i32 %949, 0, !dbg !77
  %950 = tail call float @llvm.nvvm.fabs.ftz.f(float %941) #6, !dbg !77
  %951 = tail call float @llvm.nvvm.fabs.f(float %941) #6, !dbg !77
  %.01.i = select i1 %.not.i, float %951, float %950, !dbg !77
  %952 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !77
  br i1 %952, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !77

__internal_fmad.exit1.i:                          ; preds = %898
  %953 = fmul float %.01.i, 0x4007154760000000, !dbg !77
  %954 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %953) #6, !dbg !77
  %955 = fadd float %954, 1.000000e+00, !dbg !77
  %956 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %955) #7, !dbg !77, !srcloc !25
  %957 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not6.i = icmp eq i32 %957, 0, !dbg !77
  %958 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %956, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %959 = tail call float @llvm.nvvm.fma.rn.f(float %956, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %.03.i = select i1 %.not6.i, float %959, float %958, !dbg !77
  %960 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !77
  %s.0.i = select i1 %960, float 1.000000e+00, float %.03.i, !dbg !77
  %961 = bitcast float %s.0.i to i32, !dbg !77
  %962 = bitcast float %941 to i32, !dbg !77
  %963 = and i32 %962, -2147483648, !dbg !77
  %964 = or i32 %963, %961, !dbg !77
  %965 = bitcast i32 %964 to float, !dbg !77
  br label %__nv_tanhf.exit, !dbg !77

__internal_fmad.exit3.i:                          ; preds = %898
  %966 = fmul float %941, %941, !dbg !77
  %967 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not1.i = icmp eq i32 %967, 0, !dbg !77
  %968 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %966, float 0xBFAAC795C0000000) #6, !dbg !77
  %969 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %966, float 0xBFAAC795C0000000) #6, !dbg !77
  %.06.i = select i1 %.not1.i, float %969, float %968, !dbg !77
  %970 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not2.i = icmp eq i32 %970, 0, !dbg !77
  %971 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %966, float 0x3FC10B2820000000) #6, !dbg !77
  %972 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %966, float 0x3FC10B2820000000) #6, !dbg !77
  %.05.i = select i1 %.not2.i, float %972, float %971, !dbg !77
  %973 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not3.i = icmp eq i32 %973, 0, !dbg !77
  %974 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %966, float 0xBFD5553DA0000000) #6, !dbg !77
  %975 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %966, float 0xBFD5553DA0000000) #6, !dbg !77
  %.0.i = select i1 %.not3.i, float %975, float %974, !dbg !77
  %976 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not4.i = icmp eq i32 %976, 0, !dbg !77
  %977 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %966, float 0.000000e+00) #6, !dbg !77
  %978 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %966, float 0.000000e+00) #6, !dbg !77
  %.04.i = select i1 %.not4.i, float %978, float %977, !dbg !77
  %979 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not5.i = icmp eq i32 %979, 0, !dbg !77
  %980 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %941, float %941) #6, !dbg !77
  %981 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %941, float %941) #6, !dbg !77
  %.02.i = select i1 %.not5.i, float %981, float %980, !dbg !77
  br label %__nv_tanhf.exit, !dbg !77

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %965, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !77
  %982 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not.i30 = icmp eq i32 %982, 0, !dbg !77
  %983 = tail call float @llvm.nvvm.fabs.ftz.f(float %942) #6, !dbg !77
  %984 = tail call float @llvm.nvvm.fabs.f(float %942) #6, !dbg !77
  %.01.i31 = select i1 %.not.i30, float %984, float %983, !dbg !77
  %985 = fcmp ult float %.01.i31, 0x3FE3333340000000, !dbg !77
  br i1 %985, label %__internal_fmad.exit3.i37, label %__internal_fmad.exit1.i32, !dbg !77

__internal_fmad.exit1.i32:                        ; preds = %__nv_tanhf.exit
  %986 = fmul float %.01.i31, 0x4007154760000000, !dbg !77
  %987 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %986) #6, !dbg !77
  %988 = fadd float %987, 1.000000e+00, !dbg !77
  %989 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %988) #7, !dbg !77, !srcloc !25
  %990 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not6.i33 = icmp eq i32 %990, 0, !dbg !77
  %991 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %989, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %992 = tail call float @llvm.nvvm.fma.rn.f(float %989, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %.03.i34 = select i1 %.not6.i33, float %992, float %991, !dbg !77
  %993 = fcmp oge float %.01.i31, 0x4022059680000000, !dbg !77
  %s.0.i35 = select i1 %993, float 1.000000e+00, float %.03.i34, !dbg !77
  %994 = bitcast float %s.0.i35 to i32, !dbg !77
  %995 = bitcast float %942 to i32, !dbg !77
  %996 = and i32 %995, -2147483648, !dbg !77
  %997 = or i32 %996, %994, !dbg !77
  %998 = bitcast i32 %997 to float, !dbg !77
  br label %__nv_tanhf.exit48, !dbg !77

__internal_fmad.exit3.i37:                        ; preds = %__nv_tanhf.exit
  %999 = fmul float %942, %942, !dbg !77
  %1000 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not1.i38 = icmp eq i32 %1000, 0, !dbg !77
  %1001 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %999, float 0xBFAAC795C0000000) #6, !dbg !77
  %1002 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %999, float 0xBFAAC795C0000000) #6, !dbg !77
  %.06.i39 = select i1 %.not1.i38, float %1002, float %1001, !dbg !77
  %1003 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not2.i40 = icmp eq i32 %1003, 0, !dbg !77
  %1004 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i39, float %999, float 0x3FC10B2820000000) #6, !dbg !77
  %1005 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i39, float %999, float 0x3FC10B2820000000) #6, !dbg !77
  %.05.i41 = select i1 %.not2.i40, float %1005, float %1004, !dbg !77
  %1006 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not3.i42 = icmp eq i32 %1006, 0, !dbg !77
  %1007 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i41, float %999, float 0xBFD5553DA0000000) #6, !dbg !77
  %1008 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i41, float %999, float 0xBFD5553DA0000000) #6, !dbg !77
  %.0.i43 = select i1 %.not3.i42, float %1008, float %1007, !dbg !77
  %1009 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not4.i44 = icmp eq i32 %1009, 0, !dbg !77
  %1010 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i43, float %999, float 0.000000e+00) #6, !dbg !77
  %1011 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i43, float %999, float 0.000000e+00) #6, !dbg !77
  %.04.i45 = select i1 %.not4.i44, float %1011, float %1010, !dbg !77
  %1012 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not5.i46 = icmp eq i32 %1012, 0, !dbg !77
  %1013 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i45, float %942, float %942) #6, !dbg !77
  %1014 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i45, float %942, float %942) #6, !dbg !77
  %.02.i47 = select i1 %.not5.i46, float %1014, float %1013, !dbg !77
  br label %__nv_tanhf.exit48, !dbg !77

__nv_tanhf.exit48:                                ; preds = %__internal_fmad.exit1.i32, %__internal_fmad.exit3.i37
  %s.1.i36 = phi float [ %998, %__internal_fmad.exit1.i32 ], [ %.02.i47, %__internal_fmad.exit3.i37 ], !dbg !77
  %1015 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not.i49 = icmp eq i32 %1015, 0, !dbg !77
  %1016 = tail call float @llvm.nvvm.fabs.ftz.f(float %943) #6, !dbg !77
  %1017 = tail call float @llvm.nvvm.fabs.f(float %943) #6, !dbg !77
  %.01.i50 = select i1 %.not.i49, float %1017, float %1016, !dbg !77
  %1018 = fcmp ult float %.01.i50, 0x3FE3333340000000, !dbg !77
  br i1 %1018, label %__internal_fmad.exit3.i56, label %__internal_fmad.exit1.i51, !dbg !77

__internal_fmad.exit1.i51:                        ; preds = %__nv_tanhf.exit48
  %1019 = fmul float %.01.i50, 0x4007154760000000, !dbg !77
  %1020 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1019) #6, !dbg !77
  %1021 = fadd float %1020, 1.000000e+00, !dbg !77
  %1022 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1021) #7, !dbg !77, !srcloc !25
  %1023 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not6.i52 = icmp eq i32 %1023, 0, !dbg !77
  %1024 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1022, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %1025 = tail call float @llvm.nvvm.fma.rn.f(float %1022, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %.03.i53 = select i1 %.not6.i52, float %1025, float %1024, !dbg !77
  %1026 = fcmp oge float %.01.i50, 0x4022059680000000, !dbg !77
  %s.0.i54 = select i1 %1026, float 1.000000e+00, float %.03.i53, !dbg !77
  %1027 = bitcast float %s.0.i54 to i32, !dbg !77
  %1028 = bitcast float %943 to i32, !dbg !77
  %1029 = and i32 %1028, -2147483648, !dbg !77
  %1030 = or i32 %1029, %1027, !dbg !77
  %1031 = bitcast i32 %1030 to float, !dbg !77
  br label %__nv_tanhf.exit67, !dbg !77

__internal_fmad.exit3.i56:                        ; preds = %__nv_tanhf.exit48
  %1032 = fmul float %943, %943, !dbg !77
  %1033 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not1.i57 = icmp eq i32 %1033, 0, !dbg !77
  %1034 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1032, float 0xBFAAC795C0000000) #6, !dbg !77
  %1035 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1032, float 0xBFAAC795C0000000) #6, !dbg !77
  %.06.i58 = select i1 %.not1.i57, float %1035, float %1034, !dbg !77
  %1036 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not2.i59 = icmp eq i32 %1036, 0, !dbg !77
  %1037 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i58, float %1032, float 0x3FC10B2820000000) #6, !dbg !77
  %1038 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i58, float %1032, float 0x3FC10B2820000000) #6, !dbg !77
  %.05.i60 = select i1 %.not2.i59, float %1038, float %1037, !dbg !77
  %1039 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not3.i61 = icmp eq i32 %1039, 0, !dbg !77
  %1040 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i60, float %1032, float 0xBFD5553DA0000000) #6, !dbg !77
  %1041 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i60, float %1032, float 0xBFD5553DA0000000) #6, !dbg !77
  %.0.i62 = select i1 %.not3.i61, float %1041, float %1040, !dbg !77
  %1042 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not4.i63 = icmp eq i32 %1042, 0, !dbg !77
  %1043 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i62, float %1032, float 0.000000e+00) #6, !dbg !77
  %1044 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i62, float %1032, float 0.000000e+00) #6, !dbg !77
  %.04.i64 = select i1 %.not4.i63, float %1044, float %1043, !dbg !77
  %1045 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not5.i65 = icmp eq i32 %1045, 0, !dbg !77
  %1046 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i64, float %943, float %943) #6, !dbg !77
  %1047 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i64, float %943, float %943) #6, !dbg !77
  %.02.i66 = select i1 %.not5.i65, float %1047, float %1046, !dbg !77
  br label %__nv_tanhf.exit67, !dbg !77

__nv_tanhf.exit67:                                ; preds = %__internal_fmad.exit1.i51, %__internal_fmad.exit3.i56
  %s.1.i55 = phi float [ %1031, %__internal_fmad.exit1.i51 ], [ %.02.i66, %__internal_fmad.exit3.i56 ], !dbg !77
  %1048 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not.i68 = icmp eq i32 %1048, 0, !dbg !77
  %1049 = tail call float @llvm.nvvm.fabs.ftz.f(float %944) #6, !dbg !77
  %1050 = tail call float @llvm.nvvm.fabs.f(float %944) #6, !dbg !77
  %.01.i69 = select i1 %.not.i68, float %1050, float %1049, !dbg !77
  %1051 = fcmp ult float %.01.i69, 0x3FE3333340000000, !dbg !77
  br i1 %1051, label %__internal_fmad.exit3.i75, label %__internal_fmad.exit1.i70, !dbg !77

__internal_fmad.exit1.i70:                        ; preds = %__nv_tanhf.exit67
  %1052 = fmul float %.01.i69, 0x4007154760000000, !dbg !77
  %1053 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1052) #6, !dbg !77
  %1054 = fadd float %1053, 1.000000e+00, !dbg !77
  %1055 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1054) #7, !dbg !77, !srcloc !25
  %1056 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not6.i71 = icmp eq i32 %1056, 0, !dbg !77
  %1057 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1055, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %1058 = tail call float @llvm.nvvm.fma.rn.f(float %1055, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %.03.i72 = select i1 %.not6.i71, float %1058, float %1057, !dbg !77
  %1059 = fcmp oge float %.01.i69, 0x4022059680000000, !dbg !77
  %s.0.i73 = select i1 %1059, float 1.000000e+00, float %.03.i72, !dbg !77
  %1060 = bitcast float %s.0.i73 to i32, !dbg !77
  %1061 = bitcast float %944 to i32, !dbg !77
  %1062 = and i32 %1061, -2147483648, !dbg !77
  %1063 = or i32 %1062, %1060, !dbg !77
  %1064 = bitcast i32 %1063 to float, !dbg !77
  br label %__nv_tanhf.exit86, !dbg !77

__internal_fmad.exit3.i75:                        ; preds = %__nv_tanhf.exit67
  %1065 = fmul float %944, %944, !dbg !77
  %1066 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not1.i76 = icmp eq i32 %1066, 0, !dbg !77
  %1067 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1065, float 0xBFAAC795C0000000) #6, !dbg !77
  %1068 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1065, float 0xBFAAC795C0000000) #6, !dbg !77
  %.06.i77 = select i1 %.not1.i76, float %1068, float %1067, !dbg !77
  %1069 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not2.i78 = icmp eq i32 %1069, 0, !dbg !77
  %1070 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i77, float %1065, float 0x3FC10B2820000000) #6, !dbg !77
  %1071 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i77, float %1065, float 0x3FC10B2820000000) #6, !dbg !77
  %.05.i79 = select i1 %.not2.i78, float %1071, float %1070, !dbg !77
  %1072 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not3.i80 = icmp eq i32 %1072, 0, !dbg !77
  %1073 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i79, float %1065, float 0xBFD5553DA0000000) #6, !dbg !77
  %1074 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i79, float %1065, float 0xBFD5553DA0000000) #6, !dbg !77
  %.0.i81 = select i1 %.not3.i80, float %1074, float %1073, !dbg !77
  %1075 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not4.i82 = icmp eq i32 %1075, 0, !dbg !77
  %1076 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i81, float %1065, float 0.000000e+00) #6, !dbg !77
  %1077 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i81, float %1065, float 0.000000e+00) #6, !dbg !77
  %.04.i83 = select i1 %.not4.i82, float %1077, float %1076, !dbg !77
  %1078 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not5.i84 = icmp eq i32 %1078, 0, !dbg !77
  %1079 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i83, float %944, float %944) #6, !dbg !77
  %1080 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i83, float %944, float %944) #6, !dbg !77
  %.02.i85 = select i1 %.not5.i84, float %1080, float %1079, !dbg !77
  br label %__nv_tanhf.exit86, !dbg !77

__nv_tanhf.exit86:                                ; preds = %__internal_fmad.exit1.i70, %__internal_fmad.exit3.i75
  %s.1.i74 = phi float [ %1064, %__internal_fmad.exit1.i70 ], [ %.02.i85, %__internal_fmad.exit3.i75 ], !dbg !77
  %1081 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not.i87 = icmp eq i32 %1081, 0, !dbg !77
  %1082 = tail call float @llvm.nvvm.fabs.ftz.f(float %945) #6, !dbg !77
  %1083 = tail call float @llvm.nvvm.fabs.f(float %945) #6, !dbg !77
  %.01.i88 = select i1 %.not.i87, float %1083, float %1082, !dbg !77
  %1084 = fcmp ult float %.01.i88, 0x3FE3333340000000, !dbg !77
  br i1 %1084, label %__internal_fmad.exit3.i94, label %__internal_fmad.exit1.i89, !dbg !77

__internal_fmad.exit1.i89:                        ; preds = %__nv_tanhf.exit86
  %1085 = fmul float %.01.i88, 0x4007154760000000, !dbg !77
  %1086 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1085) #6, !dbg !77
  %1087 = fadd float %1086, 1.000000e+00, !dbg !77
  %1088 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1087) #7, !dbg !77, !srcloc !25
  %1089 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not6.i90 = icmp eq i32 %1089, 0, !dbg !77
  %1090 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1088, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %1091 = tail call float @llvm.nvvm.fma.rn.f(float %1088, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %.03.i91 = select i1 %.not6.i90, float %1091, float %1090, !dbg !77
  %1092 = fcmp oge float %.01.i88, 0x4022059680000000, !dbg !77
  %s.0.i92 = select i1 %1092, float 1.000000e+00, float %.03.i91, !dbg !77
  %1093 = bitcast float %s.0.i92 to i32, !dbg !77
  %1094 = bitcast float %945 to i32, !dbg !77
  %1095 = and i32 %1094, -2147483648, !dbg !77
  %1096 = or i32 %1095, %1093, !dbg !77
  %1097 = bitcast i32 %1096 to float, !dbg !77
  br label %__nv_tanhf.exit105, !dbg !77

__internal_fmad.exit3.i94:                        ; preds = %__nv_tanhf.exit86
  %1098 = fmul float %945, %945, !dbg !77
  %1099 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not1.i95 = icmp eq i32 %1099, 0, !dbg !77
  %1100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1098, float 0xBFAAC795C0000000) #6, !dbg !77
  %1101 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1098, float 0xBFAAC795C0000000) #6, !dbg !77
  %.06.i96 = select i1 %.not1.i95, float %1101, float %1100, !dbg !77
  %1102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not2.i97 = icmp eq i32 %1102, 0, !dbg !77
  %1103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i96, float %1098, float 0x3FC10B2820000000) #6, !dbg !77
  %1104 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i96, float %1098, float 0x3FC10B2820000000) #6, !dbg !77
  %.05.i98 = select i1 %.not2.i97, float %1104, float %1103, !dbg !77
  %1105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not3.i99 = icmp eq i32 %1105, 0, !dbg !77
  %1106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i98, float %1098, float 0xBFD5553DA0000000) #6, !dbg !77
  %1107 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i98, float %1098, float 0xBFD5553DA0000000) #6, !dbg !77
  %.0.i100 = select i1 %.not3.i99, float %1107, float %1106, !dbg !77
  %1108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not4.i101 = icmp eq i32 %1108, 0, !dbg !77
  %1109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i100, float %1098, float 0.000000e+00) #6, !dbg !77
  %1110 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i100, float %1098, float 0.000000e+00) #6, !dbg !77
  %.04.i102 = select i1 %.not4.i101, float %1110, float %1109, !dbg !77
  %1111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not5.i103 = icmp eq i32 %1111, 0, !dbg !77
  %1112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i102, float %945, float %945) #6, !dbg !77
  %1113 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i102, float %945, float %945) #6, !dbg !77
  %.02.i104 = select i1 %.not5.i103, float %1113, float %1112, !dbg !77
  br label %__nv_tanhf.exit105, !dbg !77

__nv_tanhf.exit105:                               ; preds = %__internal_fmad.exit1.i89, %__internal_fmad.exit3.i94
  %s.1.i93 = phi float [ %1097, %__internal_fmad.exit1.i89 ], [ %.02.i104, %__internal_fmad.exit3.i94 ], !dbg !77
  %1114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not.i106 = icmp eq i32 %1114, 0, !dbg !77
  %1115 = tail call float @llvm.nvvm.fabs.ftz.f(float %946) #6, !dbg !77
  %1116 = tail call float @llvm.nvvm.fabs.f(float %946) #6, !dbg !77
  %.01.i107 = select i1 %.not.i106, float %1116, float %1115, !dbg !77
  %1117 = fcmp ult float %.01.i107, 0x3FE3333340000000, !dbg !77
  br i1 %1117, label %__internal_fmad.exit3.i113, label %__internal_fmad.exit1.i108, !dbg !77

__internal_fmad.exit1.i108:                       ; preds = %__nv_tanhf.exit105
  %1118 = fmul float %.01.i107, 0x4007154760000000, !dbg !77
  %1119 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1118) #6, !dbg !77
  %1120 = fadd float %1119, 1.000000e+00, !dbg !77
  %1121 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1120) #7, !dbg !77, !srcloc !25
  %1122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not6.i109 = icmp eq i32 %1122, 0, !dbg !77
  %1123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1121, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %1124 = tail call float @llvm.nvvm.fma.rn.f(float %1121, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %.03.i110 = select i1 %.not6.i109, float %1124, float %1123, !dbg !77
  %1125 = fcmp oge float %.01.i107, 0x4022059680000000, !dbg !77
  %s.0.i111 = select i1 %1125, float 1.000000e+00, float %.03.i110, !dbg !77
  %1126 = bitcast float %s.0.i111 to i32, !dbg !77
  %1127 = bitcast float %946 to i32, !dbg !77
  %1128 = and i32 %1127, -2147483648, !dbg !77
  %1129 = or i32 %1128, %1126, !dbg !77
  %1130 = bitcast i32 %1129 to float, !dbg !77
  br label %__nv_tanhf.exit124, !dbg !77

__internal_fmad.exit3.i113:                       ; preds = %__nv_tanhf.exit105
  %1131 = fmul float %946, %946, !dbg !77
  %1132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not1.i114 = icmp eq i32 %1132, 0, !dbg !77
  %1133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1131, float 0xBFAAC795C0000000) #6, !dbg !77
  %1134 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1131, float 0xBFAAC795C0000000) #6, !dbg !77
  %.06.i115 = select i1 %.not1.i114, float %1134, float %1133, !dbg !77
  %1135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not2.i116 = icmp eq i32 %1135, 0, !dbg !77
  %1136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i115, float %1131, float 0x3FC10B2820000000) #6, !dbg !77
  %1137 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i115, float %1131, float 0x3FC10B2820000000) #6, !dbg !77
  %.05.i117 = select i1 %.not2.i116, float %1137, float %1136, !dbg !77
  %1138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not3.i118 = icmp eq i32 %1138, 0, !dbg !77
  %1139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i117, float %1131, float 0xBFD5553DA0000000) #6, !dbg !77
  %1140 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i117, float %1131, float 0xBFD5553DA0000000) #6, !dbg !77
  %.0.i119 = select i1 %.not3.i118, float %1140, float %1139, !dbg !77
  %1141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not4.i120 = icmp eq i32 %1141, 0, !dbg !77
  %1142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i119, float %1131, float 0.000000e+00) #6, !dbg !77
  %1143 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i119, float %1131, float 0.000000e+00) #6, !dbg !77
  %.04.i121 = select i1 %.not4.i120, float %1143, float %1142, !dbg !77
  %1144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not5.i122 = icmp eq i32 %1144, 0, !dbg !77
  %1145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i121, float %946, float %946) #6, !dbg !77
  %1146 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i121, float %946, float %946) #6, !dbg !77
  %.02.i123 = select i1 %.not5.i122, float %1146, float %1145, !dbg !77
  br label %__nv_tanhf.exit124, !dbg !77

__nv_tanhf.exit124:                               ; preds = %__internal_fmad.exit1.i108, %__internal_fmad.exit3.i113
  %s.1.i112 = phi float [ %1130, %__internal_fmad.exit1.i108 ], [ %.02.i123, %__internal_fmad.exit3.i113 ], !dbg !77
  %1147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not.i125 = icmp eq i32 %1147, 0, !dbg !77
  %1148 = tail call float @llvm.nvvm.fabs.ftz.f(float %947) #6, !dbg !77
  %1149 = tail call float @llvm.nvvm.fabs.f(float %947) #6, !dbg !77
  %.01.i126 = select i1 %.not.i125, float %1149, float %1148, !dbg !77
  %1150 = fcmp ult float %.01.i126, 0x3FE3333340000000, !dbg !77
  br i1 %1150, label %__internal_fmad.exit3.i132, label %__internal_fmad.exit1.i127, !dbg !77

__internal_fmad.exit1.i127:                       ; preds = %__nv_tanhf.exit124
  %1151 = fmul float %.01.i126, 0x4007154760000000, !dbg !77
  %1152 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1151) #6, !dbg !77
  %1153 = fadd float %1152, 1.000000e+00, !dbg !77
  %1154 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1153) #7, !dbg !77, !srcloc !25
  %1155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not6.i128 = icmp eq i32 %1155, 0, !dbg !77
  %1156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1154, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %1157 = tail call float @llvm.nvvm.fma.rn.f(float %1154, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %.03.i129 = select i1 %.not6.i128, float %1157, float %1156, !dbg !77
  %1158 = fcmp oge float %.01.i126, 0x4022059680000000, !dbg !77
  %s.0.i130 = select i1 %1158, float 1.000000e+00, float %.03.i129, !dbg !77
  %1159 = bitcast float %s.0.i130 to i32, !dbg !77
  %1160 = bitcast float %947 to i32, !dbg !77
  %1161 = and i32 %1160, -2147483648, !dbg !77
  %1162 = or i32 %1161, %1159, !dbg !77
  %1163 = bitcast i32 %1162 to float, !dbg !77
  br label %__nv_tanhf.exit143, !dbg !77

__internal_fmad.exit3.i132:                       ; preds = %__nv_tanhf.exit124
  %1164 = fmul float %947, %947, !dbg !77
  %1165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not1.i133 = icmp eq i32 %1165, 0, !dbg !77
  %1166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1164, float 0xBFAAC795C0000000) #6, !dbg !77
  %1167 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1164, float 0xBFAAC795C0000000) #6, !dbg !77
  %.06.i134 = select i1 %.not1.i133, float %1167, float %1166, !dbg !77
  %1168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not2.i135 = icmp eq i32 %1168, 0, !dbg !77
  %1169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i134, float %1164, float 0x3FC10B2820000000) #6, !dbg !77
  %1170 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i134, float %1164, float 0x3FC10B2820000000) #6, !dbg !77
  %.05.i136 = select i1 %.not2.i135, float %1170, float %1169, !dbg !77
  %1171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not3.i137 = icmp eq i32 %1171, 0, !dbg !77
  %1172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i136, float %1164, float 0xBFD5553DA0000000) #6, !dbg !77
  %1173 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i136, float %1164, float 0xBFD5553DA0000000) #6, !dbg !77
  %.0.i138 = select i1 %.not3.i137, float %1173, float %1172, !dbg !77
  %1174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not4.i139 = icmp eq i32 %1174, 0, !dbg !77
  %1175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i138, float %1164, float 0.000000e+00) #6, !dbg !77
  %1176 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i138, float %1164, float 0.000000e+00) #6, !dbg !77
  %.04.i140 = select i1 %.not4.i139, float %1176, float %1175, !dbg !77
  %1177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not5.i141 = icmp eq i32 %1177, 0, !dbg !77
  %1178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i140, float %947, float %947) #6, !dbg !77
  %1179 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i140, float %947, float %947) #6, !dbg !77
  %.02.i142 = select i1 %.not5.i141, float %1179, float %1178, !dbg !77
  br label %__nv_tanhf.exit143, !dbg !77

__nv_tanhf.exit143:                               ; preds = %__internal_fmad.exit1.i127, %__internal_fmad.exit3.i132
  %s.1.i131 = phi float [ %1163, %__internal_fmad.exit1.i127 ], [ %.02.i142, %__internal_fmad.exit3.i132 ], !dbg !77
  %1180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not.i144 = icmp eq i32 %1180, 0, !dbg !77
  %1181 = tail call float @llvm.nvvm.fabs.ftz.f(float %948) #6, !dbg !77
  %1182 = tail call float @llvm.nvvm.fabs.f(float %948) #6, !dbg !77
  %.01.i145 = select i1 %.not.i144, float %1182, float %1181, !dbg !77
  %1183 = fcmp ult float %.01.i145, 0x3FE3333340000000, !dbg !77
  br i1 %1183, label %__internal_fmad.exit3.i151, label %__internal_fmad.exit1.i146, !dbg !77

__internal_fmad.exit1.i146:                       ; preds = %__nv_tanhf.exit143
  %1184 = fmul float %.01.i145, 0x4007154760000000, !dbg !77
  %1185 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1184) #6, !dbg !77
  %1186 = fadd float %1185, 1.000000e+00, !dbg !77
  %1187 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1186) #7, !dbg !77, !srcloc !25
  %1188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not6.i147 = icmp eq i32 %1188, 0, !dbg !77
  %1189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1187, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %1190 = tail call float @llvm.nvvm.fma.rn.f(float %1187, float -2.000000e+00, float 1.000000e+00) #6, !dbg !77
  %.03.i148 = select i1 %.not6.i147, float %1190, float %1189, !dbg !77
  %1191 = fcmp oge float %.01.i145, 0x4022059680000000, !dbg !77
  %s.0.i149 = select i1 %1191, float 1.000000e+00, float %.03.i148, !dbg !77
  %1192 = bitcast float %s.0.i149 to i32, !dbg !77
  %1193 = bitcast float %948 to i32, !dbg !77
  %1194 = and i32 %1193, -2147483648, !dbg !77
  %1195 = or i32 %1194, %1192, !dbg !77
  %1196 = bitcast i32 %1195 to float, !dbg !77
  br label %__nv_tanhf.exit162, !dbg !77

__internal_fmad.exit3.i151:                       ; preds = %__nv_tanhf.exit143
  %1197 = fmul float %948, %948, !dbg !77
  %1198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not1.i152 = icmp eq i32 %1198, 0, !dbg !77
  %1199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1197, float 0xBFAAC795C0000000) #6, !dbg !77
  %1200 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1197, float 0xBFAAC795C0000000) #6, !dbg !77
  %.06.i153 = select i1 %.not1.i152, float %1200, float %1199, !dbg !77
  %1201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not2.i154 = icmp eq i32 %1201, 0, !dbg !77
  %1202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i153, float %1197, float 0x3FC10B2820000000) #6, !dbg !77
  %1203 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i153, float %1197, float 0x3FC10B2820000000) #6, !dbg !77
  %.05.i155 = select i1 %.not2.i154, float %1203, float %1202, !dbg !77
  %1204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not3.i156 = icmp eq i32 %1204, 0, !dbg !77
  %1205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i155, float %1197, float 0xBFD5553DA0000000) #6, !dbg !77
  %1206 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i155, float %1197, float 0xBFD5553DA0000000) #6, !dbg !77
  %.0.i157 = select i1 %.not3.i156, float %1206, float %1205, !dbg !77
  %1207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not4.i158 = icmp eq i32 %1207, 0, !dbg !77
  %1208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i157, float %1197, float 0.000000e+00) #6, !dbg !77
  %1209 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i157, float %1197, float 0.000000e+00) #6, !dbg !77
  %.04.i159 = select i1 %.not4.i158, float %1209, float %1208, !dbg !77
  %1210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !77
  %.not5.i160 = icmp eq i32 %1210, 0, !dbg !77
  %1211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i159, float %948, float %948) #6, !dbg !77
  %1212 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i159, float %948, float %948) #6, !dbg !77
  %.02.i161 = select i1 %.not5.i160, float %1212, float %1211, !dbg !77
  br label %__nv_tanhf.exit162, !dbg !77

__nv_tanhf.exit162:                               ; preds = %__internal_fmad.exit1.i146, %__internal_fmad.exit3.i151
  %s.1.i150 = phi float [ %1196, %__internal_fmad.exit1.i146 ], [ %.02.i161, %__internal_fmad.exit3.i151 ], !dbg !77
  %1213 = fmul float %s.1.i, 5.000000e+01, !dbg !78
  %1214 = fmul float %s.1.i36, 5.000000e+01, !dbg !78
  %1215 = fmul float %s.1.i55, 5.000000e+01, !dbg !78
  %1216 = fmul float %s.1.i74, 5.000000e+01, !dbg !78
  %1217 = fmul float %s.1.i93, 5.000000e+01, !dbg !78
  %1218 = fmul float %s.1.i112, 5.000000e+01, !dbg !78
  %1219 = fmul float %s.1.i131, 5.000000e+01, !dbg !78
  %1220 = fmul float %s.1.i150, 5.000000e+01, !dbg !78
  %1221 = icmp sgt i64 %901, %.sext, !dbg !79
  %1222 = icmp sgt i64 %902, %.sext, !dbg !79
  %1223 = icmp sgt i64 %903, %.sext, !dbg !79
  %1224 = icmp sgt i64 %904, %.sext, !dbg !79
  %1225 = icmp sgt i64 %905, %.sext, !dbg !79
  %1226 = icmp sgt i64 %906, %.sext, !dbg !79
  %1227 = icmp sgt i64 %907, %.sext, !dbg !79
  %1228 = icmp sgt i64 %908, %.sext, !dbg !79
  %1229 = select i1 %1221, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !80
  %1230 = select i1 %1222, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !80
  %1231 = select i1 %1223, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !80
  %1232 = select i1 %1224, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !80
  %1233 = select i1 %1225, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !80
  %1234 = select i1 %1226, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !80
  %1235 = select i1 %1227, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !80
  %1236 = select i1 %1228, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !80
  %1237 = fadd float %1229, %1213, !dbg !81
  %1238 = fadd float %1230, %1214, !dbg !81
  %1239 = fadd float %1231, %1215, !dbg !81
  %1240 = fadd float %1232, %1216, !dbg !81
  %1241 = fadd float %1233, %1217, !dbg !81
  %1242 = fadd float %1234, %1218, !dbg !81
  %1243 = fadd float %1235, %1219, !dbg !81
  %1244 = fadd float %1236, %1220, !dbg !81
  %1245 = fsub float %1237, %462, !dbg !82
  %1246 = fsub float %1238, %462, !dbg !82
  %1247 = fsub float %1239, %462, !dbg !82
  %1248 = fsub float %1240, %462, !dbg !82
  %1249 = fsub float %1241, %462, !dbg !82
  %1250 = fsub float %1242, %462, !dbg !82
  %1251 = fsub float %1243, %462, !dbg !82
  %1252 = fsub float %1244, %462, !dbg !82
  %1253 = fmul float %1245, 0x3FF7154760000000, !dbg !83
  %1254 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1253) #6, !dbg !83
  %1255 = fmul float %1246, 0x3FF7154760000000, !dbg !83
  %1256 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1255) #6, !dbg !83
  %1257 = fmul float %1247, 0x3FF7154760000000, !dbg !83
  %1258 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1257) #6, !dbg !83
  %1259 = fmul float %1248, 0x3FF7154760000000, !dbg !83
  %1260 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1259) #6, !dbg !83
  %1261 = fmul float %1249, 0x3FF7154760000000, !dbg !83
  %1262 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1261) #6, !dbg !83
  %1263 = fmul float %1250, 0x3FF7154760000000, !dbg !83
  %1264 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1263) #6, !dbg !83
  %1265 = fmul float %1251, 0x3FF7154760000000, !dbg !83
  %1266 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1265) #6, !dbg !83
  %1267 = fmul float %1252, 0x3FF7154760000000, !dbg !83
  %1268 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1267) #6, !dbg !83
  %1269 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1254, float %897) #6, !dbg !84
  %1270 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1256, float %897) #6, !dbg !84
  %1271 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1258, float %897) #6, !dbg !84
  %1272 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1260, float %897) #6, !dbg !84
  %1273 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1262, float %897) #6, !dbg !84
  %1274 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1264, float %897) #6, !dbg !84
  %1275 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1266, float %897) #6, !dbg !84
  %1276 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1268, float %897) #6, !dbg !84
  %1277 = getelementptr i16, ptr addrspace(1) %1, i64 %910, !dbg !85
  %1278 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1269) #6, !dbg !86
  %1279 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1270) #6, !dbg !86
  %1280 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1271) #6, !dbg !86
  %1281 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1272) #6, !dbg !86
  %1282 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1273) #6, !dbg !86
  %1283 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1274) #6, !dbg !86
  %1284 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1275) #6, !dbg !86
  %1285 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1276) #6, !dbg !86
  %1286 = insertelement <2 x i16> undef, i16 %1278, i64 0, !dbg !86
  %1287 = insertelement <2 x i16> %1286, i16 %1279, i64 1, !dbg !86
  %1288 = bitcast <2 x i16> %1287 to i32, !dbg !86
  %1289 = insertelement <2 x i16> undef, i16 %1280, i64 0, !dbg !86
  %1290 = insertelement <2 x i16> %1289, i16 %1281, i64 1, !dbg !86
  %1291 = bitcast <2 x i16> %1290 to i32, !dbg !86
  %1292 = insertelement <2 x i16> undef, i16 %1282, i64 0, !dbg !86
  %1293 = insertelement <2 x i16> %1292, i16 %1283, i64 1, !dbg !86
  %1294 = bitcast <2 x i16> %1293 to i32, !dbg !86
  %1295 = insertelement <2 x i16> undef, i16 %1284, i64 0, !dbg !86
  %1296 = insertelement <2 x i16> %1295, i16 %1285, i64 1, !dbg !86
  %1297 = bitcast <2 x i16> %1296 to i32, !dbg !86
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1288, i32 %1291, i32 %1294, i32 %1297, ptr addrspace(1) %1277, i1 %909) #6, !dbg !86
  %1298 = add nuw nsw i32 %899, 2048, !dbg !68
  %1299 = icmp ult i32 %899, 6144, !dbg !68
  br i1 %1299, label %898, label %1300, !dbg !68

1300:                                             ; preds = %__nv_tanhf.exit162
  ret void, !dbg !87
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: alwaysinline nounwind
define float @__nv_tanhf(float %a) local_unnamed_addr #3 {
__nv_fabsf.exit:
  %0 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not = icmp eq i32 %0, 0
  %1 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #6
  %2 = tail call float @llvm.nvvm.fabs.f(float %a) #6
  %.01 = select i1 %.not, float %2, float %1
  %3 = fcmp ult float %.01, 0x3FE3333340000000
  br i1 %3, label %__internal_fmad.exit3, label %__internal_fmad.exit1

__internal_fmad.exit1:                            ; preds = %__nv_fabsf.exit
  %4 = fmul float %.01, 0x4007154760000000
  %5 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4) #6
  %6 = fadd float %5, 1.000000e+00
  %7 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6) #7, !srcloc !25
  %8 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not6 = icmp eq i32 %8, 0
  %9 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7, float -2.000000e+00, float 1.000000e+00) #6
  %10 = tail call float @llvm.nvvm.fma.rn.f(float %7, float -2.000000e+00, float 1.000000e+00) #6
  %.03 = select i1 %.not6, float %10, float %9
  %11 = fcmp oge float %.01, 0x4022059680000000
  %s.0 = select i1 %11, float 1.000000e+00, float %.03
  %12 = bitcast float %s.0 to i32
  %13 = bitcast float %a to i32
  %14 = and i32 %13, -2147483648
  %15 = or i32 %14, %12
  %16 = bitcast i32 %15 to float
  br label %33

__internal_fmad.exit3:                            ; preds = %__nv_fabsf.exit
  %17 = fmul float %a, %a
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not1 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #6
  %20 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #6
  %.06 = select i1 %.not1, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not2 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06, float %17, float 0x3FC10B2820000000) #6
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.06, float %17, float 0x3FC10B2820000000) #6
  %.05 = select i1 %.not2, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not3 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %17, float 0xBFD5553DA0000000) #6
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %17, float 0xBFD5553DA0000000) #6
  %.0 = select i1 %.not3, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not4 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0, float %17, float 0.000000e+00) #6
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.0, float %17, float 0.000000e+00) #6
  %.04 = select i1 %.not4, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not5 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04, float %a, float %a) #6
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.04, float %a, float %a) #6
  %.02 = select i1 %.not5, float %32, float %31
  br label %33

33:                                               ; preds = %__internal_fmad.exit3, %__internal_fmad.exit1
  %s.1 = phi float [ %16, %__internal_fmad.exit1 ], [ %.02, %__internal_fmad.exit3 ]
  ret float %s.1
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #6 = { nounwind }
attributes #7 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "cuhwmh3ptunaxloseffwffnsrzn77xwvnrld37pnt6h5xhttatia.py", directory: "/tmp/torchinductor_zeus/uh")
!4 = !{ptr @triton__0d1d2de3de, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2de3de, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2de3de", linkageName: "triton__0d1d2de3de", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 33, scope: !7)
!11 = !DILocation(line: 21, column: 28, scope: !7)
!12 = !DILocation(line: 21, column: 34, scope: !7)
!13 = !DILocation(line: 26, column: 18, scope: !7)
!14 = !DILocation(line: 32, column: 45, scope: !7)
!15 = !DILocation(line: 28, column: 36, scope: !7)
!16 = !DILocation(line: 41, column: 23, scope: !7)
!17 = !DILocation(line: 29, column: 27, scope: !7)
!18 = !DILocation(line: 32, column: 34, scope: !7)
!19 = !DILocation(line: 30, column: 25, scope: !7)
!20 = !DILocation(line: 32, column: 51, scope: !7)
!21 = !DILocation(line: 32, column: 102, scope: !7)
!22 = !DILocation(line: 34, column: 22, scope: !7)
!23 = !DILocation(line: 36, column: 22, scope: !7)
!24 = !DILocation(line: 37, column: 28, scope: !7)
!25 = !{i32 21046}
!26 = !DILocation(line: 38, column: 22, scope: !7)
!27 = !DILocation(line: 38, column: 21, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !7, file: !29, discriminator: 0)
!29 = !DIFile(filename: "triton_helpers.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/torch/_inductor")
!30 = !DILocation(line: 51, column: 47, scope: !28)
!31 = !DILocation(line: 47, column: 39, scope: !7)
!32 = !DILocation(line: 48, column: 23, scope: !7)
!33 = !DILocation(line: 36, column: 15, scope: !28, inlinedAt: !30)
!34 = !DILocation(line: 0, scope: !7)
!35 = !DILocation(line: 36, column: 15, scope: !36, inlinedAt: !37)
!36 = distinct !DILexicalBlockFile(scope: !28, file: !29, discriminator: 0)
!37 = !DILocation(line: 49, column: 29, scope: !36, inlinedAt: !38)
!38 = !DILocation(line: 53, column: 40, scope: !36)
!39 = !DILocation(line: 38, column: 21, scope: !36, inlinedAt: !37)
!40 = !DILocation(line: 38, column: 16, scope: !36, inlinedAt: !37)
!41 = !DILocation(line: 39, column: 29, scope: !36, inlinedAt: !37)
!42 = !DILocation(line: 49, column: 29, scope: !28, inlinedAt: !43)
!43 = !DILocation(line: 53, column: 40, scope: !28)
!44 = !DILocation(line: 56, column: 27, scope: !7)
!45 = !DILocation(line: 55, column: 36, scope: !7)
!46 = !DILocation(line: 57, column: 25, scope: !7)
!47 = !DILocation(line: 59, column: 35, scope: !7)
!48 = !DILocation(line: 59, column: 52, scope: !7)
!49 = !DILocation(line: 59, column: 103, scope: !7)
!50 = !DILocation(line: 61, column: 24, scope: !7)
!51 = !DILocation(line: 63, column: 24, scope: !7)
!52 = !DILocation(line: 64, column: 29, scope: !7)
!53 = !DILocation(line: 65, column: 24, scope: !7)
!54 = !DILocation(line: 68, column: 25, scope: !7)
!55 = !DILocation(line: 74, column: 39, scope: !7)
!56 = !DILocation(line: 75, column: 24, scope: !7)
!57 = !DILocation(line: 77, column: 24, scope: !7)
!58 = !DILocation(line: 78, column: 23, scope: !7)
!59 = !DILocation(line: 81, column: 40, scope: !7)
!60 = !DILocation(line: 243, column: 36, scope: !61, inlinedAt: !63)
!61 = distinct !DILexicalBlockFile(scope: !7, file: !62, discriminator: 0)
!62 = !DIFile(filename: "standard.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/triton/language")
!63 = !DILocation(line: 82, column: 27, scope: !61)
!64 = !DILocation(line: 233, column: 15, scope: !65, inlinedAt: !66)
!65 = distinct !DILexicalBlockFile(scope: !61, file: !62, discriminator: 0)
!66 = !DILocation(line: 243, column: 36, scope: !65, inlinedAt: !67)
!67 = !DILocation(line: 82, column: 27, scope: !65)
!68 = !DILocation(line: 83, column: 36, scope: !7)
!69 = !DILocation(line: 84, column: 27, scope: !7)
!70 = !DILocation(line: 85, column: 25, scope: !7)
!71 = !DILocation(line: 87, column: 41, scope: !7)
!72 = !DILocation(line: 87, column: 35, scope: !7)
!73 = !DILocation(line: 87, column: 52, scope: !7)
!74 = !DILocation(line: 87, column: 104, scope: !7)
!75 = !DILocation(line: 89, column: 24, scope: !7)
!76 = !DILocation(line: 91, column: 24, scope: !7)
!77 = !DILocation(line: 92, column: 29, scope: !7)
!78 = !DILocation(line: 93, column: 24, scope: !7)
!79 = !DILocation(line: 96, column: 25, scope: !7)
!80 = !DILocation(line: 102, column: 39, scope: !7)
!81 = !DILocation(line: 103, column: 24, scope: !7)
!82 = !DILocation(line: 105, column: 24, scope: !7)
!83 = !DILocation(line: 106, column: 23, scope: !7)
!84 = !DILocation(line: 107, column: 24, scope: !7)
!85 = !DILocation(line: 109, column: 29, scope: !7)
!86 = !DILocation(line: 109, column: 53, scope: !7)
!87 = !DILocation(line: 83, column: 4, scope: !7)
