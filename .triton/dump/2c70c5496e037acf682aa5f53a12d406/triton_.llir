; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton__0d1d2de(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !5 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %5 = and i32 %4, 127, !dbg !8
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !9
  %7 = shl i32 %6, 7, !dbg !10
  %8 = or i32 %7, %5, !dbg !11
  %.frozen = freeze i32 %8
  %9 = sdiv i32 %.frozen, 4096, !dbg !12
  %10 = mul i32 %9, 4096
  %.decomposed = sub i32 %.frozen, %10
  %11 = shl nsw i32 %9, 8, !dbg !13
  %.lhs.trunc = trunc i32 %.decomposed to i16, !dbg !14
  %12 = sdiv i16 %.lhs.trunc, 256, !dbg !14
  %.sext = sext i16 %12 to i32, !dbg !14
  %13 = shl nsw i32 %.sext, 10, !dbg !15
  %14 = mul i16 %12, 256
  %.decomposed3 = sub i16 %.lhs.trunc, %14
  %.sext2 = sext i16 %.decomposed3 to i32, !dbg !16
  %15 = add nsw i32 %11, %.sext2, !dbg !17
  %16 = add nsw i32 %15, %13, !dbg !18
  %17 = sext i32 %16 to i64, !dbg !19
  %18 = getelementptr i16, ptr addrspace(1) %0, i64 %17, !dbg !19
  %19 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %18, i1 true) #1, !dbg !20
  %20 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %19) #1, !dbg !21
  %21 = sext i32 %8 to i64, !dbg !22
  %22 = getelementptr i16, ptr addrspace(1) %1, i64 %21, !dbg !22
  %23 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %20) #1, !dbg !23
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %23, ptr addrspace(1) %22, i1 true) #1, !dbg !23
  ret void, !dbg !24
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "c2jfzglb7dyhpssb4d5irqcn7ndcebdx7ksr7stlesfaugfvf47h.py", directory: "/tmp/torchinductor_zeus/2j")
!3 = !{ptr @triton__0d1d2de, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d2de, !"maxntidx", i32 128}
!5 = distinct !DISubprogram(name: "triton__0d1d2de", linkageName: "triton__0d1d2de", scope: !2, file: !2, line: 18, type: !6, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 21, column: 36, scope: !5)
!9 = !DILocation(line: 20, column: 28, scope: !5)
!10 = !DILocation(line: 20, column: 33, scope: !5)
!11 = !DILocation(line: 21, column: 23, scope: !5)
!12 = !DILocation(line: 24, column: 20, scope: !5)
!13 = !DILocation(line: 26, column: 35, scope: !5)
!14 = !DILocation(line: 26, column: 54, scope: !5)
!15 = !DILocation(line: 26, column: 48, scope: !5)
!16 = !DILocation(line: 26, column: 68, scope: !5)
!17 = !DILocation(line: 26, column: 42, scope: !5)
!18 = !DILocation(line: 26, column: 63, scope: !5)
!19 = !DILocation(line: 26, column: 30, scope: !5)
!20 = !DILocation(line: 26, column: 75, scope: !5)
!21 = !DILocation(line: 26, column: 84, scope: !5)
!22 = !DILocation(line: 27, column: 25, scope: !5)
!23 = !DILocation(line: 27, column: 36, scope: !5)
!24 = !DILocation(line: 27, column: 4, scope: !5)
