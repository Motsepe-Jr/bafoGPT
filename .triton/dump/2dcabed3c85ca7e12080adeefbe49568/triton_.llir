; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2d3de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = and i32 %5, 31, !dbg !10
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !11
  %8 = shl i32 %7, 5, !dbg !12
  %9 = or i32 %8, %6, !dbg !13
  %10 = icmp slt i32 %9, 32, !dbg !14
  %11 = shl i32 %9, 2, !dbg !15
  %12 = sext i32 %11 to i64, !dbg !16
  %13 = getelementptr i16, ptr addrspace(1) %0, i64 %12, !dbg !16
  %14 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %13, i1 %10) #4, !dbg !17
  %15 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %14) #4, !dbg !18
  %16 = or i32 %11, 1, !dbg !19
  %17 = sext i32 %16 to i64, !dbg !20
  %18 = getelementptr i16, ptr addrspace(1) %0, i64 %17, !dbg !20
  %19 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %18, i1 %10) #4, !dbg !21
  %20 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %19) #4, !dbg !22
  %21 = or i32 %11, 2, !dbg !23
  %22 = sext i32 %21 to i64, !dbg !24
  %23 = getelementptr i16, ptr addrspace(1) %0, i64 %22, !dbg !24
  %24 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %23, i1 %10) #4, !dbg !25
  %25 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %24) #4, !dbg !26
  %26 = or i32 %11, 3, !dbg !27
  %27 = sext i32 %26 to i64, !dbg !28
  %28 = getelementptr i16, ptr addrspace(1) %0, i64 %27, !dbg !28
  %29 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %28, i1 %10) #4, !dbg !29
  %30 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %29) #4, !dbg !30
  %31 = fmul float %15, 6.250000e-02, !dbg !31
  %32 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %31, float 5.000000e+01) #4, !dbg !32
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not.i = icmp eq i32 %33, 0, !dbg !33
  %34 = tail call float @llvm.nvvm.fabs.ftz.f(float %32) #4, !dbg !33
  %35 = tail call float @llvm.nvvm.fabs.f(float %32) #4, !dbg !33
  %.01.i = select i1 %.not.i, float %35, float %34, !dbg !33
  %36 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !33
  br i1 %36, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !33

__internal_fmad.exit1.i:                          ; preds = %4
  %37 = fmul float %.01.i, 0x4007154760000000, !dbg !33
  %38 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %37) #4, !dbg !33
  %39 = fadd float %38, 1.000000e+00, !dbg !33
  %40 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %39) #5, !dbg !33, !srcloc !34
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not6.i = icmp eq i32 %41, 0, !dbg !33
  %42 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %40, float -2.000000e+00, float 1.000000e+00) #4, !dbg !33
  %43 = tail call float @llvm.nvvm.fma.rn.f(float %40, float -2.000000e+00, float 1.000000e+00) #4, !dbg !33
  %.03.i = select i1 %.not6.i, float %43, float %42, !dbg !33
  %44 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !33
  %s.0.i = select i1 %44, float 1.000000e+00, float %.03.i, !dbg !33
  %45 = bitcast float %s.0.i to i32, !dbg !33
  %46 = bitcast float %32 to i32, !dbg !33
  %47 = and i32 %46, -2147483648, !dbg !33
  %48 = or i32 %47, %45, !dbg !33
  %49 = bitcast i32 %48 to float, !dbg !33
  br label %__nv_tanhf.exit, !dbg !33

__internal_fmad.exit3.i:                          ; preds = %4
  %50 = fmul float %32, %32, !dbg !33
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not1.i = icmp eq i32 %51, 0, !dbg !33
  %52 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %50, float 0xBFAAC795C0000000) #4, !dbg !33
  %53 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %50, float 0xBFAAC795C0000000) #4, !dbg !33
  %.06.i = select i1 %.not1.i, float %53, float %52, !dbg !33
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not2.i = icmp eq i32 %54, 0, !dbg !33
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %50, float 0x3FC10B2820000000) #4, !dbg !33
  %56 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %50, float 0x3FC10B2820000000) #4, !dbg !33
  %.05.i = select i1 %.not2.i, float %56, float %55, !dbg !33
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not3.i = icmp eq i32 %57, 0, !dbg !33
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %50, float 0xBFD5553DA0000000) #4, !dbg !33
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %50, float 0xBFD5553DA0000000) #4, !dbg !33
  %.0.i = select i1 %.not3.i, float %59, float %58, !dbg !33
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not4.i = icmp eq i32 %60, 0, !dbg !33
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %50, float 0.000000e+00) #4, !dbg !33
  %62 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %50, float 0.000000e+00) #4, !dbg !33
  %.04.i = select i1 %.not4.i, float %62, float %61, !dbg !33
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not5.i = icmp eq i32 %63, 0, !dbg !33
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %32, float %32) #4, !dbg !33
  %65 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %32, float %32) #4, !dbg !33
  %.02.i = select i1 %.not5.i, float %65, float %64, !dbg !33
  br label %__nv_tanhf.exit, !dbg !33

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %49, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !33
  %66 = fmul float %20, 6.250000e-02, !dbg !35
  %67 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %66, float 5.000000e+01) #4, !dbg !36
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not.i1 = icmp eq i32 %68, 0, !dbg !37
  %69 = tail call float @llvm.nvvm.fabs.ftz.f(float %67) #4, !dbg !37
  %70 = tail call float @llvm.nvvm.fabs.f(float %67) #4, !dbg !37
  %.01.i2 = select i1 %.not.i1, float %70, float %69, !dbg !37
  %71 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !37
  br i1 %71, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !37

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %72 = fmul float %.01.i2, 0x4007154760000000, !dbg !37
  %73 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %72) #4, !dbg !37
  %74 = fadd float %73, 1.000000e+00, !dbg !37
  %75 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %74) #5, !dbg !37, !srcloc !34
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not6.i4 = icmp eq i32 %76, 0, !dbg !37
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %75, float -2.000000e+00, float 1.000000e+00) #4, !dbg !37
  %78 = tail call float @llvm.nvvm.fma.rn.f(float %75, float -2.000000e+00, float 1.000000e+00) #4, !dbg !37
  %.03.i5 = select i1 %.not6.i4, float %78, float %77, !dbg !37
  %79 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !37
  %s.0.i6 = select i1 %79, float 1.000000e+00, float %.03.i5, !dbg !37
  %80 = bitcast float %s.0.i6 to i32, !dbg !37
  %81 = bitcast float %67 to i32, !dbg !37
  %82 = and i32 %81, -2147483648, !dbg !37
  %83 = or i32 %82, %80, !dbg !37
  %84 = bitcast i32 %83 to float, !dbg !37
  br label %__nv_tanhf.exit19, !dbg !37

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %85 = fmul float %67, %67, !dbg !37
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not1.i9 = icmp eq i32 %86, 0, !dbg !37
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %85, float 0xBFAAC795C0000000) #4, !dbg !37
  %88 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %85, float 0xBFAAC795C0000000) #4, !dbg !37
  %.06.i10 = select i1 %.not1.i9, float %88, float %87, !dbg !37
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not2.i11 = icmp eq i32 %89, 0, !dbg !37
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %85, float 0x3FC10B2820000000) #4, !dbg !37
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %85, float 0x3FC10B2820000000) #4, !dbg !37
  %.05.i12 = select i1 %.not2.i11, float %91, float %90, !dbg !37
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not3.i13 = icmp eq i32 %92, 0, !dbg !37
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %85, float 0xBFD5553DA0000000) #4, !dbg !37
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %85, float 0xBFD5553DA0000000) #4, !dbg !37
  %.0.i14 = select i1 %.not3.i13, float %94, float %93, !dbg !37
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not4.i15 = icmp eq i32 %95, 0, !dbg !37
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %85, float 0.000000e+00) #4, !dbg !37
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %85, float 0.000000e+00) #4, !dbg !37
  %.04.i16 = select i1 %.not4.i15, float %97, float %96, !dbg !37
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not5.i17 = icmp eq i32 %98, 0, !dbg !37
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %67, float %67) #4, !dbg !37
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %67, float %67) #4, !dbg !37
  %.02.i18 = select i1 %.not5.i17, float %100, float %99, !dbg !37
  br label %__nv_tanhf.exit19, !dbg !37

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %84, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !37
  %101 = fmul float %25, 6.250000e-02, !dbg !38
  %102 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %101, float 5.000000e+01) #4, !dbg !39
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i20 = icmp eq i32 %103, 0, !dbg !40
  %104 = tail call float @llvm.nvvm.fabs.ftz.f(float %102) #4, !dbg !40
  %105 = tail call float @llvm.nvvm.fabs.f(float %102) #4, !dbg !40
  %.01.i21 = select i1 %.not.i20, float %105, float %104, !dbg !40
  %106 = fcmp ult float %.01.i21, 0x3FE3333340000000, !dbg !40
  br i1 %106, label %__internal_fmad.exit3.i27, label %__internal_fmad.exit1.i22, !dbg !40

__internal_fmad.exit1.i22:                        ; preds = %__nv_tanhf.exit19
  %107 = fmul float %.01.i21, 0x4007154760000000, !dbg !40
  %108 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %107) #4, !dbg !40
  %109 = fadd float %108, 1.000000e+00, !dbg !40
  %110 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %109) #5, !dbg !40, !srcloc !34
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not6.i23 = icmp eq i32 %111, 0, !dbg !40
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %110, float -2.000000e+00, float 1.000000e+00) #4, !dbg !40
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %110, float -2.000000e+00, float 1.000000e+00) #4, !dbg !40
  %.03.i24 = select i1 %.not6.i23, float %113, float %112, !dbg !40
  %114 = fcmp oge float %.01.i21, 0x4022059680000000, !dbg !40
  %s.0.i25 = select i1 %114, float 1.000000e+00, float %.03.i24, !dbg !40
  %115 = bitcast float %s.0.i25 to i32, !dbg !40
  %116 = bitcast float %102 to i32, !dbg !40
  %117 = and i32 %116, -2147483648, !dbg !40
  %118 = or i32 %117, %115, !dbg !40
  %119 = bitcast i32 %118 to float, !dbg !40
  br label %__nv_tanhf.exit38, !dbg !40

__internal_fmad.exit3.i27:                        ; preds = %__nv_tanhf.exit19
  %120 = fmul float %102, %102, !dbg !40
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not1.i28 = icmp eq i32 %121, 0, !dbg !40
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %120, float 0xBFAAC795C0000000) #4, !dbg !40
  %123 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %120, float 0xBFAAC795C0000000) #4, !dbg !40
  %.06.i29 = select i1 %.not1.i28, float %123, float %122, !dbg !40
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not2.i30 = icmp eq i32 %124, 0, !dbg !40
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i29, float %120, float 0x3FC10B2820000000) #4, !dbg !40
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i29, float %120, float 0x3FC10B2820000000) #4, !dbg !40
  %.05.i31 = select i1 %.not2.i30, float %126, float %125, !dbg !40
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not3.i32 = icmp eq i32 %127, 0, !dbg !40
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i31, float %120, float 0xBFD5553DA0000000) #4, !dbg !40
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i31, float %120, float 0xBFD5553DA0000000) #4, !dbg !40
  %.0.i33 = select i1 %.not3.i32, float %129, float %128, !dbg !40
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not4.i34 = icmp eq i32 %130, 0, !dbg !40
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %120, float 0.000000e+00) #4, !dbg !40
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %120, float 0.000000e+00) #4, !dbg !40
  %.04.i35 = select i1 %.not4.i34, float %132, float %131, !dbg !40
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not5.i36 = icmp eq i32 %133, 0, !dbg !40
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %102, float %102) #4, !dbg !40
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %102, float %102) #4, !dbg !40
  %.02.i37 = select i1 %.not5.i36, float %135, float %134, !dbg !40
  br label %__nv_tanhf.exit38, !dbg !40

__nv_tanhf.exit38:                                ; preds = %__internal_fmad.exit1.i22, %__internal_fmad.exit3.i27
  %s.1.i26 = phi float [ %119, %__internal_fmad.exit1.i22 ], [ %.02.i37, %__internal_fmad.exit3.i27 ], !dbg !40
  %136 = fmul float %30, 6.250000e-02, !dbg !41
  %137 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %136, float 5.000000e+01) #4, !dbg !42
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not.i39 = icmp eq i32 %138, 0, !dbg !43
  %139 = tail call float @llvm.nvvm.fabs.ftz.f(float %137) #4, !dbg !43
  %140 = tail call float @llvm.nvvm.fabs.f(float %137) #4, !dbg !43
  %.01.i40 = select i1 %.not.i39, float %140, float %139, !dbg !43
  %141 = fcmp ult float %.01.i40, 0x3FE3333340000000, !dbg !43
  br i1 %141, label %__internal_fmad.exit3.i46, label %__internal_fmad.exit1.i41, !dbg !43

__internal_fmad.exit1.i41:                        ; preds = %__nv_tanhf.exit38
  %142 = fmul float %.01.i40, 0x4007154760000000, !dbg !43
  %143 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %142) #4, !dbg !43
  %144 = fadd float %143, 1.000000e+00, !dbg !43
  %145 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %144) #5, !dbg !43, !srcloc !34
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not6.i42 = icmp eq i32 %146, 0, !dbg !43
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %145, float -2.000000e+00, float 1.000000e+00) #4, !dbg !43
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %145, float -2.000000e+00, float 1.000000e+00) #4, !dbg !43
  %.03.i43 = select i1 %.not6.i42, float %148, float %147, !dbg !43
  %149 = fcmp oge float %.01.i40, 0x4022059680000000, !dbg !43
  %s.0.i44 = select i1 %149, float 1.000000e+00, float %.03.i43, !dbg !43
  %150 = bitcast float %s.0.i44 to i32, !dbg !43
  %151 = bitcast float %137 to i32, !dbg !43
  %152 = and i32 %151, -2147483648, !dbg !43
  %153 = or i32 %152, %150, !dbg !43
  %154 = bitcast i32 %153 to float, !dbg !43
  br label %__nv_tanhf.exit57, !dbg !43

__internal_fmad.exit3.i46:                        ; preds = %__nv_tanhf.exit38
  %155 = fmul float %137, %137, !dbg !43
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not1.i47 = icmp eq i32 %156, 0, !dbg !43
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %155, float 0xBFAAC795C0000000) #4, !dbg !43
  %158 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %155, float 0xBFAAC795C0000000) #4, !dbg !43
  %.06.i48 = select i1 %.not1.i47, float %158, float %157, !dbg !43
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not2.i49 = icmp eq i32 %159, 0, !dbg !43
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i48, float %155, float 0x3FC10B2820000000) #4, !dbg !43
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i48, float %155, float 0x3FC10B2820000000) #4, !dbg !43
  %.05.i50 = select i1 %.not2.i49, float %161, float %160, !dbg !43
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not3.i51 = icmp eq i32 %162, 0, !dbg !43
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %155, float 0xBFD5553DA0000000) #4, !dbg !43
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %155, float 0xBFD5553DA0000000) #4, !dbg !43
  %.0.i52 = select i1 %.not3.i51, float %164, float %163, !dbg !43
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not4.i53 = icmp eq i32 %165, 0, !dbg !43
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i52, float %155, float 0.000000e+00) #4, !dbg !43
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i52, float %155, float 0.000000e+00) #4, !dbg !43
  %.04.i54 = select i1 %.not4.i53, float %167, float %166, !dbg !43
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !43
  %.not5.i55 = icmp eq i32 %168, 0, !dbg !43
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %137, float %137) #4, !dbg !43
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %137, float %137) #4, !dbg !43
  %.02.i56 = select i1 %.not5.i55, float %170, float %169, !dbg !43
  br label %__nv_tanhf.exit57, !dbg !43

__nv_tanhf.exit57:                                ; preds = %__internal_fmad.exit1.i41, %__internal_fmad.exit3.i46
  %s.1.i45 = phi float [ %154, %__internal_fmad.exit1.i41 ], [ %.02.i56, %__internal_fmad.exit3.i46 ], !dbg !43
  %171 = fmul float %s.1.i, 5.000000e+01, !dbg !44
  %172 = srem i32 %9, 4, !dbg !45
  %173 = icmp slt i32 %172, 0, !dbg !46
  %174 = select i1 %173, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !47
  %175 = fadd float %174, %171, !dbg !48
  %176 = fmul float %s.1.i7, 5.000000e+01, !dbg !49
  %177 = icmp slt i32 %172, 1, !dbg !50
  %178 = select i1 %177, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !51
  %179 = fadd float %178, %176, !dbg !52
  %180 = fcmp ogt float %175, %179, !dbg !53
  %181 = fcmp uno float %175, 0.000000e+00, !dbg !57
  %182 = or i1 %181, %180, !dbg !58
  %183 = select i1 %182, float %175, float %179, !dbg !59
  %184 = fmul float %s.1.i26, 5.000000e+01, !dbg !60
  %185 = icmp slt i32 %172, 2, !dbg !61
  %186 = select i1 %185, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !62
  %187 = fadd float %186, %184, !dbg !63
  %188 = fcmp ogt float %183, %187, !dbg !64
  %189 = fcmp uno float %183, 0.000000e+00, !dbg !66
  %190 = or i1 %189, %188, !dbg !67
  %191 = select i1 %190, float %183, float %187, !dbg !68
  %192 = fmul float %s.1.i45, 5.000000e+01, !dbg !69
  %.not = icmp eq i32 %172, 3, !dbg !70
  %193 = select i1 %.not, float 0.000000e+00, float 0xC7EFE00000000000, !dbg !71
  %194 = fadd float %193, %192, !dbg !72
  %195 = fcmp ogt float %191, %194, !dbg !73
  %196 = fcmp uno float %191, 0.000000e+00, !dbg !75
  %197 = or i1 %196, %195, !dbg !76
  %198 = select i1 %197, float %191, float %194, !dbg !77
  %199 = fsub float %175, %198, !dbg !78
  %200 = fmul float %199, 0x3FF7154760000000, !dbg !79
  %201 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %200) #4, !dbg !79
  %202 = fsub float %179, %198, !dbg !80
  %203 = fmul float %202, 0x3FF7154760000000, !dbg !81
  %204 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %203) #4, !dbg !81
  %205 = fadd float %201, %204, !dbg !82
  %206 = fsub float %187, %198, !dbg !83
  %207 = fmul float %206, 0x3FF7154760000000, !dbg !84
  %208 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %207) #4, !dbg !84
  %209 = fadd float %205, %208, !dbg !85
  %210 = fsub float %194, %198, !dbg !86
  %211 = fmul float %210, 0x3FF7154760000000, !dbg !87
  %212 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %211) #4, !dbg !87
  %213 = fadd float %209, %212, !dbg !88
  %214 = sext i32 %9 to i64, !dbg !89
  %215 = getelementptr float, ptr addrspace(1) %1, i64 %214, !dbg !89
  %216 = bitcast float %198 to i32, !dbg !90
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %216, ptr addrspace(1) %215, i1 %10) #4, !dbg !90
  %217 = getelementptr float, ptr addrspace(1) %2, i64 %214, !dbg !91
  %218 = bitcast float %213 to i32, !dbg !92
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %218, ptr addrspace(1) %217, i1 %10) #4, !dbg !92
  ret void, !dbg !93
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: alwaysinline nounwind
define float @__nv_tanhf(float %a) local_unnamed_addr #1 {
__nv_fabsf.exit:
  %0 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not = icmp eq i32 %0, 0
  %1 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #4
  %2 = tail call float @llvm.nvvm.fabs.f(float %a) #4
  %.01 = select i1 %.not, float %2, float %1
  %3 = fcmp ult float %.01, 0x3FE3333340000000
  br i1 %3, label %__internal_fmad.exit3, label %__internal_fmad.exit1

__internal_fmad.exit1:                            ; preds = %__nv_fabsf.exit
  %4 = fmul float %.01, 0x4007154760000000
  %5 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4) #4
  %6 = fadd float %5, 1.000000e+00
  %7 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6) #5, !srcloc !34
  %8 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not6 = icmp eq i32 %8, 0
  %9 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7, float -2.000000e+00, float 1.000000e+00) #4
  %10 = tail call float @llvm.nvvm.fma.rn.f(float %7, float -2.000000e+00, float 1.000000e+00) #4
  %.03 = select i1 %.not6, float %10, float %9
  %11 = fcmp oge float %.01, 0x4022059680000000
  %s.0 = select i1 %11, float 1.000000e+00, float %.03
  %12 = bitcast float %s.0 to i32
  %13 = bitcast float %a to i32
  %14 = and i32 %13, -2147483648
  %15 = or i32 %14, %12
  %16 = bitcast i32 %15 to float
  br label %33

__internal_fmad.exit3:                            ; preds = %__nv_fabsf.exit
  %17 = fmul float %a, %a
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not1 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #4
  %20 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #4
  %.06 = select i1 %.not1, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not2 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06, float %17, float 0x3FC10B2820000000) #4
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.06, float %17, float 0x3FC10B2820000000) #4
  %.05 = select i1 %.not2, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not3 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %17, float 0xBFD5553DA0000000) #4
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %17, float 0xBFD5553DA0000000) #4
  %.0 = select i1 %.not3, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not4 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0, float %17, float 0.000000e+00) #4
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.0, float %17, float 0.000000e+00) #4
  %.04 = select i1 %.not4, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not5 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04, float %a, float %a) #4
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.04, float %a, float %a) #4
  %.02 = select i1 %.not5, float %32, float %31
  br label %33

33:                                               ; preds = %__internal_fmad.exit3, %__internal_fmad.exit1
  %s.1 = phi float [ %16, %__internal_fmad.exit1 ], [ %.02, %__internal_fmad.exit3 ]
  ret float %s.1
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "cruwg2uevra7cyyz7nuhvrjixwtziixzujv5r7y5t3ochkfymny4.py", directory: "/tmp/torchinductor_zeus/ru")
!4 = !{ptr @triton__0d1d2d3de, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2d3de, !"maxntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2d3de", linkageName: "triton__0d1d2d3de", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 36, scope: !7)
!11 = !DILocation(line: 20, column: 28, scope: !7)
!12 = !DILocation(line: 20, column: 33, scope: !7)
!13 = !DILocation(line: 21, column: 23, scope: !7)
!14 = !DILocation(line: 22, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 25, column: 77, scope: !7)
!19 = !DILocation(line: 26, column: 36, scope: !7)
!20 = !DILocation(line: 26, column: 31, scope: !7)
!21 = !DILocation(line: 26, column: 44, scope: !7)
!22 = !DILocation(line: 26, column: 84, scope: !7)
!23 = !DILocation(line: 27, column: 36, scope: !7)
!24 = !DILocation(line: 27, column: 31, scope: !7)
!25 = !DILocation(line: 27, column: 44, scope: !7)
!26 = !DILocation(line: 27, column: 84, scope: !7)
!27 = !DILocation(line: 28, column: 36, scope: !7)
!28 = !DILocation(line: 28, column: 31, scope: !7)
!29 = !DILocation(line: 28, column: 44, scope: !7)
!30 = !DILocation(line: 28, column: 84, scope: !7)
!31 = !DILocation(line: 30, column: 18, scope: !7)
!32 = !DILocation(line: 32, column: 18, scope: !7)
!33 = !DILocation(line: 33, column: 24, scope: !7)
!34 = !{i32 21046}
!35 = !DILocation(line: 46, column: 20, scope: !7)
!36 = !DILocation(line: 47, column: 20, scope: !7)
!37 = !DILocation(line: 48, column: 25, scope: !7)
!38 = !DILocation(line: 58, column: 20, scope: !7)
!39 = !DILocation(line: 59, column: 20, scope: !7)
!40 = !DILocation(line: 60, column: 25, scope: !7)
!41 = !DILocation(line: 70, column: 20, scope: !7)
!42 = !DILocation(line: 71, column: 20, scope: !7)
!43 = !DILocation(line: 72, column: 25, scope: !7)
!44 = !DILocation(line: 34, column: 18, scope: !7)
!45 = !DILocation(line: 24, column: 18, scope: !7)
!46 = !DILocation(line: 37, column: 19, scope: !7)
!47 = !DILocation(line: 43, column: 35, scope: !7)
!48 = !DILocation(line: 44, column: 19, scope: !7)
!49 = !DILocation(line: 49, column: 20, scope: !7)
!50 = !DILocation(line: 51, column: 21, scope: !7)
!51 = !DILocation(line: 54, column: 35, scope: !7)
!52 = !DILocation(line: 55, column: 20, scope: !7)
!53 = !DILocation(line: 36, column: 15, scope: !54, inlinedAt: !56)
!54 = distinct !DILexicalBlockFile(scope: !7, file: !55, discriminator: 0)
!55 = !DIFile(filename: "triton_helpers.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/torch/_inductor")
!56 = !DILocation(line: 57, column: 42, scope: !54)
!57 = !DILocation(line: 38, column: 21, scope: !54, inlinedAt: !56)
!58 = !DILocation(line: 38, column: 16, scope: !54, inlinedAt: !56)
!59 = !DILocation(line: 39, column: 29, scope: !54, inlinedAt: !56)
!60 = !DILocation(line: 61, column: 20, scope: !7)
!61 = !DILocation(line: 63, column: 21, scope: !7)
!62 = !DILocation(line: 66, column: 35, scope: !7)
!63 = !DILocation(line: 67, column: 20, scope: !7)
!64 = !DILocation(line: 36, column: 15, scope: !54, inlinedAt: !65)
!65 = !DILocation(line: 69, column: 42, scope: !54)
!66 = !DILocation(line: 38, column: 21, scope: !54, inlinedAt: !65)
!67 = !DILocation(line: 38, column: 16, scope: !54, inlinedAt: !65)
!68 = !DILocation(line: 39, column: 29, scope: !54, inlinedAt: !65)
!69 = !DILocation(line: 73, column: 20, scope: !7)
!70 = !DILocation(line: 75, column: 21, scope: !7)
!71 = !DILocation(line: 78, column: 35, scope: !7)
!72 = !DILocation(line: 79, column: 20, scope: !7)
!73 = !DILocation(line: 36, column: 15, scope: !54, inlinedAt: !74)
!74 = !DILocation(line: 81, column: 42, scope: !54)
!75 = !DILocation(line: 38, column: 21, scope: !54, inlinedAt: !74)
!76 = !DILocation(line: 38, column: 16, scope: !54, inlinedAt: !74)
!77 = !DILocation(line: 39, column: 29, scope: !54, inlinedAt: !74)
!78 = !DILocation(line: 82, column: 20, scope: !7)
!79 = !DILocation(line: 83, column: 19, scope: !7)
!80 = !DILocation(line: 84, column: 20, scope: !7)
!81 = !DILocation(line: 85, column: 19, scope: !7)
!82 = !DILocation(line: 86, column: 20, scope: !7)
!83 = !DILocation(line: 87, column: 20, scope: !7)
!84 = !DILocation(line: 88, column: 19, scope: !7)
!85 = !DILocation(line: 89, column: 20, scope: !7)
!86 = !DILocation(line: 90, column: 20, scope: !7)
!87 = !DILocation(line: 91, column: 19, scope: !7)
!88 = !DILocation(line: 92, column: 20, scope: !7)
!89 = !DILocation(line: 93, column: 25, scope: !7)
!90 = !DILocation(line: 93, column: 37, scope: !7)
!91 = !DILocation(line: 94, column: 25, scope: !7)
!92 = !DILocation(line: 94, column: 37, scope: !7)
!93 = !DILocation(line: 94, column: 4, scope: !7)
