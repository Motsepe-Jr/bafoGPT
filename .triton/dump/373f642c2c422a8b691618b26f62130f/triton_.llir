; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton__0d1d2d3de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !5 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %6 = and i32 %5, 31, !dbg !8
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !9
  %8 = shl i32 %7, 5, !dbg !10
  %9 = or i32 %8, %6, !dbg !11
  %10 = icmp slt i32 %9, 32, !dbg !12
  %11 = shl i32 %9, 2, !dbg !13
  %12 = sext i32 %11 to i64, !dbg !14
  %13 = getelementptr i16, ptr addrspace(1) %0, i64 %12, !dbg !14
  %14 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %13, i1 %10) #1, !dbg !15
  %15 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %14) #1, !dbg !16
  %16 = getelementptr float, ptr addrspace(1) %1, i64 %12, !dbg !17
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %10) #1, !dbg !18
  %18 = bitcast i32 %17 to float, !dbg !18
  %19 = or i32 %11, 1, !dbg !19
  %20 = sext i32 %19 to i64, !dbg !20
  %21 = getelementptr i16, ptr addrspace(1) %0, i64 %20, !dbg !20
  %22 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %21, i1 %10) #1, !dbg !21
  %23 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %22) #1, !dbg !22
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !23
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %10) #1, !dbg !24
  %26 = bitcast i32 %25 to float, !dbg !24
  %27 = or i32 %11, 2, !dbg !25
  %28 = sext i32 %27 to i64, !dbg !26
  %29 = getelementptr i16, ptr addrspace(1) %0, i64 %28, !dbg !26
  %30 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %29, i1 %10) #1, !dbg !27
  %31 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %30) #1, !dbg !28
  %32 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !29
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %10) #1, !dbg !30
  %34 = bitcast i32 %33 to float, !dbg !30
  %35 = or i32 %11, 3, !dbg !31
  %36 = sext i32 %35 to i64, !dbg !32
  %37 = getelementptr i16, ptr addrspace(1) %0, i64 %36, !dbg !32
  %38 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %37, i1 %10) #1, !dbg !33
  %39 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %38) #1, !dbg !34
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !35
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %10) #1, !dbg !36
  %42 = bitcast i32 %41 to float, !dbg !36
  %43 = fmul float %15, %18, !dbg !37
  %44 = fmul float %23, %26, !dbg !38
  %45 = fadd float %43, %44, !dbg !39
  %46 = fmul float %31, %34, !dbg !40
  %47 = fadd float %45, %46, !dbg !41
  %48 = fmul float %39, %42, !dbg !42
  %49 = fadd float %47, %48, !dbg !43
  %50 = sext i32 %9 to i64, !dbg !44
  %51 = getelementptr float, ptr addrspace(1) %2, i64 %50, !dbg !44
  %52 = bitcast float %49 to i32, !dbg !45
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %52, ptr addrspace(1) %51, i1 %10) #1, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "cqhqlfvv5tyfgdprppgr3uv6nx5axbpxdyxjscppubevwbvjlcve.py", directory: "/tmp/torchinductor_zeus/qh")
!3 = !{ptr @triton__0d1d2d3de, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d2d3de, !"maxntidx", i32 32}
!5 = distinct !DISubprogram(name: "triton__0d1d2d3de", linkageName: "triton__0d1d2d3de", scope: !2, file: !2, line: 18, type: !6, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 21, column: 36, scope: !5)
!9 = !DILocation(line: 20, column: 28, scope: !5)
!10 = !DILocation(line: 20, column: 33, scope: !5)
!11 = !DILocation(line: 21, column: 23, scope: !5)
!12 = !DILocation(line: 22, column: 21, scope: !5)
!13 = !DILocation(line: 24, column: 32, scope: !5)
!14 = !DILocation(line: 24, column: 30, scope: !5)
!15 = !DILocation(line: 24, column: 37, scope: !5)
!16 = !DILocation(line: 24, column: 77, scope: !5)
!17 = !DILocation(line: 25, column: 30, scope: !5)
!18 = !DILocation(line: 25, column: 37, scope: !5)
!19 = !DILocation(line: 26, column: 35, scope: !5)
!20 = !DILocation(line: 26, column: 30, scope: !5)
!21 = !DILocation(line: 26, column: 43, scope: !5)
!22 = !DILocation(line: 26, column: 83, scope: !5)
!23 = !DILocation(line: 27, column: 30, scope: !5)
!24 = !DILocation(line: 27, column: 43, scope: !5)
!25 = !DILocation(line: 28, column: 35, scope: !5)
!26 = !DILocation(line: 28, column: 30, scope: !5)
!27 = !DILocation(line: 28, column: 43, scope: !5)
!28 = !DILocation(line: 28, column: 83, scope: !5)
!29 = !DILocation(line: 29, column: 31, scope: !5)
!30 = !DILocation(line: 29, column: 44, scope: !5)
!31 = !DILocation(line: 30, column: 36, scope: !5)
!32 = !DILocation(line: 30, column: 31, scope: !5)
!33 = !DILocation(line: 30, column: 44, scope: !5)
!34 = !DILocation(line: 30, column: 84, scope: !5)
!35 = !DILocation(line: 31, column: 31, scope: !5)
!36 = !DILocation(line: 31, column: 44, scope: !5)
!37 = !DILocation(line: 33, column: 18, scope: !5)
!38 = !DILocation(line: 35, column: 18, scope: !5)
!39 = !DILocation(line: 36, column: 18, scope: !5)
!40 = !DILocation(line: 38, column: 20, scope: !5)
!41 = !DILocation(line: 39, column: 19, scope: !5)
!42 = !DILocation(line: 41, column: 20, scope: !5)
!43 = !DILocation(line: 42, column: 20, scope: !5)
!44 = !DILocation(line: 43, column: 25, scope: !5)
!45 = !DILocation(line: 43, column: 37, scope: !5)
!46 = !DILocation(line: 43, column: 4, scope: !5)
