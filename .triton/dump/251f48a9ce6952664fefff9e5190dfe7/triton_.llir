; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8]
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2d3d4de5de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %8 = lshr i32 %7, 5, !dbg !10
  %urem = and i32 %7, 255, !dbg !10
  %9 = shl nuw nsw i32 %urem, 3, !dbg !10
  %10 = or i32 %9, 1, !dbg !10
  %11 = or i32 %9, 2, !dbg !10
  %12 = or i32 %9, 3, !dbg !10
  %13 = shl nuw nsw i32 %urem, 2, !dbg !10
  %14 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #6, !dbg !11
  %15 = srem i32 %14, 8192, !dbg !12
  %16 = shl i32 %14, 13, !dbg !13
  %17 = sub nsw i32 %10, %15
  %18 = sub nsw i32 %11, %15
  %19 = sub nsw i32 %12, %15
  %20 = insertelement <4 x i32> poison, i32 %9, i64 0, !dbg !10
  %21 = shufflevector <4 x i32> %20, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !10
  %22 = or <4 x i32> %21, <i32 7, i32 6, i32 5, i32 4>, !dbg !10
  %23 = insertelement <4 x i32> poison, i32 %15, i64 0
  %24 = shufflevector <4 x i32> %23, <4 x i32> poison, <4 x i32> zeroinitializer
  %25 = sub nsw <4 x i32> %22, %24
  %invariant.op = sub nsw i32 0, %17, !dbg !14
  %invariant.op512 = sub nsw i32 0, %18, !dbg !14
  %invariant.op513 = sub nsw i32 0, %19, !dbg !14
  %26 = sub nsw <4 x i32> zeroinitializer, %25, !dbg !14
  %27 = insertelement <2 x i32> <i32 poison, i32 0>, i32 %invariant.op, i64 0, !dbg !15
  br label %28, !dbg !14

28:                                               ; preds = %6, %__nv_tanhf.exit480
  %29 = phi float [ 0xFFF0000000000000, %6 ], [ %377, %__nv_tanhf.exit480 ]
  %30 = phi float [ 0xFFF0000000000000, %6 ], [ %378, %__nv_tanhf.exit480 ]
  %31 = phi i32 [ 0, %6 ], [ %380, %__nv_tanhf.exit480 ]
  %32 = phi <2 x float> [ <float 0xFFF0000000000000, float 0xFFF0000000000000>, %6 ], [ %376, %__nv_tanhf.exit480 ]
  %33 = phi <4 x float> [ <float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000, float 0xFFF0000000000000>, %6 ], [ %379, %__nv_tanhf.exit480 ]
  %34 = or i32 %31, %9, !dbg !16
  %35 = add i32 %34, %16, !dbg !17
  %36 = sext i32 %35 to i64, !dbg !18
  %37 = getelementptr i16, ptr addrspace(1) %0, i64 %36, !dbg !18
  %38 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %37, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !19
  %39 = extractvalue { i32, i32, i32, i32 } %38, 0, !dbg !19
  %40 = extractvalue { i32, i32, i32, i32 } %38, 1, !dbg !19
  %41 = extractvalue { i32, i32, i32, i32 } %38, 2, !dbg !19
  %42 = extractvalue { i32, i32, i32, i32 } %38, 3, !dbg !19
  %43 = trunc i32 %39 to i16, !dbg !19
  %extelt.offset24 = lshr i32 %39, 16, !dbg !19
  %44 = trunc i32 %extelt.offset24 to i16, !dbg !19
  %45 = trunc i32 %40 to i16, !dbg !19
  %extelt.offset25 = lshr i32 %40, 16, !dbg !19
  %46 = trunc i32 %extelt.offset25 to i16, !dbg !19
  %47 = trunc i32 %41 to i16, !dbg !19
  %extelt.offset26 = lshr i32 %41, 16, !dbg !19
  %48 = trunc i32 %extelt.offset26 to i16, !dbg !19
  %49 = trunc i32 %42 to i16, !dbg !19
  %extelt.offset27 = lshr i32 %42, 16, !dbg !19
  %50 = trunc i32 %extelt.offset27 to i16, !dbg !19
  %51 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %43) #6, !dbg !20
  %52 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %44) #6, !dbg !20
  %53 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %45) #6, !dbg !20
  %54 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %46) #6, !dbg !20
  %55 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %47) #6, !dbg !20
  %56 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %48) #6, !dbg !20
  %57 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %49) #6, !dbg !20
  %58 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %50) #6, !dbg !20
  %59 = fmul float %51, 6.250000e-02, !dbg !21
  %60 = fmul float %52, 6.250000e-02, !dbg !21
  %61 = fmul float %53, 6.250000e-02, !dbg !21
  %62 = fmul float %54, 6.250000e-02, !dbg !21
  %63 = fmul float %55, 6.250000e-02, !dbg !21
  %64 = fmul float %56, 6.250000e-02, !dbg !21
  %65 = fmul float %57, 6.250000e-02, !dbg !21
  %66 = fmul float %58, 6.250000e-02, !dbg !21
  %67 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %59, float 5.000000e+01) #6, !dbg !22
  %68 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %60, float 5.000000e+01) #6, !dbg !22
  %69 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %61, float 5.000000e+01) #6, !dbg !22
  %70 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %62, float 5.000000e+01) #6, !dbg !22
  %71 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %63, float 5.000000e+01) #6, !dbg !22
  %72 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %64, float 5.000000e+01) #6, !dbg !22
  %73 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %65, float 5.000000e+01) #6, !dbg !22
  %74 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %66, float 5.000000e+01) #6, !dbg !22
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i329 = icmp eq i32 %75, 0, !dbg !23
  %76 = tail call float @llvm.nvvm.fabs.ftz.f(float %67) #6, !dbg !23
  %77 = tail call float @llvm.nvvm.fabs.f(float %67) #6, !dbg !23
  %.01.i330 = select i1 %.not.i329, float %77, float %76, !dbg !23
  %78 = fcmp ult float %.01.i330, 0x3FE3333340000000, !dbg !23
  br i1 %78, label %__internal_fmad.exit3.i336, label %__internal_fmad.exit1.i331, !dbg !23

__internal_fmad.exit1.i331:                       ; preds = %28
  %79 = fmul float %.01.i330, 0x4007154760000000, !dbg !23
  %80 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %79) #6, !dbg !23
  %81 = fadd float %80, 1.000000e+00, !dbg !23
  %82 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %81) #7, !dbg !23, !srcloc !24
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i332 = icmp eq i32 %83, 0, !dbg !23
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %82, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %82, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i333 = select i1 %.not6.i332, float %85, float %84, !dbg !23
  %86 = fcmp oge float %.01.i330, 0x4022059680000000, !dbg !23
  %s.0.i334 = select i1 %86, float 1.000000e+00, float %.03.i333, !dbg !23
  %87 = bitcast float %s.0.i334 to i32, !dbg !23
  %88 = bitcast float %67 to i32, !dbg !23
  %89 = and i32 %88, -2147483648, !dbg !23
  %90 = or i32 %89, %87, !dbg !23
  %91 = bitcast i32 %90 to float, !dbg !23
  br label %__nv_tanhf.exit347, !dbg !23

__internal_fmad.exit3.i336:                       ; preds = %28
  %92 = fmul float %67, %67, !dbg !23
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i337 = icmp eq i32 %93, 0, !dbg !23
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %92, float 0xBFAAC795C0000000) #6, !dbg !23
  %95 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %92, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i338 = select i1 %.not1.i337, float %95, float %94, !dbg !23
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i339 = icmp eq i32 %96, 0, !dbg !23
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i338, float %92, float 0x3FC10B2820000000) #6, !dbg !23
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i338, float %92, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i340 = select i1 %.not2.i339, float %98, float %97, !dbg !23
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i341 = icmp eq i32 %99, 0, !dbg !23
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i340, float %92, float 0xBFD5553DA0000000) #6, !dbg !23
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i340, float %92, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i342 = select i1 %.not3.i341, float %101, float %100, !dbg !23
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i343 = icmp eq i32 %102, 0, !dbg !23
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i342, float %92, float 0.000000e+00) #6, !dbg !23
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i342, float %92, float 0.000000e+00) #6, !dbg !23
  %.04.i344 = select i1 %.not4.i343, float %104, float %103, !dbg !23
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i345 = icmp eq i32 %105, 0, !dbg !23
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i344, float %67, float %67) #6, !dbg !23
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i344, float %67, float %67) #6, !dbg !23
  %.02.i346 = select i1 %.not5.i345, float %107, float %106, !dbg !23
  br label %__nv_tanhf.exit347, !dbg !23

__nv_tanhf.exit347:                               ; preds = %__internal_fmad.exit1.i331, %__internal_fmad.exit3.i336
  %s.1.i335 = phi float [ %91, %__internal_fmad.exit1.i331 ], [ %.02.i346, %__internal_fmad.exit3.i336 ], !dbg !23
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i348 = icmp eq i32 %108, 0, !dbg !23
  %109 = tail call float @llvm.nvvm.fabs.ftz.f(float %68) #6, !dbg !23
  %110 = tail call float @llvm.nvvm.fabs.f(float %68) #6, !dbg !23
  %.01.i349 = select i1 %.not.i348, float %110, float %109, !dbg !23
  %111 = fcmp ult float %.01.i349, 0x3FE3333340000000, !dbg !23
  br i1 %111, label %__internal_fmad.exit3.i355, label %__internal_fmad.exit1.i350, !dbg !23

__internal_fmad.exit1.i350:                       ; preds = %__nv_tanhf.exit347
  %112 = fmul float %.01.i349, 0x4007154760000000, !dbg !23
  %113 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %112) #6, !dbg !23
  %114 = fadd float %113, 1.000000e+00, !dbg !23
  %115 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %114) #7, !dbg !23, !srcloc !24
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i351 = icmp eq i32 %116, 0, !dbg !23
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %115, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %115, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i352 = select i1 %.not6.i351, float %118, float %117, !dbg !23
  %119 = fcmp oge float %.01.i349, 0x4022059680000000, !dbg !23
  %s.0.i353 = select i1 %119, float 1.000000e+00, float %.03.i352, !dbg !23
  %120 = bitcast float %s.0.i353 to i32, !dbg !23
  %121 = bitcast float %68 to i32, !dbg !23
  %122 = and i32 %121, -2147483648, !dbg !23
  %123 = or i32 %122, %120, !dbg !23
  %124 = bitcast i32 %123 to float, !dbg !23
  br label %__nv_tanhf.exit366, !dbg !23

__internal_fmad.exit3.i355:                       ; preds = %__nv_tanhf.exit347
  %125 = fmul float %68, %68, !dbg !23
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i356 = icmp eq i32 %126, 0, !dbg !23
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %125, float 0xBFAAC795C0000000) #6, !dbg !23
  %128 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %125, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i357 = select i1 %.not1.i356, float %128, float %127, !dbg !23
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i358 = icmp eq i32 %129, 0, !dbg !23
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i357, float %125, float 0x3FC10B2820000000) #6, !dbg !23
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i357, float %125, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i359 = select i1 %.not2.i358, float %131, float %130, !dbg !23
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i360 = icmp eq i32 %132, 0, !dbg !23
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i359, float %125, float 0xBFD5553DA0000000) #6, !dbg !23
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i359, float %125, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i361 = select i1 %.not3.i360, float %134, float %133, !dbg !23
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i362 = icmp eq i32 %135, 0, !dbg !23
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i361, float %125, float 0.000000e+00) #6, !dbg !23
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i361, float %125, float 0.000000e+00) #6, !dbg !23
  %.04.i363 = select i1 %.not4.i362, float %137, float %136, !dbg !23
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i364 = icmp eq i32 %138, 0, !dbg !23
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i363, float %68, float %68) #6, !dbg !23
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i363, float %68, float %68) #6, !dbg !23
  %.02.i365 = select i1 %.not5.i364, float %140, float %139, !dbg !23
  br label %__nv_tanhf.exit366, !dbg !23

__nv_tanhf.exit366:                               ; preds = %__internal_fmad.exit1.i350, %__internal_fmad.exit3.i355
  %s.1.i354 = phi float [ %124, %__internal_fmad.exit1.i350 ], [ %.02.i365, %__internal_fmad.exit3.i355 ], !dbg !23
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i367 = icmp eq i32 %141, 0, !dbg !23
  %142 = tail call float @llvm.nvvm.fabs.ftz.f(float %69) #6, !dbg !23
  %143 = tail call float @llvm.nvvm.fabs.f(float %69) #6, !dbg !23
  %.01.i368 = select i1 %.not.i367, float %143, float %142, !dbg !23
  %144 = fcmp ult float %.01.i368, 0x3FE3333340000000, !dbg !23
  br i1 %144, label %__internal_fmad.exit3.i374, label %__internal_fmad.exit1.i369, !dbg !23

__internal_fmad.exit1.i369:                       ; preds = %__nv_tanhf.exit366
  %145 = fmul float %.01.i368, 0x4007154760000000, !dbg !23
  %146 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %145) #6, !dbg !23
  %147 = fadd float %146, 1.000000e+00, !dbg !23
  %148 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %147) #7, !dbg !23, !srcloc !24
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i370 = icmp eq i32 %149, 0, !dbg !23
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %148, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i371 = select i1 %.not6.i370, float %151, float %150, !dbg !23
  %152 = fcmp oge float %.01.i368, 0x4022059680000000, !dbg !23
  %s.0.i372 = select i1 %152, float 1.000000e+00, float %.03.i371, !dbg !23
  %153 = bitcast float %s.0.i372 to i32, !dbg !23
  %154 = bitcast float %69 to i32, !dbg !23
  %155 = and i32 %154, -2147483648, !dbg !23
  %156 = or i32 %155, %153, !dbg !23
  %157 = bitcast i32 %156 to float, !dbg !23
  br label %__nv_tanhf.exit385, !dbg !23

__internal_fmad.exit3.i374:                       ; preds = %__nv_tanhf.exit366
  %158 = fmul float %69, %69, !dbg !23
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i375 = icmp eq i32 %159, 0, !dbg !23
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %158, float 0xBFAAC795C0000000) #6, !dbg !23
  %161 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %158, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i376 = select i1 %.not1.i375, float %161, float %160, !dbg !23
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i377 = icmp eq i32 %162, 0, !dbg !23
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i376, float %158, float 0x3FC10B2820000000) #6, !dbg !23
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i376, float %158, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i378 = select i1 %.not2.i377, float %164, float %163, !dbg !23
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i379 = icmp eq i32 %165, 0, !dbg !23
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i378, float %158, float 0xBFD5553DA0000000) #6, !dbg !23
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i378, float %158, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i380 = select i1 %.not3.i379, float %167, float %166, !dbg !23
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i381 = icmp eq i32 %168, 0, !dbg !23
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i380, float %158, float 0.000000e+00) #6, !dbg !23
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i380, float %158, float 0.000000e+00) #6, !dbg !23
  %.04.i382 = select i1 %.not4.i381, float %170, float %169, !dbg !23
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i383 = icmp eq i32 %171, 0, !dbg !23
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i382, float %69, float %69) #6, !dbg !23
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i382, float %69, float %69) #6, !dbg !23
  %.02.i384 = select i1 %.not5.i383, float %173, float %172, !dbg !23
  br label %__nv_tanhf.exit385, !dbg !23

__nv_tanhf.exit385:                               ; preds = %__internal_fmad.exit1.i369, %__internal_fmad.exit3.i374
  %s.1.i373 = phi float [ %157, %__internal_fmad.exit1.i369 ], [ %.02.i384, %__internal_fmad.exit3.i374 ], !dbg !23
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i386 = icmp eq i32 %174, 0, !dbg !23
  %175 = tail call float @llvm.nvvm.fabs.ftz.f(float %70) #6, !dbg !23
  %176 = tail call float @llvm.nvvm.fabs.f(float %70) #6, !dbg !23
  %.01.i387 = select i1 %.not.i386, float %176, float %175, !dbg !23
  %177 = fcmp ult float %.01.i387, 0x3FE3333340000000, !dbg !23
  br i1 %177, label %__internal_fmad.exit3.i393, label %__internal_fmad.exit1.i388, !dbg !23

__internal_fmad.exit1.i388:                       ; preds = %__nv_tanhf.exit385
  %178 = fmul float %.01.i387, 0x4007154760000000, !dbg !23
  %179 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %178) #6, !dbg !23
  %180 = fadd float %179, 1.000000e+00, !dbg !23
  %181 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %180) #7, !dbg !23, !srcloc !24
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i389 = icmp eq i32 %182, 0, !dbg !23
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %181, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %184 = tail call float @llvm.nvvm.fma.rn.f(float %181, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i390 = select i1 %.not6.i389, float %184, float %183, !dbg !23
  %185 = fcmp oge float %.01.i387, 0x4022059680000000, !dbg !23
  %s.0.i391 = select i1 %185, float 1.000000e+00, float %.03.i390, !dbg !23
  %186 = bitcast float %s.0.i391 to i32, !dbg !23
  %187 = bitcast float %70 to i32, !dbg !23
  %188 = and i32 %187, -2147483648, !dbg !23
  %189 = or i32 %188, %186, !dbg !23
  %190 = bitcast i32 %189 to float, !dbg !23
  br label %__nv_tanhf.exit404, !dbg !23

__internal_fmad.exit3.i393:                       ; preds = %__nv_tanhf.exit385
  %191 = fmul float %70, %70, !dbg !23
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i394 = icmp eq i32 %192, 0, !dbg !23
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %191, float 0xBFAAC795C0000000) #6, !dbg !23
  %194 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %191, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i395 = select i1 %.not1.i394, float %194, float %193, !dbg !23
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i396 = icmp eq i32 %195, 0, !dbg !23
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i395, float %191, float 0x3FC10B2820000000) #6, !dbg !23
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i395, float %191, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i397 = select i1 %.not2.i396, float %197, float %196, !dbg !23
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i398 = icmp eq i32 %198, 0, !dbg !23
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i397, float %191, float 0xBFD5553DA0000000) #6, !dbg !23
  %200 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i397, float %191, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i399 = select i1 %.not3.i398, float %200, float %199, !dbg !23
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i400 = icmp eq i32 %201, 0, !dbg !23
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i399, float %191, float 0.000000e+00) #6, !dbg !23
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i399, float %191, float 0.000000e+00) #6, !dbg !23
  %.04.i401 = select i1 %.not4.i400, float %203, float %202, !dbg !23
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i402 = icmp eq i32 %204, 0, !dbg !23
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i401, float %70, float %70) #6, !dbg !23
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i401, float %70, float %70) #6, !dbg !23
  %.02.i403 = select i1 %.not5.i402, float %206, float %205, !dbg !23
  br label %__nv_tanhf.exit404, !dbg !23

__nv_tanhf.exit404:                               ; preds = %__internal_fmad.exit1.i388, %__internal_fmad.exit3.i393
  %s.1.i392 = phi float [ %190, %__internal_fmad.exit1.i388 ], [ %.02.i403, %__internal_fmad.exit3.i393 ], !dbg !23
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i405 = icmp eq i32 %207, 0, !dbg !23
  %208 = tail call float @llvm.nvvm.fabs.ftz.f(float %71) #6, !dbg !23
  %209 = tail call float @llvm.nvvm.fabs.f(float %71) #6, !dbg !23
  %.01.i406 = select i1 %.not.i405, float %209, float %208, !dbg !23
  %210 = fcmp ult float %.01.i406, 0x3FE3333340000000, !dbg !23
  br i1 %210, label %__internal_fmad.exit3.i412, label %__internal_fmad.exit1.i407, !dbg !23

__internal_fmad.exit1.i407:                       ; preds = %__nv_tanhf.exit404
  %211 = fmul float %.01.i406, 0x4007154760000000, !dbg !23
  %212 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %211) #6, !dbg !23
  %213 = fadd float %212, 1.000000e+00, !dbg !23
  %214 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %213) #7, !dbg !23, !srcloc !24
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i408 = icmp eq i32 %215, 0, !dbg !23
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %214, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %214, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i409 = select i1 %.not6.i408, float %217, float %216, !dbg !23
  %218 = fcmp oge float %.01.i406, 0x4022059680000000, !dbg !23
  %s.0.i410 = select i1 %218, float 1.000000e+00, float %.03.i409, !dbg !23
  %219 = bitcast float %s.0.i410 to i32, !dbg !23
  %220 = bitcast float %71 to i32, !dbg !23
  %221 = and i32 %220, -2147483648, !dbg !23
  %222 = or i32 %221, %219, !dbg !23
  %223 = bitcast i32 %222 to float, !dbg !23
  br label %__nv_tanhf.exit423, !dbg !23

__internal_fmad.exit3.i412:                       ; preds = %__nv_tanhf.exit404
  %224 = fmul float %71, %71, !dbg !23
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i413 = icmp eq i32 %225, 0, !dbg !23
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %224, float 0xBFAAC795C0000000) #6, !dbg !23
  %227 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %224, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i414 = select i1 %.not1.i413, float %227, float %226, !dbg !23
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i415 = icmp eq i32 %228, 0, !dbg !23
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i414, float %224, float 0x3FC10B2820000000) #6, !dbg !23
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i414, float %224, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i416 = select i1 %.not2.i415, float %230, float %229, !dbg !23
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i417 = icmp eq i32 %231, 0, !dbg !23
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i416, float %224, float 0xBFD5553DA0000000) #6, !dbg !23
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i416, float %224, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i418 = select i1 %.not3.i417, float %233, float %232, !dbg !23
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i419 = icmp eq i32 %234, 0, !dbg !23
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i418, float %224, float 0.000000e+00) #6, !dbg !23
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i418, float %224, float 0.000000e+00) #6, !dbg !23
  %.04.i420 = select i1 %.not4.i419, float %236, float %235, !dbg !23
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i421 = icmp eq i32 %237, 0, !dbg !23
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i420, float %71, float %71) #6, !dbg !23
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i420, float %71, float %71) #6, !dbg !23
  %.02.i422 = select i1 %.not5.i421, float %239, float %238, !dbg !23
  br label %__nv_tanhf.exit423, !dbg !23

__nv_tanhf.exit423:                               ; preds = %__internal_fmad.exit1.i407, %__internal_fmad.exit3.i412
  %s.1.i411 = phi float [ %223, %__internal_fmad.exit1.i407 ], [ %.02.i422, %__internal_fmad.exit3.i412 ], !dbg !23
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i424 = icmp eq i32 %240, 0, !dbg !23
  %241 = tail call float @llvm.nvvm.fabs.ftz.f(float %72) #6, !dbg !23
  %242 = tail call float @llvm.nvvm.fabs.f(float %72) #6, !dbg !23
  %.01.i425 = select i1 %.not.i424, float %242, float %241, !dbg !23
  %243 = fcmp ult float %.01.i425, 0x3FE3333340000000, !dbg !23
  br i1 %243, label %__internal_fmad.exit3.i431, label %__internal_fmad.exit1.i426, !dbg !23

__internal_fmad.exit1.i426:                       ; preds = %__nv_tanhf.exit423
  %244 = fmul float %.01.i425, 0x4007154760000000, !dbg !23
  %245 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %244) #6, !dbg !23
  %246 = fadd float %245, 1.000000e+00, !dbg !23
  %247 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %246) #7, !dbg !23, !srcloc !24
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i427 = icmp eq i32 %248, 0, !dbg !23
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %247, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %247, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i428 = select i1 %.not6.i427, float %250, float %249, !dbg !23
  %251 = fcmp oge float %.01.i425, 0x4022059680000000, !dbg !23
  %s.0.i429 = select i1 %251, float 1.000000e+00, float %.03.i428, !dbg !23
  %252 = bitcast float %s.0.i429 to i32, !dbg !23
  %253 = bitcast float %72 to i32, !dbg !23
  %254 = and i32 %253, -2147483648, !dbg !23
  %255 = or i32 %254, %252, !dbg !23
  %256 = bitcast i32 %255 to float, !dbg !23
  br label %__nv_tanhf.exit442, !dbg !23

__internal_fmad.exit3.i431:                       ; preds = %__nv_tanhf.exit423
  %257 = fmul float %72, %72, !dbg !23
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i432 = icmp eq i32 %258, 0, !dbg !23
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %257, float 0xBFAAC795C0000000) #6, !dbg !23
  %260 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %257, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i433 = select i1 %.not1.i432, float %260, float %259, !dbg !23
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i434 = icmp eq i32 %261, 0, !dbg !23
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i433, float %257, float 0x3FC10B2820000000) #6, !dbg !23
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i433, float %257, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i435 = select i1 %.not2.i434, float %263, float %262, !dbg !23
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i436 = icmp eq i32 %264, 0, !dbg !23
  %265 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i435, float %257, float 0xBFD5553DA0000000) #6, !dbg !23
  %266 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i435, float %257, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i437 = select i1 %.not3.i436, float %266, float %265, !dbg !23
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i438 = icmp eq i32 %267, 0, !dbg !23
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i437, float %257, float 0.000000e+00) #6, !dbg !23
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i437, float %257, float 0.000000e+00) #6, !dbg !23
  %.04.i439 = select i1 %.not4.i438, float %269, float %268, !dbg !23
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i440 = icmp eq i32 %270, 0, !dbg !23
  %271 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i439, float %72, float %72) #6, !dbg !23
  %272 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i439, float %72, float %72) #6, !dbg !23
  %.02.i441 = select i1 %.not5.i440, float %272, float %271, !dbg !23
  br label %__nv_tanhf.exit442, !dbg !23

__nv_tanhf.exit442:                               ; preds = %__internal_fmad.exit1.i426, %__internal_fmad.exit3.i431
  %s.1.i430 = phi float [ %256, %__internal_fmad.exit1.i426 ], [ %.02.i441, %__internal_fmad.exit3.i431 ], !dbg !23
  %273 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i443 = icmp eq i32 %273, 0, !dbg !23
  %274 = tail call float @llvm.nvvm.fabs.ftz.f(float %73) #6, !dbg !23
  %275 = tail call float @llvm.nvvm.fabs.f(float %73) #6, !dbg !23
  %.01.i444 = select i1 %.not.i443, float %275, float %274, !dbg !23
  %276 = fcmp ult float %.01.i444, 0x3FE3333340000000, !dbg !23
  br i1 %276, label %__internal_fmad.exit3.i450, label %__internal_fmad.exit1.i445, !dbg !23

__internal_fmad.exit1.i445:                       ; preds = %__nv_tanhf.exit442
  %277 = fmul float %.01.i444, 0x4007154760000000, !dbg !23
  %278 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %277) #6, !dbg !23
  %279 = fadd float %278, 1.000000e+00, !dbg !23
  %280 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %279) #7, !dbg !23, !srcloc !24
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i446 = icmp eq i32 %281, 0, !dbg !23
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %280, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %280, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i447 = select i1 %.not6.i446, float %283, float %282, !dbg !23
  %284 = fcmp oge float %.01.i444, 0x4022059680000000, !dbg !23
  %s.0.i448 = select i1 %284, float 1.000000e+00, float %.03.i447, !dbg !23
  %285 = bitcast float %s.0.i448 to i32, !dbg !23
  %286 = bitcast float %73 to i32, !dbg !23
  %287 = and i32 %286, -2147483648, !dbg !23
  %288 = or i32 %287, %285, !dbg !23
  %289 = bitcast i32 %288 to float, !dbg !23
  br label %__nv_tanhf.exit461, !dbg !23

__internal_fmad.exit3.i450:                       ; preds = %__nv_tanhf.exit442
  %290 = fmul float %73, %73, !dbg !23
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i451 = icmp eq i32 %291, 0, !dbg !23
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %290, float 0xBFAAC795C0000000) #6, !dbg !23
  %293 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %290, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i452 = select i1 %.not1.i451, float %293, float %292, !dbg !23
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i453 = icmp eq i32 %294, 0, !dbg !23
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i452, float %290, float 0x3FC10B2820000000) #6, !dbg !23
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i452, float %290, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i454 = select i1 %.not2.i453, float %296, float %295, !dbg !23
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i455 = icmp eq i32 %297, 0, !dbg !23
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i454, float %290, float 0xBFD5553DA0000000) #6, !dbg !23
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i454, float %290, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i456 = select i1 %.not3.i455, float %299, float %298, !dbg !23
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i457 = icmp eq i32 %300, 0, !dbg !23
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i456, float %290, float 0.000000e+00) #6, !dbg !23
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i456, float %290, float 0.000000e+00) #6, !dbg !23
  %.04.i458 = select i1 %.not4.i457, float %302, float %301, !dbg !23
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i459 = icmp eq i32 %303, 0, !dbg !23
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i458, float %73, float %73) #6, !dbg !23
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i458, float %73, float %73) #6, !dbg !23
  %.02.i460 = select i1 %.not5.i459, float %305, float %304, !dbg !23
  br label %__nv_tanhf.exit461, !dbg !23

__nv_tanhf.exit461:                               ; preds = %__internal_fmad.exit1.i445, %__internal_fmad.exit3.i450
  %s.1.i449 = phi float [ %289, %__internal_fmad.exit1.i445 ], [ %.02.i460, %__internal_fmad.exit3.i450 ], !dbg !23
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not.i462 = icmp eq i32 %306, 0, !dbg !23
  %307 = tail call float @llvm.nvvm.fabs.ftz.f(float %74) #6, !dbg !23
  %308 = tail call float @llvm.nvvm.fabs.f(float %74) #6, !dbg !23
  %.01.i463 = select i1 %.not.i462, float %308, float %307, !dbg !23
  %309 = fcmp ult float %.01.i463, 0x3FE3333340000000, !dbg !23
  br i1 %309, label %__internal_fmad.exit3.i469, label %__internal_fmad.exit1.i464, !dbg !23

__internal_fmad.exit1.i464:                       ; preds = %__nv_tanhf.exit461
  %310 = fmul float %.01.i463, 0x4007154760000000, !dbg !23
  %311 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %310) #6, !dbg !23
  %312 = fadd float %311, 1.000000e+00, !dbg !23
  %313 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %312) #7, !dbg !23, !srcloc !24
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not6.i465 = icmp eq i32 %314, 0, !dbg !23
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %313, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %316 = tail call float @llvm.nvvm.fma.rn.f(float %313, float -2.000000e+00, float 1.000000e+00) #6, !dbg !23
  %.03.i466 = select i1 %.not6.i465, float %316, float %315, !dbg !23
  %317 = fcmp oge float %.01.i463, 0x4022059680000000, !dbg !23
  %s.0.i467 = select i1 %317, float 1.000000e+00, float %.03.i466, !dbg !23
  %318 = bitcast float %s.0.i467 to i32, !dbg !23
  %319 = bitcast float %74 to i32, !dbg !23
  %320 = and i32 %319, -2147483648, !dbg !23
  %321 = or i32 %320, %318, !dbg !23
  %322 = bitcast i32 %321 to float, !dbg !23
  br label %__nv_tanhf.exit480, !dbg !23

__internal_fmad.exit3.i469:                       ; preds = %__nv_tanhf.exit461
  %323 = fmul float %74, %74, !dbg !23
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not1.i470 = icmp eq i32 %324, 0, !dbg !23
  %325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %323, float 0xBFAAC795C0000000) #6, !dbg !23
  %326 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %323, float 0xBFAAC795C0000000) #6, !dbg !23
  %.06.i471 = select i1 %.not1.i470, float %326, float %325, !dbg !23
  %327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not2.i472 = icmp eq i32 %327, 0, !dbg !23
  %328 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i471, float %323, float 0x3FC10B2820000000) #6, !dbg !23
  %329 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i471, float %323, float 0x3FC10B2820000000) #6, !dbg !23
  %.05.i473 = select i1 %.not2.i472, float %329, float %328, !dbg !23
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not3.i474 = icmp eq i32 %330, 0, !dbg !23
  %331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i473, float %323, float 0xBFD5553DA0000000) #6, !dbg !23
  %332 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i473, float %323, float 0xBFD5553DA0000000) #6, !dbg !23
  %.0.i475 = select i1 %.not3.i474, float %332, float %331, !dbg !23
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not4.i476 = icmp eq i32 %333, 0, !dbg !23
  %334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i475, float %323, float 0.000000e+00) #6, !dbg !23
  %335 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i475, float %323, float 0.000000e+00) #6, !dbg !23
  %.04.i477 = select i1 %.not4.i476, float %335, float %334, !dbg !23
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !23
  %.not5.i478 = icmp eq i32 %336, 0, !dbg !23
  %337 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i477, float %74, float %74) #6, !dbg !23
  %338 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i477, float %74, float %74) #6, !dbg !23
  %.02.i479 = select i1 %.not5.i478, float %338, float %337, !dbg !23
  br label %__nv_tanhf.exit480, !dbg !23

__nv_tanhf.exit480:                               ; preds = %__internal_fmad.exit1.i464, %__internal_fmad.exit3.i469
  %s.1.i468 = phi float [ %322, %__internal_fmad.exit1.i464 ], [ %.02.i479, %__internal_fmad.exit3.i469 ], !dbg !23
  %339 = insertelement <2 x float> poison, float %s.1.i354, i64 0, !dbg !25
  %340 = insertelement <2 x float> %339, float %s.1.i335, i64 1, !dbg !25
  %341 = fmul <2 x float> %340, <float 5.000000e+01, float 5.000000e+01>, !dbg !25
  %342 = fmul float %s.1.i373, 5.000000e+01, !dbg !25
  %343 = fmul float %s.1.i392, 5.000000e+01, !dbg !25
  %344 = insertelement <4 x float> poison, float %s.1.i468, i64 0, !dbg !25
  %345 = insertelement <4 x float> %344, float %s.1.i449, i64 1, !dbg !25
  %346 = insertelement <4 x float> %345, float %s.1.i430, i64 2, !dbg !25
  %347 = insertelement <4 x float> %346, float %s.1.i411, i64 3, !dbg !25
  %348 = fmul <4 x float> %347, <float 5.000000e+01, float 5.000000e+01, float 5.000000e+01, float 5.000000e+01>, !dbg !25
  %349 = sub i32 %34, %15, !dbg !26
  %350 = icmp sgt i32 %31, %invariant.op512, !dbg !15
  %351 = icmp sgt i32 %31, %invariant.op513, !dbg !15
  %352 = insertelement <4 x i32> poison, i32 %31, i64 0, !dbg !15
  %353 = shufflevector <4 x i32> %352, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !15
  %354 = icmp sgt <4 x i32> %353, %26, !dbg !15
  %355 = select i1 %350, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !27
  %356 = select i1 %351, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !27
  %357 = fadd float %355, %342, !dbg !28
  %358 = fadd float %356, %343, !dbg !28
  %359 = fcmp ule float %29, %357, !dbg !29
  %360 = fcmp ule float %30, %358, !dbg !29
  %361 = fcmp ord <2 x float> %32, zeroinitializer, !dbg !33
  %362 = fcmp ord float %29, 0.000000e+00, !dbg !33
  %363 = fcmp ord float %30, 0.000000e+00, !dbg !33
  %364 = fcmp ord <4 x float> %33, zeroinitializer, !dbg !33
  %365 = insertelement <2 x i32> poison, i32 %31, i64 0, !dbg !15
  %366 = insertelement <2 x i32> %365, i32 %349, i64 1, !dbg !15
  %367 = icmp sgt <2 x i32> %366, %27, !dbg !15
  %368 = select <2 x i1> %367, <2 x float> <float 0xC7EFE00000000000, float 0xC7EFE00000000000>, <2 x float> zeroinitializer, !dbg !27
  %369 = fadd <2 x float> %368, %341, !dbg !28
  %370 = fcmp ule <2 x float> %32, %369, !dbg !29
  %371 = and <2 x i1> %361, %370, !dbg !34
  %.not33 = and i1 %362, %359, !dbg !34
  %.not35 = and i1 %363, %360, !dbg !34
  %372 = select <4 x i1> %354, <4 x float> <float 0xC7EFE00000000000, float 0xC7EFE00000000000, float 0xC7EFE00000000000, float 0xC7EFE00000000000>, <4 x float> zeroinitializer, !dbg !27
  %373 = fadd <4 x float> %372, %348, !dbg !28
  %374 = fcmp ule <4 x float> %33, %373, !dbg !29
  %375 = and <4 x i1> %364, %374, !dbg !35
  %376 = select <2 x i1> %371, <2 x float> %369, <2 x float> %32, !dbg !35
  %377 = select i1 %.not33, float %357, float %29, !dbg !35
  %378 = select i1 %.not35, float %358, float %30, !dbg !35
  %379 = select <4 x i1> %375, <4 x float> %373, <4 x float> %33, !dbg !35
  %380 = add nuw nsw i32 %31, 2048, !dbg !14
  %381 = icmp ult i32 %31, 6144, !dbg !14
  br i1 %381, label %28, label %382, !dbg !14

382:                                              ; preds = %__nv_tanhf.exit480
  %383 = and i32 %7, 31, !dbg !10
  %384 = and i32 %8, 7, !dbg !10
  %385 = shufflevector <2 x float> %376, <2 x float> <float poison, float 0.000000e+00>, <2 x i32> <i32 1, i32 3>, !dbg !36
  %386 = fcmp ogt <2 x float> %385, %376, !dbg !36
  %387 = fcmp uno <2 x float> %385, %376, !dbg !36
  %shift = shufflevector <2 x i1> %387, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %388 = or <2 x i1> %386, %shift, !dbg !40
  %389 = extractelement <2 x i1> %388, i64 0, !dbg !40
  %390 = extractelement <2 x float> %376, i64 0, !dbg !41
  %391 = extractelement <2 x float> %376, i64 1, !dbg !41
  %392 = select i1 %389, float %391, float %390, !dbg !41
  %393 = fcmp ogt float %392, %377, !dbg !36
  %394 = fcmp uno float %392, 0.000000e+00, !dbg !42
  %395 = or i1 %393, %394, !dbg !40
  %396 = select i1 %395, float %392, float %377, !dbg !41
  %397 = fcmp ogt float %396, %378, !dbg !36
  %398 = fcmp uno float %396, 0.000000e+00, !dbg !42
  %399 = or i1 %397, %398, !dbg !40
  %400 = select i1 %399, float %396, float %378, !dbg !41
  %401 = extractelement <4 x float> %379, i64 3, !dbg !36
  %402 = fcmp ogt float %400, %401, !dbg !36
  %403 = fcmp uno float %400, 0.000000e+00, !dbg !42
  %404 = or i1 %402, %403, !dbg !40
  %405 = select i1 %404, float %400, float %401, !dbg !41
  %406 = extractelement <4 x float> %379, i64 2, !dbg !36
  %407 = fcmp ogt float %405, %406, !dbg !36
  %408 = fcmp uno float %405, 0.000000e+00, !dbg !42
  %409 = or i1 %407, %408, !dbg !40
  %410 = select i1 %409, float %405, float %406, !dbg !41
  %411 = extractelement <4 x float> %379, i64 1, !dbg !36
  %412 = fcmp ogt float %410, %411, !dbg !36
  %413 = fcmp uno float %410, 0.000000e+00, !dbg !42
  %414 = or i1 %412, %413, !dbg !40
  %415 = select i1 %414, float %410, float %411, !dbg !41
  %416 = extractelement <4 x float> %379, i64 0, !dbg !36
  %417 = fcmp ogt float %415, %416, !dbg !36
  %418 = fcmp uno float %415, 0.000000e+00, !dbg !42
  %419 = or i1 %417, %418, !dbg !40
  %420 = select i1 %419, float %415, float %416, !dbg !41
  %421 = bitcast float %420 to i32, !dbg !43
  %422 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %421, i32 16, i32 31), !dbg !43
  %423 = bitcast i32 %422 to float, !dbg !43
  %424 = fcmp ogt float %420, %423, !dbg !36
  %425 = fcmp uno float %420, 0.000000e+00, !dbg !42
  %426 = or i1 %425, %424, !dbg !40
  %427 = select i1 %426, float %420, float %423, !dbg !41
  %428 = bitcast float %427 to i32, !dbg !43
  %429 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %428, i32 8, i32 31), !dbg !43
  %430 = bitcast i32 %429 to float, !dbg !43
  %431 = fcmp ogt float %427, %430, !dbg !36
  %432 = fcmp uno float %427, 0.000000e+00, !dbg !42
  %433 = or i1 %431, %432, !dbg !40
  %434 = select i1 %433, float %427, float %430, !dbg !41
  %435 = bitcast float %434 to i32, !dbg !43
  %436 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %435, i32 4, i32 31), !dbg !43
  %437 = bitcast i32 %436 to float, !dbg !43
  %438 = fcmp ogt float %434, %437, !dbg !36
  %439 = fcmp uno float %434, 0.000000e+00, !dbg !42
  %440 = or i1 %438, %439, !dbg !40
  %441 = select i1 %440, float %434, float %437, !dbg !41
  %442 = bitcast float %441 to i32, !dbg !43
  %443 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %442, i32 2, i32 31), !dbg !43
  %444 = bitcast i32 %443 to float, !dbg !43
  %445 = fcmp ogt float %441, %444, !dbg !36
  %446 = fcmp uno float %441, 0.000000e+00, !dbg !42
  %447 = or i1 %445, %446, !dbg !40
  %448 = select i1 %447, float %441, float %444, !dbg !41
  %449 = bitcast float %448 to i32, !dbg !43
  %450 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %449, i32 1, i32 31), !dbg !43
  %451 = bitcast i32 %450 to float, !dbg !43
  %452 = fcmp ogt float %448, %451, !dbg !36
  %453 = fcmp uno float %448, 0.000000e+00, !dbg !42
  %454 = or i1 %452, %453, !dbg !40
  %455 = select i1 %454, float %448, float %451, !dbg !41
  %456 = icmp eq i32 %383, 0, !dbg !43
  %457 = zext nneg i32 %384 to i64, !dbg !43
  %458 = getelementptr float, ptr addrspace(3) @global_smem, i64 %457, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %458, float %455, i1 %456) #6, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %459 = icmp slt i32 %7, 8, !dbg !43
  %460 = sext i32 %7 to i64, !dbg !43
  %461 = getelementptr float, ptr addrspace(3) @global_smem, i64 %460, !dbg !43
  %462 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %461, i1 %459) #6, !dbg !43
  %463 = bitcast float %462 to i32, !dbg !43
  %464 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %463, i32 4, i32 31), !dbg !43
  %465 = bitcast i32 %464 to float, !dbg !43
  %466 = fcmp ogt float %462, %465, !dbg !36
  %467 = fcmp uno float %462, 0.000000e+00, !dbg !42
  %468 = or i1 %467, %466, !dbg !40
  %469 = select i1 %468, float %462, float %465, !dbg !41
  %470 = bitcast float %469 to i32, !dbg !43
  %471 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %470, i32 2, i32 31), !dbg !43
  %472 = bitcast i32 %471 to float, !dbg !43
  %473 = fcmp ogt float %469, %472, !dbg !36
  %474 = fcmp uno float %469, 0.000000e+00, !dbg !42
  %475 = or i1 %473, %474, !dbg !40
  %476 = select i1 %475, float %469, float %472, !dbg !41
  %477 = bitcast float %476 to i32, !dbg !43
  %478 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %477, i32 1, i32 31), !dbg !43
  %479 = bitcast i32 %478 to float, !dbg !43
  %480 = fcmp ogt float %476, %479, !dbg !36
  %481 = fcmp uno float %476, 0.000000e+00, !dbg !42
  %482 = or i1 %480, %481, !dbg !40
  %483 = select i1 %482, float %476, float %479, !dbg !41
  %484 = and i32 %7, 7, !dbg !43
  %485 = icmp eq i32 %484, 0, !dbg !43
  %486 = and i1 %459, %485, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %461, float %483, i1 %486) #6, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %487 = load float, ptr addrspace(3) @global_smem, align 4, !dbg !43
  %invariant.op518 = sub nsw i32 0, %17, !dbg !45
  %invariant.op519 = sub nsw i32 0, %18, !dbg !45
  %invariant.op520 = sub nsw i32 0, %19, !dbg !45
  %488 = extractelement <4 x i32> %25, i64 3, !dbg !45
  %invariant.op521 = sub nsw i32 0, %488, !dbg !45
  %489 = extractelement <4 x i32> %25, i64 2, !dbg !45
  %invariant.op522 = sub nsw i32 0, %489, !dbg !45
  %490 = extractelement <4 x i32> %25, i64 1, !dbg !45
  %invariant.op523 = sub nsw i32 0, %490, !dbg !45
  %491 = extractelement <4 x i32> %25, i64 0, !dbg !45
  %invariant.op524 = sub nsw i32 0, %491, !dbg !45
  br label %492, !dbg !45

492:                                              ; preds = %382, %__nv_tanhf.exit328
  %493 = phi float [ 0.000000e+00, %382 ], [ %864, %__nv_tanhf.exit328 ]
  %494 = phi float [ 0.000000e+00, %382 ], [ %865, %__nv_tanhf.exit328 ]
  %495 = phi float [ 0.000000e+00, %382 ], [ %866, %__nv_tanhf.exit328 ]
  %496 = phi float [ 0.000000e+00, %382 ], [ %867, %__nv_tanhf.exit328 ]
  %497 = phi float [ 0.000000e+00, %382 ], [ %868, %__nv_tanhf.exit328 ]
  %498 = phi float [ 0.000000e+00, %382 ], [ %869, %__nv_tanhf.exit328 ]
  %499 = phi float [ 0.000000e+00, %382 ], [ %870, %__nv_tanhf.exit328 ]
  %500 = phi float [ 0.000000e+00, %382 ], [ %871, %__nv_tanhf.exit328 ]
  %501 = phi i32 [ 0, %382 ], [ %872, %__nv_tanhf.exit328 ]
  %502 = or i32 %501, %9, !dbg !46
  %503 = add i32 %502, %16, !dbg !47
  %504 = sext i32 %503 to i64, !dbg !48
  %505 = getelementptr i16, ptr addrspace(1) %0, i64 %504, !dbg !48
  %506 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %505, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !49
  %507 = extractvalue { i32, i32, i32, i32 } %506, 0, !dbg !49
  %508 = extractvalue { i32, i32, i32, i32 } %506, 1, !dbg !49
  %509 = extractvalue { i32, i32, i32, i32 } %506, 2, !dbg !49
  %510 = extractvalue { i32, i32, i32, i32 } %506, 3, !dbg !49
  %511 = trunc i32 %507 to i16, !dbg !49
  %extelt.offset20 = lshr i32 %507, 16, !dbg !49
  %512 = trunc i32 %extelt.offset20 to i16, !dbg !49
  %513 = trunc i32 %508 to i16, !dbg !49
  %extelt.offset21 = lshr i32 %508, 16, !dbg !49
  %514 = trunc i32 %extelt.offset21 to i16, !dbg !49
  %515 = trunc i32 %509 to i16, !dbg !49
  %extelt.offset22 = lshr i32 %509, 16, !dbg !49
  %516 = trunc i32 %extelt.offset22 to i16, !dbg !49
  %517 = trunc i32 %510 to i16, !dbg !49
  %extelt.offset23 = lshr i32 %510, 16, !dbg !49
  %518 = trunc i32 %extelt.offset23 to i16, !dbg !49
  %519 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %511) #6, !dbg !50
  %520 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %512) #6, !dbg !50
  %521 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %513) #6, !dbg !50
  %522 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %514) #6, !dbg !50
  %523 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %515) #6, !dbg !50
  %524 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %516) #6, !dbg !50
  %525 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %517) #6, !dbg !50
  %526 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %518) #6, !dbg !50
  %527 = fmul float %519, 6.250000e-02, !dbg !51
  %528 = fmul float %520, 6.250000e-02, !dbg !51
  %529 = fmul float %521, 6.250000e-02, !dbg !51
  %530 = fmul float %522, 6.250000e-02, !dbg !51
  %531 = fmul float %523, 6.250000e-02, !dbg !51
  %532 = fmul float %524, 6.250000e-02, !dbg !51
  %533 = fmul float %525, 6.250000e-02, !dbg !51
  %534 = fmul float %526, 6.250000e-02, !dbg !51
  %535 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %527, float 5.000000e+01) #6, !dbg !52
  %536 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %528, float 5.000000e+01) #6, !dbg !52
  %537 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %529, float 5.000000e+01) #6, !dbg !52
  %538 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %530, float 5.000000e+01) #6, !dbg !52
  %539 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %531, float 5.000000e+01) #6, !dbg !52
  %540 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %532, float 5.000000e+01) #6, !dbg !52
  %541 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %533, float 5.000000e+01) #6, !dbg !52
  %542 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %534, float 5.000000e+01) #6, !dbg !52
  %543 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i177 = icmp eq i32 %543, 0, !dbg !53
  %544 = tail call float @llvm.nvvm.fabs.ftz.f(float %535) #6, !dbg !53
  %545 = tail call float @llvm.nvvm.fabs.f(float %535) #6, !dbg !53
  %.01.i178 = select i1 %.not.i177, float %545, float %544, !dbg !53
  %546 = fcmp ult float %.01.i178, 0x3FE3333340000000, !dbg !53
  br i1 %546, label %__internal_fmad.exit3.i184, label %__internal_fmad.exit1.i179, !dbg !53

__internal_fmad.exit1.i179:                       ; preds = %492
  %547 = fmul float %.01.i178, 0x4007154760000000, !dbg !53
  %548 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %547) #6, !dbg !53
  %549 = fadd float %548, 1.000000e+00, !dbg !53
  %550 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %549) #7, !dbg !53, !srcloc !24
  %551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i180 = icmp eq i32 %551, 0, !dbg !53
  %552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %550, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %553 = tail call float @llvm.nvvm.fma.rn.f(float %550, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i181 = select i1 %.not6.i180, float %553, float %552, !dbg !53
  %554 = fcmp oge float %.01.i178, 0x4022059680000000, !dbg !53
  %s.0.i182 = select i1 %554, float 1.000000e+00, float %.03.i181, !dbg !53
  %555 = bitcast float %s.0.i182 to i32, !dbg !53
  %556 = bitcast float %535 to i32, !dbg !53
  %557 = and i32 %556, -2147483648, !dbg !53
  %558 = or i32 %557, %555, !dbg !53
  %559 = bitcast i32 %558 to float, !dbg !53
  br label %__nv_tanhf.exit195, !dbg !53

__internal_fmad.exit3.i184:                       ; preds = %492
  %560 = fmul float %535, %535, !dbg !53
  %561 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i185 = icmp eq i32 %561, 0, !dbg !53
  %562 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %560, float 0xBFAAC795C0000000) #6, !dbg !53
  %563 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %560, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i186 = select i1 %.not1.i185, float %563, float %562, !dbg !53
  %564 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i187 = icmp eq i32 %564, 0, !dbg !53
  %565 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i186, float %560, float 0x3FC10B2820000000) #6, !dbg !53
  %566 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i186, float %560, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i188 = select i1 %.not2.i187, float %566, float %565, !dbg !53
  %567 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i189 = icmp eq i32 %567, 0, !dbg !53
  %568 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i188, float %560, float 0xBFD5553DA0000000) #6, !dbg !53
  %569 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i188, float %560, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i190 = select i1 %.not3.i189, float %569, float %568, !dbg !53
  %570 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i191 = icmp eq i32 %570, 0, !dbg !53
  %571 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i190, float %560, float 0.000000e+00) #6, !dbg !53
  %572 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i190, float %560, float 0.000000e+00) #6, !dbg !53
  %.04.i192 = select i1 %.not4.i191, float %572, float %571, !dbg !53
  %573 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i193 = icmp eq i32 %573, 0, !dbg !53
  %574 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i192, float %535, float %535) #6, !dbg !53
  %575 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i192, float %535, float %535) #6, !dbg !53
  %.02.i194 = select i1 %.not5.i193, float %575, float %574, !dbg !53
  br label %__nv_tanhf.exit195, !dbg !53

__nv_tanhf.exit195:                               ; preds = %__internal_fmad.exit1.i179, %__internal_fmad.exit3.i184
  %s.1.i183 = phi float [ %559, %__internal_fmad.exit1.i179 ], [ %.02.i194, %__internal_fmad.exit3.i184 ], !dbg !53
  %576 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i196 = icmp eq i32 %576, 0, !dbg !53
  %577 = tail call float @llvm.nvvm.fabs.ftz.f(float %536) #6, !dbg !53
  %578 = tail call float @llvm.nvvm.fabs.f(float %536) #6, !dbg !53
  %.01.i197 = select i1 %.not.i196, float %578, float %577, !dbg !53
  %579 = fcmp ult float %.01.i197, 0x3FE3333340000000, !dbg !53
  br i1 %579, label %__internal_fmad.exit3.i203, label %__internal_fmad.exit1.i198, !dbg !53

__internal_fmad.exit1.i198:                       ; preds = %__nv_tanhf.exit195
  %580 = fmul float %.01.i197, 0x4007154760000000, !dbg !53
  %581 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %580) #6, !dbg !53
  %582 = fadd float %581, 1.000000e+00, !dbg !53
  %583 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %582) #7, !dbg !53, !srcloc !24
  %584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i199 = icmp eq i32 %584, 0, !dbg !53
  %585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %583, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %586 = tail call float @llvm.nvvm.fma.rn.f(float %583, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i200 = select i1 %.not6.i199, float %586, float %585, !dbg !53
  %587 = fcmp oge float %.01.i197, 0x4022059680000000, !dbg !53
  %s.0.i201 = select i1 %587, float 1.000000e+00, float %.03.i200, !dbg !53
  %588 = bitcast float %s.0.i201 to i32, !dbg !53
  %589 = bitcast float %536 to i32, !dbg !53
  %590 = and i32 %589, -2147483648, !dbg !53
  %591 = or i32 %590, %588, !dbg !53
  %592 = bitcast i32 %591 to float, !dbg !53
  br label %__nv_tanhf.exit214, !dbg !53

__internal_fmad.exit3.i203:                       ; preds = %__nv_tanhf.exit195
  %593 = fmul float %536, %536, !dbg !53
  %594 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i204 = icmp eq i32 %594, 0, !dbg !53
  %595 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %593, float 0xBFAAC795C0000000) #6, !dbg !53
  %596 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %593, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i205 = select i1 %.not1.i204, float %596, float %595, !dbg !53
  %597 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i206 = icmp eq i32 %597, 0, !dbg !53
  %598 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i205, float %593, float 0x3FC10B2820000000) #6, !dbg !53
  %599 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i205, float %593, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i207 = select i1 %.not2.i206, float %599, float %598, !dbg !53
  %600 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i208 = icmp eq i32 %600, 0, !dbg !53
  %601 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i207, float %593, float 0xBFD5553DA0000000) #6, !dbg !53
  %602 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i207, float %593, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i209 = select i1 %.not3.i208, float %602, float %601, !dbg !53
  %603 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i210 = icmp eq i32 %603, 0, !dbg !53
  %604 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i209, float %593, float 0.000000e+00) #6, !dbg !53
  %605 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i209, float %593, float 0.000000e+00) #6, !dbg !53
  %.04.i211 = select i1 %.not4.i210, float %605, float %604, !dbg !53
  %606 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i212 = icmp eq i32 %606, 0, !dbg !53
  %607 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i211, float %536, float %536) #6, !dbg !53
  %608 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i211, float %536, float %536) #6, !dbg !53
  %.02.i213 = select i1 %.not5.i212, float %608, float %607, !dbg !53
  br label %__nv_tanhf.exit214, !dbg !53

__nv_tanhf.exit214:                               ; preds = %__internal_fmad.exit1.i198, %__internal_fmad.exit3.i203
  %s.1.i202 = phi float [ %592, %__internal_fmad.exit1.i198 ], [ %.02.i213, %__internal_fmad.exit3.i203 ], !dbg !53
  %609 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i215 = icmp eq i32 %609, 0, !dbg !53
  %610 = tail call float @llvm.nvvm.fabs.ftz.f(float %537) #6, !dbg !53
  %611 = tail call float @llvm.nvvm.fabs.f(float %537) #6, !dbg !53
  %.01.i216 = select i1 %.not.i215, float %611, float %610, !dbg !53
  %612 = fcmp ult float %.01.i216, 0x3FE3333340000000, !dbg !53
  br i1 %612, label %__internal_fmad.exit3.i222, label %__internal_fmad.exit1.i217, !dbg !53

__internal_fmad.exit1.i217:                       ; preds = %__nv_tanhf.exit214
  %613 = fmul float %.01.i216, 0x4007154760000000, !dbg !53
  %614 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %613) #6, !dbg !53
  %615 = fadd float %614, 1.000000e+00, !dbg !53
  %616 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %615) #7, !dbg !53, !srcloc !24
  %617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i218 = icmp eq i32 %617, 0, !dbg !53
  %618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %616, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %619 = tail call float @llvm.nvvm.fma.rn.f(float %616, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i219 = select i1 %.not6.i218, float %619, float %618, !dbg !53
  %620 = fcmp oge float %.01.i216, 0x4022059680000000, !dbg !53
  %s.0.i220 = select i1 %620, float 1.000000e+00, float %.03.i219, !dbg !53
  %621 = bitcast float %s.0.i220 to i32, !dbg !53
  %622 = bitcast float %537 to i32, !dbg !53
  %623 = and i32 %622, -2147483648, !dbg !53
  %624 = or i32 %623, %621, !dbg !53
  %625 = bitcast i32 %624 to float, !dbg !53
  br label %__nv_tanhf.exit233, !dbg !53

__internal_fmad.exit3.i222:                       ; preds = %__nv_tanhf.exit214
  %626 = fmul float %537, %537, !dbg !53
  %627 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i223 = icmp eq i32 %627, 0, !dbg !53
  %628 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %626, float 0xBFAAC795C0000000) #6, !dbg !53
  %629 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %626, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i224 = select i1 %.not1.i223, float %629, float %628, !dbg !53
  %630 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i225 = icmp eq i32 %630, 0, !dbg !53
  %631 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i224, float %626, float 0x3FC10B2820000000) #6, !dbg !53
  %632 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i224, float %626, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i226 = select i1 %.not2.i225, float %632, float %631, !dbg !53
  %633 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i227 = icmp eq i32 %633, 0, !dbg !53
  %634 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i226, float %626, float 0xBFD5553DA0000000) #6, !dbg !53
  %635 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i226, float %626, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i228 = select i1 %.not3.i227, float %635, float %634, !dbg !53
  %636 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i229 = icmp eq i32 %636, 0, !dbg !53
  %637 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i228, float %626, float 0.000000e+00) #6, !dbg !53
  %638 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i228, float %626, float 0.000000e+00) #6, !dbg !53
  %.04.i230 = select i1 %.not4.i229, float %638, float %637, !dbg !53
  %639 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i231 = icmp eq i32 %639, 0, !dbg !53
  %640 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i230, float %537, float %537) #6, !dbg !53
  %641 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i230, float %537, float %537) #6, !dbg !53
  %.02.i232 = select i1 %.not5.i231, float %641, float %640, !dbg !53
  br label %__nv_tanhf.exit233, !dbg !53

__nv_tanhf.exit233:                               ; preds = %__internal_fmad.exit1.i217, %__internal_fmad.exit3.i222
  %s.1.i221 = phi float [ %625, %__internal_fmad.exit1.i217 ], [ %.02.i232, %__internal_fmad.exit3.i222 ], !dbg !53
  %642 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i234 = icmp eq i32 %642, 0, !dbg !53
  %643 = tail call float @llvm.nvvm.fabs.ftz.f(float %538) #6, !dbg !53
  %644 = tail call float @llvm.nvvm.fabs.f(float %538) #6, !dbg !53
  %.01.i235 = select i1 %.not.i234, float %644, float %643, !dbg !53
  %645 = fcmp ult float %.01.i235, 0x3FE3333340000000, !dbg !53
  br i1 %645, label %__internal_fmad.exit3.i241, label %__internal_fmad.exit1.i236, !dbg !53

__internal_fmad.exit1.i236:                       ; preds = %__nv_tanhf.exit233
  %646 = fmul float %.01.i235, 0x4007154760000000, !dbg !53
  %647 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %646) #6, !dbg !53
  %648 = fadd float %647, 1.000000e+00, !dbg !53
  %649 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %648) #7, !dbg !53, !srcloc !24
  %650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i237 = icmp eq i32 %650, 0, !dbg !53
  %651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %649, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %652 = tail call float @llvm.nvvm.fma.rn.f(float %649, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i238 = select i1 %.not6.i237, float %652, float %651, !dbg !53
  %653 = fcmp oge float %.01.i235, 0x4022059680000000, !dbg !53
  %s.0.i239 = select i1 %653, float 1.000000e+00, float %.03.i238, !dbg !53
  %654 = bitcast float %s.0.i239 to i32, !dbg !53
  %655 = bitcast float %538 to i32, !dbg !53
  %656 = and i32 %655, -2147483648, !dbg !53
  %657 = or i32 %656, %654, !dbg !53
  %658 = bitcast i32 %657 to float, !dbg !53
  br label %__nv_tanhf.exit252, !dbg !53

__internal_fmad.exit3.i241:                       ; preds = %__nv_tanhf.exit233
  %659 = fmul float %538, %538, !dbg !53
  %660 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i242 = icmp eq i32 %660, 0, !dbg !53
  %661 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %659, float 0xBFAAC795C0000000) #6, !dbg !53
  %662 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %659, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i243 = select i1 %.not1.i242, float %662, float %661, !dbg !53
  %663 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i244 = icmp eq i32 %663, 0, !dbg !53
  %664 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i243, float %659, float 0x3FC10B2820000000) #6, !dbg !53
  %665 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i243, float %659, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i245 = select i1 %.not2.i244, float %665, float %664, !dbg !53
  %666 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i246 = icmp eq i32 %666, 0, !dbg !53
  %667 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i245, float %659, float 0xBFD5553DA0000000) #6, !dbg !53
  %668 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i245, float %659, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i247 = select i1 %.not3.i246, float %668, float %667, !dbg !53
  %669 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i248 = icmp eq i32 %669, 0, !dbg !53
  %670 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i247, float %659, float 0.000000e+00) #6, !dbg !53
  %671 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i247, float %659, float 0.000000e+00) #6, !dbg !53
  %.04.i249 = select i1 %.not4.i248, float %671, float %670, !dbg !53
  %672 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i250 = icmp eq i32 %672, 0, !dbg !53
  %673 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i249, float %538, float %538) #6, !dbg !53
  %674 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i249, float %538, float %538) #6, !dbg !53
  %.02.i251 = select i1 %.not5.i250, float %674, float %673, !dbg !53
  br label %__nv_tanhf.exit252, !dbg !53

__nv_tanhf.exit252:                               ; preds = %__internal_fmad.exit1.i236, %__internal_fmad.exit3.i241
  %s.1.i240 = phi float [ %658, %__internal_fmad.exit1.i236 ], [ %.02.i251, %__internal_fmad.exit3.i241 ], !dbg !53
  %675 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i253 = icmp eq i32 %675, 0, !dbg !53
  %676 = tail call float @llvm.nvvm.fabs.ftz.f(float %539) #6, !dbg !53
  %677 = tail call float @llvm.nvvm.fabs.f(float %539) #6, !dbg !53
  %.01.i254 = select i1 %.not.i253, float %677, float %676, !dbg !53
  %678 = fcmp ult float %.01.i254, 0x3FE3333340000000, !dbg !53
  br i1 %678, label %__internal_fmad.exit3.i260, label %__internal_fmad.exit1.i255, !dbg !53

__internal_fmad.exit1.i255:                       ; preds = %__nv_tanhf.exit252
  %679 = fmul float %.01.i254, 0x4007154760000000, !dbg !53
  %680 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %679) #6, !dbg !53
  %681 = fadd float %680, 1.000000e+00, !dbg !53
  %682 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %681) #7, !dbg !53, !srcloc !24
  %683 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i256 = icmp eq i32 %683, 0, !dbg !53
  %684 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %682, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %685 = tail call float @llvm.nvvm.fma.rn.f(float %682, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i257 = select i1 %.not6.i256, float %685, float %684, !dbg !53
  %686 = fcmp oge float %.01.i254, 0x4022059680000000, !dbg !53
  %s.0.i258 = select i1 %686, float 1.000000e+00, float %.03.i257, !dbg !53
  %687 = bitcast float %s.0.i258 to i32, !dbg !53
  %688 = bitcast float %539 to i32, !dbg !53
  %689 = and i32 %688, -2147483648, !dbg !53
  %690 = or i32 %689, %687, !dbg !53
  %691 = bitcast i32 %690 to float, !dbg !53
  br label %__nv_tanhf.exit271, !dbg !53

__internal_fmad.exit3.i260:                       ; preds = %__nv_tanhf.exit252
  %692 = fmul float %539, %539, !dbg !53
  %693 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i261 = icmp eq i32 %693, 0, !dbg !53
  %694 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %692, float 0xBFAAC795C0000000) #6, !dbg !53
  %695 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %692, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i262 = select i1 %.not1.i261, float %695, float %694, !dbg !53
  %696 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i263 = icmp eq i32 %696, 0, !dbg !53
  %697 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i262, float %692, float 0x3FC10B2820000000) #6, !dbg !53
  %698 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i262, float %692, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i264 = select i1 %.not2.i263, float %698, float %697, !dbg !53
  %699 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i265 = icmp eq i32 %699, 0, !dbg !53
  %700 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i264, float %692, float 0xBFD5553DA0000000) #6, !dbg !53
  %701 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i264, float %692, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i266 = select i1 %.not3.i265, float %701, float %700, !dbg !53
  %702 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i267 = icmp eq i32 %702, 0, !dbg !53
  %703 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i266, float %692, float 0.000000e+00) #6, !dbg !53
  %704 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i266, float %692, float 0.000000e+00) #6, !dbg !53
  %.04.i268 = select i1 %.not4.i267, float %704, float %703, !dbg !53
  %705 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i269 = icmp eq i32 %705, 0, !dbg !53
  %706 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i268, float %539, float %539) #6, !dbg !53
  %707 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i268, float %539, float %539) #6, !dbg !53
  %.02.i270 = select i1 %.not5.i269, float %707, float %706, !dbg !53
  br label %__nv_tanhf.exit271, !dbg !53

__nv_tanhf.exit271:                               ; preds = %__internal_fmad.exit1.i255, %__internal_fmad.exit3.i260
  %s.1.i259 = phi float [ %691, %__internal_fmad.exit1.i255 ], [ %.02.i270, %__internal_fmad.exit3.i260 ], !dbg !53
  %708 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i272 = icmp eq i32 %708, 0, !dbg !53
  %709 = tail call float @llvm.nvvm.fabs.ftz.f(float %540) #6, !dbg !53
  %710 = tail call float @llvm.nvvm.fabs.f(float %540) #6, !dbg !53
  %.01.i273 = select i1 %.not.i272, float %710, float %709, !dbg !53
  %711 = fcmp ult float %.01.i273, 0x3FE3333340000000, !dbg !53
  br i1 %711, label %__internal_fmad.exit3.i279, label %__internal_fmad.exit1.i274, !dbg !53

__internal_fmad.exit1.i274:                       ; preds = %__nv_tanhf.exit271
  %712 = fmul float %.01.i273, 0x4007154760000000, !dbg !53
  %713 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %712) #6, !dbg !53
  %714 = fadd float %713, 1.000000e+00, !dbg !53
  %715 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %714) #7, !dbg !53, !srcloc !24
  %716 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i275 = icmp eq i32 %716, 0, !dbg !53
  %717 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %715, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %718 = tail call float @llvm.nvvm.fma.rn.f(float %715, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i276 = select i1 %.not6.i275, float %718, float %717, !dbg !53
  %719 = fcmp oge float %.01.i273, 0x4022059680000000, !dbg !53
  %s.0.i277 = select i1 %719, float 1.000000e+00, float %.03.i276, !dbg !53
  %720 = bitcast float %s.0.i277 to i32, !dbg !53
  %721 = bitcast float %540 to i32, !dbg !53
  %722 = and i32 %721, -2147483648, !dbg !53
  %723 = or i32 %722, %720, !dbg !53
  %724 = bitcast i32 %723 to float, !dbg !53
  br label %__nv_tanhf.exit290, !dbg !53

__internal_fmad.exit3.i279:                       ; preds = %__nv_tanhf.exit271
  %725 = fmul float %540, %540, !dbg !53
  %726 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i280 = icmp eq i32 %726, 0, !dbg !53
  %727 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %725, float 0xBFAAC795C0000000) #6, !dbg !53
  %728 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %725, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i281 = select i1 %.not1.i280, float %728, float %727, !dbg !53
  %729 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i282 = icmp eq i32 %729, 0, !dbg !53
  %730 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i281, float %725, float 0x3FC10B2820000000) #6, !dbg !53
  %731 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i281, float %725, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i283 = select i1 %.not2.i282, float %731, float %730, !dbg !53
  %732 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i284 = icmp eq i32 %732, 0, !dbg !53
  %733 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i283, float %725, float 0xBFD5553DA0000000) #6, !dbg !53
  %734 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i283, float %725, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i285 = select i1 %.not3.i284, float %734, float %733, !dbg !53
  %735 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i286 = icmp eq i32 %735, 0, !dbg !53
  %736 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i285, float %725, float 0.000000e+00) #6, !dbg !53
  %737 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i285, float %725, float 0.000000e+00) #6, !dbg !53
  %.04.i287 = select i1 %.not4.i286, float %737, float %736, !dbg !53
  %738 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i288 = icmp eq i32 %738, 0, !dbg !53
  %739 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i287, float %540, float %540) #6, !dbg !53
  %740 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i287, float %540, float %540) #6, !dbg !53
  %.02.i289 = select i1 %.not5.i288, float %740, float %739, !dbg !53
  br label %__nv_tanhf.exit290, !dbg !53

__nv_tanhf.exit290:                               ; preds = %__internal_fmad.exit1.i274, %__internal_fmad.exit3.i279
  %s.1.i278 = phi float [ %724, %__internal_fmad.exit1.i274 ], [ %.02.i289, %__internal_fmad.exit3.i279 ], !dbg !53
  %741 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i291 = icmp eq i32 %741, 0, !dbg !53
  %742 = tail call float @llvm.nvvm.fabs.ftz.f(float %541) #6, !dbg !53
  %743 = tail call float @llvm.nvvm.fabs.f(float %541) #6, !dbg !53
  %.01.i292 = select i1 %.not.i291, float %743, float %742, !dbg !53
  %744 = fcmp ult float %.01.i292, 0x3FE3333340000000, !dbg !53
  br i1 %744, label %__internal_fmad.exit3.i298, label %__internal_fmad.exit1.i293, !dbg !53

__internal_fmad.exit1.i293:                       ; preds = %__nv_tanhf.exit290
  %745 = fmul float %.01.i292, 0x4007154760000000, !dbg !53
  %746 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %745) #6, !dbg !53
  %747 = fadd float %746, 1.000000e+00, !dbg !53
  %748 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %747) #7, !dbg !53, !srcloc !24
  %749 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i294 = icmp eq i32 %749, 0, !dbg !53
  %750 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %748, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %751 = tail call float @llvm.nvvm.fma.rn.f(float %748, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i295 = select i1 %.not6.i294, float %751, float %750, !dbg !53
  %752 = fcmp oge float %.01.i292, 0x4022059680000000, !dbg !53
  %s.0.i296 = select i1 %752, float 1.000000e+00, float %.03.i295, !dbg !53
  %753 = bitcast float %s.0.i296 to i32, !dbg !53
  %754 = bitcast float %541 to i32, !dbg !53
  %755 = and i32 %754, -2147483648, !dbg !53
  %756 = or i32 %755, %753, !dbg !53
  %757 = bitcast i32 %756 to float, !dbg !53
  br label %__nv_tanhf.exit309, !dbg !53

__internal_fmad.exit3.i298:                       ; preds = %__nv_tanhf.exit290
  %758 = fmul float %541, %541, !dbg !53
  %759 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i299 = icmp eq i32 %759, 0, !dbg !53
  %760 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %758, float 0xBFAAC795C0000000) #6, !dbg !53
  %761 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %758, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i300 = select i1 %.not1.i299, float %761, float %760, !dbg !53
  %762 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i301 = icmp eq i32 %762, 0, !dbg !53
  %763 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i300, float %758, float 0x3FC10B2820000000) #6, !dbg !53
  %764 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i300, float %758, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i302 = select i1 %.not2.i301, float %764, float %763, !dbg !53
  %765 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i303 = icmp eq i32 %765, 0, !dbg !53
  %766 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i302, float %758, float 0xBFD5553DA0000000) #6, !dbg !53
  %767 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i302, float %758, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i304 = select i1 %.not3.i303, float %767, float %766, !dbg !53
  %768 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i305 = icmp eq i32 %768, 0, !dbg !53
  %769 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i304, float %758, float 0.000000e+00) #6, !dbg !53
  %770 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i304, float %758, float 0.000000e+00) #6, !dbg !53
  %.04.i306 = select i1 %.not4.i305, float %770, float %769, !dbg !53
  %771 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i307 = icmp eq i32 %771, 0, !dbg !53
  %772 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i306, float %541, float %541) #6, !dbg !53
  %773 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i306, float %541, float %541) #6, !dbg !53
  %.02.i308 = select i1 %.not5.i307, float %773, float %772, !dbg !53
  br label %__nv_tanhf.exit309, !dbg !53

__nv_tanhf.exit309:                               ; preds = %__internal_fmad.exit1.i293, %__internal_fmad.exit3.i298
  %s.1.i297 = phi float [ %757, %__internal_fmad.exit1.i293 ], [ %.02.i308, %__internal_fmad.exit3.i298 ], !dbg !53
  %774 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not.i310 = icmp eq i32 %774, 0, !dbg !53
  %775 = tail call float @llvm.nvvm.fabs.ftz.f(float %542) #6, !dbg !53
  %776 = tail call float @llvm.nvvm.fabs.f(float %542) #6, !dbg !53
  %.01.i311 = select i1 %.not.i310, float %776, float %775, !dbg !53
  %777 = fcmp ult float %.01.i311, 0x3FE3333340000000, !dbg !53
  br i1 %777, label %__internal_fmad.exit3.i317, label %__internal_fmad.exit1.i312, !dbg !53

__internal_fmad.exit1.i312:                       ; preds = %__nv_tanhf.exit309
  %778 = fmul float %.01.i311, 0x4007154760000000, !dbg !53
  %779 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %778) #6, !dbg !53
  %780 = fadd float %779, 1.000000e+00, !dbg !53
  %781 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %780) #7, !dbg !53, !srcloc !24
  %782 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not6.i313 = icmp eq i32 %782, 0, !dbg !53
  %783 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %781, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %784 = tail call float @llvm.nvvm.fma.rn.f(float %781, float -2.000000e+00, float 1.000000e+00) #6, !dbg !53
  %.03.i314 = select i1 %.not6.i313, float %784, float %783, !dbg !53
  %785 = fcmp oge float %.01.i311, 0x4022059680000000, !dbg !53
  %s.0.i315 = select i1 %785, float 1.000000e+00, float %.03.i314, !dbg !53
  %786 = bitcast float %s.0.i315 to i32, !dbg !53
  %787 = bitcast float %542 to i32, !dbg !53
  %788 = and i32 %787, -2147483648, !dbg !53
  %789 = or i32 %788, %786, !dbg !53
  %790 = bitcast i32 %789 to float, !dbg !53
  br label %__nv_tanhf.exit328, !dbg !53

__internal_fmad.exit3.i317:                       ; preds = %__nv_tanhf.exit309
  %791 = fmul float %542, %542, !dbg !53
  %792 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not1.i318 = icmp eq i32 %792, 0, !dbg !53
  %793 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %791, float 0xBFAAC795C0000000) #6, !dbg !53
  %794 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %791, float 0xBFAAC795C0000000) #6, !dbg !53
  %.06.i319 = select i1 %.not1.i318, float %794, float %793, !dbg !53
  %795 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not2.i320 = icmp eq i32 %795, 0, !dbg !53
  %796 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i319, float %791, float 0x3FC10B2820000000) #6, !dbg !53
  %797 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i319, float %791, float 0x3FC10B2820000000) #6, !dbg !53
  %.05.i321 = select i1 %.not2.i320, float %797, float %796, !dbg !53
  %798 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not3.i322 = icmp eq i32 %798, 0, !dbg !53
  %799 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i321, float %791, float 0xBFD5553DA0000000) #6, !dbg !53
  %800 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i321, float %791, float 0xBFD5553DA0000000) #6, !dbg !53
  %.0.i323 = select i1 %.not3.i322, float %800, float %799, !dbg !53
  %801 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not4.i324 = icmp eq i32 %801, 0, !dbg !53
  %802 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i323, float %791, float 0.000000e+00) #6, !dbg !53
  %803 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i323, float %791, float 0.000000e+00) #6, !dbg !53
  %.04.i325 = select i1 %.not4.i324, float %803, float %802, !dbg !53
  %804 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !53
  %.not5.i326 = icmp eq i32 %804, 0, !dbg !53
  %805 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i325, float %542, float %542) #6, !dbg !53
  %806 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i325, float %542, float %542) #6, !dbg !53
  %.02.i327 = select i1 %.not5.i326, float %806, float %805, !dbg !53
  br label %__nv_tanhf.exit328, !dbg !53

__nv_tanhf.exit328:                               ; preds = %__internal_fmad.exit1.i312, %__internal_fmad.exit3.i317
  %s.1.i316 = phi float [ %790, %__internal_fmad.exit1.i312 ], [ %.02.i327, %__internal_fmad.exit3.i317 ], !dbg !53
  %807 = fmul float %s.1.i183, 5.000000e+01, !dbg !54
  %808 = fmul float %s.1.i202, 5.000000e+01, !dbg !54
  %809 = fmul float %s.1.i221, 5.000000e+01, !dbg !54
  %810 = fmul float %s.1.i240, 5.000000e+01, !dbg !54
  %811 = fmul float %s.1.i259, 5.000000e+01, !dbg !54
  %812 = fmul float %s.1.i278, 5.000000e+01, !dbg !54
  %813 = fmul float %s.1.i297, 5.000000e+01, !dbg !54
  %814 = fmul float %s.1.i316, 5.000000e+01, !dbg !54
  %815 = sub i32 %502, %15, !dbg !55
  %816 = icmp sgt i32 %815, 0, !dbg !56
  %817 = icmp sgt i32 %501, %invariant.op518, !dbg !56
  %818 = icmp sgt i32 %501, %invariant.op519, !dbg !56
  %819 = icmp sgt i32 %501, %invariant.op520, !dbg !56
  %820 = icmp sgt i32 %501, %invariant.op521, !dbg !56
  %821 = icmp sgt i32 %501, %invariant.op522, !dbg !56
  %822 = icmp sgt i32 %501, %invariant.op523, !dbg !56
  %823 = icmp sgt i32 %501, %invariant.op524, !dbg !56
  %824 = select i1 %816, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %825 = select i1 %817, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %826 = select i1 %818, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %827 = select i1 %819, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %828 = select i1 %820, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %829 = select i1 %821, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %830 = select i1 %822, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %831 = select i1 %823, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !57
  %832 = fadd float %824, %807, !dbg !58
  %833 = fadd float %825, %808, !dbg !58
  %834 = fadd float %826, %809, !dbg !58
  %835 = fadd float %827, %810, !dbg !58
  %836 = fadd float %828, %811, !dbg !58
  %837 = fadd float %829, %812, !dbg !58
  %838 = fadd float %830, %813, !dbg !58
  %839 = fadd float %831, %814, !dbg !58
  %840 = fsub float %832, %487, !dbg !59
  %841 = fsub float %833, %487, !dbg !59
  %842 = fsub float %834, %487, !dbg !59
  %843 = fsub float %835, %487, !dbg !59
  %844 = fsub float %836, %487, !dbg !59
  %845 = fsub float %837, %487, !dbg !59
  %846 = fsub float %838, %487, !dbg !59
  %847 = fsub float %839, %487, !dbg !59
  %848 = fmul float %840, 0x3FF7154760000000, !dbg !60
  %849 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %848) #6, !dbg !60
  %850 = fmul float %841, 0x3FF7154760000000, !dbg !60
  %851 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %850) #6, !dbg !60
  %852 = fmul float %842, 0x3FF7154760000000, !dbg !60
  %853 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %852) #6, !dbg !60
  %854 = fmul float %843, 0x3FF7154760000000, !dbg !60
  %855 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %854) #6, !dbg !60
  %856 = fmul float %844, 0x3FF7154760000000, !dbg !60
  %857 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %856) #6, !dbg !60
  %858 = fmul float %845, 0x3FF7154760000000, !dbg !60
  %859 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %858) #6, !dbg !60
  %860 = fmul float %846, 0x3FF7154760000000, !dbg !60
  %861 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %860) #6, !dbg !60
  %862 = fmul float %847, 0x3FF7154760000000, !dbg !60
  %863 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %862) #6, !dbg !60
  %864 = fadd float %493, %849, !dbg !61
  %865 = fadd float %494, %851, !dbg !61
  %866 = fadd float %495, %853, !dbg !61
  %867 = fadd float %496, %855, !dbg !61
  %868 = fadd float %497, %857, !dbg !61
  %869 = fadd float %498, %859, !dbg !61
  %870 = fadd float %499, %861, !dbg !61
  %871 = fadd float %500, %863, !dbg !61
  %872 = add nuw nsw i32 %501, 2048, !dbg !45
  %873 = icmp ult i32 %501, 6144, !dbg !45
  br i1 %873, label %492, label %874, !dbg !45

874:                                              ; preds = %__nv_tanhf.exit328
  %875 = or i32 %13, 1024, !dbg !10
  tail call void @llvm.nvvm.barrier0(), !dbg !62
  %876 = fadd float %864, %865, !dbg !66
  %877 = fadd float %866, %876, !dbg !66
  %878 = fadd float %867, %877, !dbg !66
  %879 = fadd float %868, %878, !dbg !66
  %880 = fadd float %869, %879, !dbg !66
  %881 = fadd float %870, %880, !dbg !66
  %882 = fadd float %871, %881, !dbg !66
  %883 = bitcast float %882 to i32, !dbg !62
  %884 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %883, i32 16, i32 31), !dbg !62
  %885 = bitcast i32 %884 to float, !dbg !62
  %886 = fadd float %882, %885, !dbg !66
  %887 = bitcast float %886 to i32, !dbg !62
  %888 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %887, i32 8, i32 31), !dbg !62
  %889 = bitcast i32 %888 to float, !dbg !62
  %890 = fadd float %886, %889, !dbg !66
  %891 = bitcast float %890 to i32, !dbg !62
  %892 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %891, i32 4, i32 31), !dbg !62
  %893 = bitcast i32 %892 to float, !dbg !62
  %894 = fadd float %890, %893, !dbg !66
  %895 = bitcast float %894 to i32, !dbg !62
  %896 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %895, i32 2, i32 31), !dbg !62
  %897 = bitcast i32 %896 to float, !dbg !62
  %898 = fadd float %894, %897, !dbg !66
  %899 = bitcast float %898 to i32, !dbg !62
  %900 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %899, i32 1, i32 31), !dbg !62
  %901 = bitcast i32 %900 to float, !dbg !62
  %902 = fadd float %898, %901, !dbg !66
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %458, float %902, i1 %456) #6, !dbg !62
  tail call void @llvm.nvvm.barrier0(), !dbg !62
  %903 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %461, i1 %459) #6, !dbg !62
  %904 = bitcast float %903 to i32, !dbg !62
  %905 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %904, i32 4, i32 31), !dbg !62
  %906 = bitcast i32 %905 to float, !dbg !62
  %907 = fadd float %903, %906, !dbg !66
  %908 = bitcast float %907 to i32, !dbg !62
  %909 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %908, i32 2, i32 31), !dbg !62
  %910 = bitcast i32 %909 to float, !dbg !62
  %911 = fadd float %907, %910, !dbg !66
  %912 = bitcast float %911 to i32, !dbg !62
  %913 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %912, i32 1, i32 31), !dbg !62
  %914 = bitcast i32 %913 to float, !dbg !62
  %915 = fadd float %911, %914, !dbg !66
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %461, float %915, i1 %486) #6, !dbg !62
  tail call void @llvm.nvvm.barrier0(), !dbg !62
  %916 = load float, ptr addrspace(3) @global_smem, align 4, !dbg !62
  %917 = zext nneg i32 %9 to i64
  %918 = getelementptr float, ptr addrspace(3) @global_smem, i64 %917
  %919 = zext nneg i32 %13 to i64
  %920 = getelementptr float, ptr addrspace(3) @global_smem, i64 %919
  %921 = zext nneg i32 %875 to i64
  %922 = getelementptr float, ptr addrspace(3) @global_smem, i64 %921
  %invariant.op525 = sub nsw i32 0, %17, !dbg !70
  %invariant.op526 = sub nsw i32 0, %18, !dbg !70
  %invariant.op527 = sub nsw i32 0, %19, !dbg !70
  %invariant.op528 = sub nsw i32 0, %488, !dbg !70
  %invariant.op529 = sub nsw i32 0, %489, !dbg !70
  %invariant.op530 = sub nsw i32 0, %490, !dbg !70
  %invariant.op531 = sub nsw i32 0, %491, !dbg !70
  %923 = getelementptr inbounds <4 x i32>, ptr addrspace(3) %920, i64 0, i64 1
  %924 = getelementptr inbounds <4 x i32>, ptr addrspace(3) %920, i64 0, i64 2
  %925 = getelementptr inbounds <4 x i32>, ptr addrspace(3) %920, i64 0, i64 3
  br label %926, !dbg !70

926:                                              ; preds = %874, %__nv_tanhf.exit176
  %927 = phi i32 [ 0, %874 ], [ %1357, %__nv_tanhf.exit176 ]
  %928 = or i32 %927, %9, !dbg !71
  %929 = or i32 %927, %13, !dbg !71
  %930 = or i32 %927, %875, !dbg !71
  %931 = add i32 %928, %16, !dbg !72
  %932 = add i32 %929, %16, !dbg !72
  %933 = add i32 %930, %16, !dbg !72
  %934 = sext i32 %931 to i64, !dbg !73
  %935 = getelementptr i16, ptr addrspace(1) %0, i64 %934, !dbg !73
  %936 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %935, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !74
  %937 = extractvalue { i32, i32, i32, i32 } %936, 0, !dbg !74
  %938 = extractvalue { i32, i32, i32, i32 } %936, 1, !dbg !74
  %939 = extractvalue { i32, i32, i32, i32 } %936, 2, !dbg !74
  %940 = extractvalue { i32, i32, i32, i32 } %936, 3, !dbg !74
  %941 = trunc i32 %937 to i16, !dbg !74
  %extelt.offset = lshr i32 %937, 16, !dbg !74
  %942 = trunc i32 %extelt.offset to i16, !dbg !74
  %943 = trunc i32 %938 to i16, !dbg !74
  %extelt.offset3 = lshr i32 %938, 16, !dbg !74
  %944 = trunc i32 %extelt.offset3 to i16, !dbg !74
  %945 = trunc i32 %939 to i16, !dbg !74
  %extelt.offset4 = lshr i32 %939, 16, !dbg !74
  %946 = trunc i32 %extelt.offset4 to i16, !dbg !74
  %947 = trunc i32 %940 to i16, !dbg !74
  %extelt.offset5 = lshr i32 %940, 16, !dbg !74
  %948 = trunc i32 %extelt.offset5 to i16, !dbg !74
  %949 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %941) #6, !dbg !75
  %950 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %942) #6, !dbg !75
  %951 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %943) #6, !dbg !75
  %952 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %944) #6, !dbg !75
  %953 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %945) #6, !dbg !75
  %954 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %946) #6, !dbg !75
  %955 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %947) #6, !dbg !75
  %956 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %948) #6, !dbg !75
  %957 = fmul float %949, 6.250000e-02, !dbg !76
  %958 = fmul float %950, 6.250000e-02, !dbg !76
  %959 = fmul float %951, 6.250000e-02, !dbg !76
  %960 = fmul float %952, 6.250000e-02, !dbg !76
  %961 = fmul float %953, 6.250000e-02, !dbg !76
  %962 = fmul float %954, 6.250000e-02, !dbg !76
  %963 = fmul float %955, 6.250000e-02, !dbg !76
  %964 = fmul float %956, 6.250000e-02, !dbg !76
  %965 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %957, float 5.000000e+01) #6, !dbg !77
  %966 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %958, float 5.000000e+01) #6, !dbg !77
  %967 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %959, float 5.000000e+01) #6, !dbg !77
  %968 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %960, float 5.000000e+01) #6, !dbg !77
  %969 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %961, float 5.000000e+01) #6, !dbg !77
  %970 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %962, float 5.000000e+01) #6, !dbg !77
  %971 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %963, float 5.000000e+01) #6, !dbg !77
  %972 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %964, float 5.000000e+01) #6, !dbg !77
  %973 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i = icmp eq i32 %973, 0, !dbg !78
  %974 = tail call float @llvm.nvvm.fabs.ftz.f(float %965) #6, !dbg !78
  %975 = tail call float @llvm.nvvm.fabs.f(float %965) #6, !dbg !78
  %.01.i = select i1 %.not.i, float %975, float %974, !dbg !78
  %976 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !78
  br i1 %976, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !78

__internal_fmad.exit1.i:                          ; preds = %926
  %977 = fmul float %.01.i, 0x4007154760000000, !dbg !78
  %978 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %977) #6, !dbg !78
  %979 = fadd float %978, 1.000000e+00, !dbg !78
  %980 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %979) #7, !dbg !78, !srcloc !24
  %981 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i = icmp eq i32 %981, 0, !dbg !78
  %982 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %980, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %983 = tail call float @llvm.nvvm.fma.rn.f(float %980, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i = select i1 %.not6.i, float %983, float %982, !dbg !78
  %984 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !78
  %s.0.i = select i1 %984, float 1.000000e+00, float %.03.i, !dbg !78
  %985 = bitcast float %s.0.i to i32, !dbg !78
  %986 = bitcast float %965 to i32, !dbg !78
  %987 = and i32 %986, -2147483648, !dbg !78
  %988 = or i32 %987, %985, !dbg !78
  %989 = bitcast i32 %988 to float, !dbg !78
  br label %__nv_tanhf.exit, !dbg !78

__internal_fmad.exit3.i:                          ; preds = %926
  %990 = fmul float %965, %965, !dbg !78
  %991 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i = icmp eq i32 %991, 0, !dbg !78
  %992 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %990, float 0xBFAAC795C0000000) #6, !dbg !78
  %993 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %990, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i = select i1 %.not1.i, float %993, float %992, !dbg !78
  %994 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i = icmp eq i32 %994, 0, !dbg !78
  %995 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %990, float 0x3FC10B2820000000) #6, !dbg !78
  %996 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %990, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i = select i1 %.not2.i, float %996, float %995, !dbg !78
  %997 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i = icmp eq i32 %997, 0, !dbg !78
  %998 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %990, float 0xBFD5553DA0000000) #6, !dbg !78
  %999 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %990, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i = select i1 %.not3.i, float %999, float %998, !dbg !78
  %1000 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i = icmp eq i32 %1000, 0, !dbg !78
  %1001 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %990, float 0.000000e+00) #6, !dbg !78
  %1002 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %990, float 0.000000e+00) #6, !dbg !78
  %.04.i = select i1 %.not4.i, float %1002, float %1001, !dbg !78
  %1003 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i = icmp eq i32 %1003, 0, !dbg !78
  %1004 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %965, float %965) #6, !dbg !78
  %1005 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %965, float %965) #6, !dbg !78
  %.02.i = select i1 %.not5.i, float %1005, float %1004, !dbg !78
  br label %__nv_tanhf.exit, !dbg !78

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %989, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !78
  %1006 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i44 = icmp eq i32 %1006, 0, !dbg !78
  %1007 = tail call float @llvm.nvvm.fabs.ftz.f(float %966) #6, !dbg !78
  %1008 = tail call float @llvm.nvvm.fabs.f(float %966) #6, !dbg !78
  %.01.i45 = select i1 %.not.i44, float %1008, float %1007, !dbg !78
  %1009 = fcmp ult float %.01.i45, 0x3FE3333340000000, !dbg !78
  br i1 %1009, label %__internal_fmad.exit3.i51, label %__internal_fmad.exit1.i46, !dbg !78

__internal_fmad.exit1.i46:                        ; preds = %__nv_tanhf.exit
  %1010 = fmul float %.01.i45, 0x4007154760000000, !dbg !78
  %1011 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1010) #6, !dbg !78
  %1012 = fadd float %1011, 1.000000e+00, !dbg !78
  %1013 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1012) #7, !dbg !78, !srcloc !24
  %1014 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i47 = icmp eq i32 %1014, 0, !dbg !78
  %1015 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1013, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %1016 = tail call float @llvm.nvvm.fma.rn.f(float %1013, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i48 = select i1 %.not6.i47, float %1016, float %1015, !dbg !78
  %1017 = fcmp oge float %.01.i45, 0x4022059680000000, !dbg !78
  %s.0.i49 = select i1 %1017, float 1.000000e+00, float %.03.i48, !dbg !78
  %1018 = bitcast float %s.0.i49 to i32, !dbg !78
  %1019 = bitcast float %966 to i32, !dbg !78
  %1020 = and i32 %1019, -2147483648, !dbg !78
  %1021 = or i32 %1020, %1018, !dbg !78
  %1022 = bitcast i32 %1021 to float, !dbg !78
  br label %__nv_tanhf.exit62, !dbg !78

__internal_fmad.exit3.i51:                        ; preds = %__nv_tanhf.exit
  %1023 = fmul float %966, %966, !dbg !78
  %1024 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i52 = icmp eq i32 %1024, 0, !dbg !78
  %1025 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1023, float 0xBFAAC795C0000000) #6, !dbg !78
  %1026 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1023, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i53 = select i1 %.not1.i52, float %1026, float %1025, !dbg !78
  %1027 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i54 = icmp eq i32 %1027, 0, !dbg !78
  %1028 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i53, float %1023, float 0x3FC10B2820000000) #6, !dbg !78
  %1029 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i53, float %1023, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i55 = select i1 %.not2.i54, float %1029, float %1028, !dbg !78
  %1030 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i56 = icmp eq i32 %1030, 0, !dbg !78
  %1031 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i55, float %1023, float 0xBFD5553DA0000000) #6, !dbg !78
  %1032 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i55, float %1023, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i57 = select i1 %.not3.i56, float %1032, float %1031, !dbg !78
  %1033 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i58 = icmp eq i32 %1033, 0, !dbg !78
  %1034 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i57, float %1023, float 0.000000e+00) #6, !dbg !78
  %1035 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i57, float %1023, float 0.000000e+00) #6, !dbg !78
  %.04.i59 = select i1 %.not4.i58, float %1035, float %1034, !dbg !78
  %1036 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i60 = icmp eq i32 %1036, 0, !dbg !78
  %1037 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i59, float %966, float %966) #6, !dbg !78
  %1038 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i59, float %966, float %966) #6, !dbg !78
  %.02.i61 = select i1 %.not5.i60, float %1038, float %1037, !dbg !78
  br label %__nv_tanhf.exit62, !dbg !78

__nv_tanhf.exit62:                                ; preds = %__internal_fmad.exit1.i46, %__internal_fmad.exit3.i51
  %s.1.i50 = phi float [ %1022, %__internal_fmad.exit1.i46 ], [ %.02.i61, %__internal_fmad.exit3.i51 ], !dbg !78
  %1039 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i63 = icmp eq i32 %1039, 0, !dbg !78
  %1040 = tail call float @llvm.nvvm.fabs.ftz.f(float %967) #6, !dbg !78
  %1041 = tail call float @llvm.nvvm.fabs.f(float %967) #6, !dbg !78
  %.01.i64 = select i1 %.not.i63, float %1041, float %1040, !dbg !78
  %1042 = fcmp ult float %.01.i64, 0x3FE3333340000000, !dbg !78
  br i1 %1042, label %__internal_fmad.exit3.i70, label %__internal_fmad.exit1.i65, !dbg !78

__internal_fmad.exit1.i65:                        ; preds = %__nv_tanhf.exit62
  %1043 = fmul float %.01.i64, 0x4007154760000000, !dbg !78
  %1044 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1043) #6, !dbg !78
  %1045 = fadd float %1044, 1.000000e+00, !dbg !78
  %1046 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1045) #7, !dbg !78, !srcloc !24
  %1047 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i66 = icmp eq i32 %1047, 0, !dbg !78
  %1048 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1046, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %1049 = tail call float @llvm.nvvm.fma.rn.f(float %1046, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i67 = select i1 %.not6.i66, float %1049, float %1048, !dbg !78
  %1050 = fcmp oge float %.01.i64, 0x4022059680000000, !dbg !78
  %s.0.i68 = select i1 %1050, float 1.000000e+00, float %.03.i67, !dbg !78
  %1051 = bitcast float %s.0.i68 to i32, !dbg !78
  %1052 = bitcast float %967 to i32, !dbg !78
  %1053 = and i32 %1052, -2147483648, !dbg !78
  %1054 = or i32 %1053, %1051, !dbg !78
  %1055 = bitcast i32 %1054 to float, !dbg !78
  br label %__nv_tanhf.exit81, !dbg !78

__internal_fmad.exit3.i70:                        ; preds = %__nv_tanhf.exit62
  %1056 = fmul float %967, %967, !dbg !78
  %1057 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i71 = icmp eq i32 %1057, 0, !dbg !78
  %1058 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1056, float 0xBFAAC795C0000000) #6, !dbg !78
  %1059 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1056, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i72 = select i1 %.not1.i71, float %1059, float %1058, !dbg !78
  %1060 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i73 = icmp eq i32 %1060, 0, !dbg !78
  %1061 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i72, float %1056, float 0x3FC10B2820000000) #6, !dbg !78
  %1062 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i72, float %1056, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i74 = select i1 %.not2.i73, float %1062, float %1061, !dbg !78
  %1063 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i75 = icmp eq i32 %1063, 0, !dbg !78
  %1064 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %1056, float 0xBFD5553DA0000000) #6, !dbg !78
  %1065 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %1056, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i76 = select i1 %.not3.i75, float %1065, float %1064, !dbg !78
  %1066 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i77 = icmp eq i32 %1066, 0, !dbg !78
  %1067 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i76, float %1056, float 0.000000e+00) #6, !dbg !78
  %1068 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i76, float %1056, float 0.000000e+00) #6, !dbg !78
  %.04.i78 = select i1 %.not4.i77, float %1068, float %1067, !dbg !78
  %1069 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i79 = icmp eq i32 %1069, 0, !dbg !78
  %1070 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i78, float %967, float %967) #6, !dbg !78
  %1071 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i78, float %967, float %967) #6, !dbg !78
  %.02.i80 = select i1 %.not5.i79, float %1071, float %1070, !dbg !78
  br label %__nv_tanhf.exit81, !dbg !78

__nv_tanhf.exit81:                                ; preds = %__internal_fmad.exit1.i65, %__internal_fmad.exit3.i70
  %s.1.i69 = phi float [ %1055, %__internal_fmad.exit1.i65 ], [ %.02.i80, %__internal_fmad.exit3.i70 ], !dbg !78
  %1072 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i82 = icmp eq i32 %1072, 0, !dbg !78
  %1073 = tail call float @llvm.nvvm.fabs.ftz.f(float %968) #6, !dbg !78
  %1074 = tail call float @llvm.nvvm.fabs.f(float %968) #6, !dbg !78
  %.01.i83 = select i1 %.not.i82, float %1074, float %1073, !dbg !78
  %1075 = fcmp ult float %.01.i83, 0x3FE3333340000000, !dbg !78
  br i1 %1075, label %__internal_fmad.exit3.i89, label %__internal_fmad.exit1.i84, !dbg !78

__internal_fmad.exit1.i84:                        ; preds = %__nv_tanhf.exit81
  %1076 = fmul float %.01.i83, 0x4007154760000000, !dbg !78
  %1077 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1076) #6, !dbg !78
  %1078 = fadd float %1077, 1.000000e+00, !dbg !78
  %1079 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1078) #7, !dbg !78, !srcloc !24
  %1080 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i85 = icmp eq i32 %1080, 0, !dbg !78
  %1081 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1079, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %1082 = tail call float @llvm.nvvm.fma.rn.f(float %1079, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i86 = select i1 %.not6.i85, float %1082, float %1081, !dbg !78
  %1083 = fcmp oge float %.01.i83, 0x4022059680000000, !dbg !78
  %s.0.i87 = select i1 %1083, float 1.000000e+00, float %.03.i86, !dbg !78
  %1084 = bitcast float %s.0.i87 to i32, !dbg !78
  %1085 = bitcast float %968 to i32, !dbg !78
  %1086 = and i32 %1085, -2147483648, !dbg !78
  %1087 = or i32 %1086, %1084, !dbg !78
  %1088 = bitcast i32 %1087 to float, !dbg !78
  br label %__nv_tanhf.exit100, !dbg !78

__internal_fmad.exit3.i89:                        ; preds = %__nv_tanhf.exit81
  %1089 = fmul float %968, %968, !dbg !78
  %1090 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i90 = icmp eq i32 %1090, 0, !dbg !78
  %1091 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1089, float 0xBFAAC795C0000000) #6, !dbg !78
  %1092 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1089, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i91 = select i1 %.not1.i90, float %1092, float %1091, !dbg !78
  %1093 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i92 = icmp eq i32 %1093, 0, !dbg !78
  %1094 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i91, float %1089, float 0x3FC10B2820000000) #6, !dbg !78
  %1095 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i91, float %1089, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i93 = select i1 %.not2.i92, float %1095, float %1094, !dbg !78
  %1096 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i94 = icmp eq i32 %1096, 0, !dbg !78
  %1097 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i93, float %1089, float 0xBFD5553DA0000000) #6, !dbg !78
  %1098 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i93, float %1089, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i95 = select i1 %.not3.i94, float %1098, float %1097, !dbg !78
  %1099 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i96 = icmp eq i32 %1099, 0, !dbg !78
  %1100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i95, float %1089, float 0.000000e+00) #6, !dbg !78
  %1101 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i95, float %1089, float 0.000000e+00) #6, !dbg !78
  %.04.i97 = select i1 %.not4.i96, float %1101, float %1100, !dbg !78
  %1102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i98 = icmp eq i32 %1102, 0, !dbg !78
  %1103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i97, float %968, float %968) #6, !dbg !78
  %1104 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i97, float %968, float %968) #6, !dbg !78
  %.02.i99 = select i1 %.not5.i98, float %1104, float %1103, !dbg !78
  br label %__nv_tanhf.exit100, !dbg !78

__nv_tanhf.exit100:                               ; preds = %__internal_fmad.exit1.i84, %__internal_fmad.exit3.i89
  %s.1.i88 = phi float [ %1088, %__internal_fmad.exit1.i84 ], [ %.02.i99, %__internal_fmad.exit3.i89 ], !dbg !78
  %1105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i101 = icmp eq i32 %1105, 0, !dbg !78
  %1106 = tail call float @llvm.nvvm.fabs.ftz.f(float %969) #6, !dbg !78
  %1107 = tail call float @llvm.nvvm.fabs.f(float %969) #6, !dbg !78
  %.01.i102 = select i1 %.not.i101, float %1107, float %1106, !dbg !78
  %1108 = fcmp ult float %.01.i102, 0x3FE3333340000000, !dbg !78
  br i1 %1108, label %__internal_fmad.exit3.i108, label %__internal_fmad.exit1.i103, !dbg !78

__internal_fmad.exit1.i103:                       ; preds = %__nv_tanhf.exit100
  %1109 = fmul float %.01.i102, 0x4007154760000000, !dbg !78
  %1110 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1109) #6, !dbg !78
  %1111 = fadd float %1110, 1.000000e+00, !dbg !78
  %1112 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1111) #7, !dbg !78, !srcloc !24
  %1113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i104 = icmp eq i32 %1113, 0, !dbg !78
  %1114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1112, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %1115 = tail call float @llvm.nvvm.fma.rn.f(float %1112, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i105 = select i1 %.not6.i104, float %1115, float %1114, !dbg !78
  %1116 = fcmp oge float %.01.i102, 0x4022059680000000, !dbg !78
  %s.0.i106 = select i1 %1116, float 1.000000e+00, float %.03.i105, !dbg !78
  %1117 = bitcast float %s.0.i106 to i32, !dbg !78
  %1118 = bitcast float %969 to i32, !dbg !78
  %1119 = and i32 %1118, -2147483648, !dbg !78
  %1120 = or i32 %1119, %1117, !dbg !78
  %1121 = bitcast i32 %1120 to float, !dbg !78
  br label %__nv_tanhf.exit119, !dbg !78

__internal_fmad.exit3.i108:                       ; preds = %__nv_tanhf.exit100
  %1122 = fmul float %969, %969, !dbg !78
  %1123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i109 = icmp eq i32 %1123, 0, !dbg !78
  %1124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1122, float 0xBFAAC795C0000000) #6, !dbg !78
  %1125 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1122, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i110 = select i1 %.not1.i109, float %1125, float %1124, !dbg !78
  %1126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i111 = icmp eq i32 %1126, 0, !dbg !78
  %1127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i110, float %1122, float 0x3FC10B2820000000) #6, !dbg !78
  %1128 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i110, float %1122, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i112 = select i1 %.not2.i111, float %1128, float %1127, !dbg !78
  %1129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i113 = icmp eq i32 %1129, 0, !dbg !78
  %1130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i112, float %1122, float 0xBFD5553DA0000000) #6, !dbg !78
  %1131 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i112, float %1122, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i114 = select i1 %.not3.i113, float %1131, float %1130, !dbg !78
  %1132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i115 = icmp eq i32 %1132, 0, !dbg !78
  %1133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i114, float %1122, float 0.000000e+00) #6, !dbg !78
  %1134 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i114, float %1122, float 0.000000e+00) #6, !dbg !78
  %.04.i116 = select i1 %.not4.i115, float %1134, float %1133, !dbg !78
  %1135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i117 = icmp eq i32 %1135, 0, !dbg !78
  %1136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i116, float %969, float %969) #6, !dbg !78
  %1137 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i116, float %969, float %969) #6, !dbg !78
  %.02.i118 = select i1 %.not5.i117, float %1137, float %1136, !dbg !78
  br label %__nv_tanhf.exit119, !dbg !78

__nv_tanhf.exit119:                               ; preds = %__internal_fmad.exit1.i103, %__internal_fmad.exit3.i108
  %s.1.i107 = phi float [ %1121, %__internal_fmad.exit1.i103 ], [ %.02.i118, %__internal_fmad.exit3.i108 ], !dbg !78
  %1138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i120 = icmp eq i32 %1138, 0, !dbg !78
  %1139 = tail call float @llvm.nvvm.fabs.ftz.f(float %970) #6, !dbg !78
  %1140 = tail call float @llvm.nvvm.fabs.f(float %970) #6, !dbg !78
  %.01.i121 = select i1 %.not.i120, float %1140, float %1139, !dbg !78
  %1141 = fcmp ult float %.01.i121, 0x3FE3333340000000, !dbg !78
  br i1 %1141, label %__internal_fmad.exit3.i127, label %__internal_fmad.exit1.i122, !dbg !78

__internal_fmad.exit1.i122:                       ; preds = %__nv_tanhf.exit119
  %1142 = fmul float %.01.i121, 0x4007154760000000, !dbg !78
  %1143 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1142) #6, !dbg !78
  %1144 = fadd float %1143, 1.000000e+00, !dbg !78
  %1145 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1144) #7, !dbg !78, !srcloc !24
  %1146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i123 = icmp eq i32 %1146, 0, !dbg !78
  %1147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1145, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %1148 = tail call float @llvm.nvvm.fma.rn.f(float %1145, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i124 = select i1 %.not6.i123, float %1148, float %1147, !dbg !78
  %1149 = fcmp oge float %.01.i121, 0x4022059680000000, !dbg !78
  %s.0.i125 = select i1 %1149, float 1.000000e+00, float %.03.i124, !dbg !78
  %1150 = bitcast float %s.0.i125 to i32, !dbg !78
  %1151 = bitcast float %970 to i32, !dbg !78
  %1152 = and i32 %1151, -2147483648, !dbg !78
  %1153 = or i32 %1152, %1150, !dbg !78
  %1154 = bitcast i32 %1153 to float, !dbg !78
  br label %__nv_tanhf.exit138, !dbg !78

__internal_fmad.exit3.i127:                       ; preds = %__nv_tanhf.exit119
  %1155 = fmul float %970, %970, !dbg !78
  %1156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i128 = icmp eq i32 %1156, 0, !dbg !78
  %1157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1155, float 0xBFAAC795C0000000) #6, !dbg !78
  %1158 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1155, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i129 = select i1 %.not1.i128, float %1158, float %1157, !dbg !78
  %1159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i130 = icmp eq i32 %1159, 0, !dbg !78
  %1160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i129, float %1155, float 0x3FC10B2820000000) #6, !dbg !78
  %1161 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i129, float %1155, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i131 = select i1 %.not2.i130, float %1161, float %1160, !dbg !78
  %1162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i132 = icmp eq i32 %1162, 0, !dbg !78
  %1163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i131, float %1155, float 0xBFD5553DA0000000) #6, !dbg !78
  %1164 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i131, float %1155, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i133 = select i1 %.not3.i132, float %1164, float %1163, !dbg !78
  %1165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i134 = icmp eq i32 %1165, 0, !dbg !78
  %1166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i133, float %1155, float 0.000000e+00) #6, !dbg !78
  %1167 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i133, float %1155, float 0.000000e+00) #6, !dbg !78
  %.04.i135 = select i1 %.not4.i134, float %1167, float %1166, !dbg !78
  %1168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i136 = icmp eq i32 %1168, 0, !dbg !78
  %1169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i135, float %970, float %970) #6, !dbg !78
  %1170 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i135, float %970, float %970) #6, !dbg !78
  %.02.i137 = select i1 %.not5.i136, float %1170, float %1169, !dbg !78
  br label %__nv_tanhf.exit138, !dbg !78

__nv_tanhf.exit138:                               ; preds = %__internal_fmad.exit1.i122, %__internal_fmad.exit3.i127
  %s.1.i126 = phi float [ %1154, %__internal_fmad.exit1.i122 ], [ %.02.i137, %__internal_fmad.exit3.i127 ], !dbg !78
  %1171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i139 = icmp eq i32 %1171, 0, !dbg !78
  %1172 = tail call float @llvm.nvvm.fabs.ftz.f(float %971) #6, !dbg !78
  %1173 = tail call float @llvm.nvvm.fabs.f(float %971) #6, !dbg !78
  %.01.i140 = select i1 %.not.i139, float %1173, float %1172, !dbg !78
  %1174 = fcmp ult float %.01.i140, 0x3FE3333340000000, !dbg !78
  br i1 %1174, label %__internal_fmad.exit3.i146, label %__internal_fmad.exit1.i141, !dbg !78

__internal_fmad.exit1.i141:                       ; preds = %__nv_tanhf.exit138
  %1175 = fmul float %.01.i140, 0x4007154760000000, !dbg !78
  %1176 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1175) #6, !dbg !78
  %1177 = fadd float %1176, 1.000000e+00, !dbg !78
  %1178 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1177) #7, !dbg !78, !srcloc !24
  %1179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i142 = icmp eq i32 %1179, 0, !dbg !78
  %1180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1178, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %1181 = tail call float @llvm.nvvm.fma.rn.f(float %1178, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i143 = select i1 %.not6.i142, float %1181, float %1180, !dbg !78
  %1182 = fcmp oge float %.01.i140, 0x4022059680000000, !dbg !78
  %s.0.i144 = select i1 %1182, float 1.000000e+00, float %.03.i143, !dbg !78
  %1183 = bitcast float %s.0.i144 to i32, !dbg !78
  %1184 = bitcast float %971 to i32, !dbg !78
  %1185 = and i32 %1184, -2147483648, !dbg !78
  %1186 = or i32 %1185, %1183, !dbg !78
  %1187 = bitcast i32 %1186 to float, !dbg !78
  br label %__nv_tanhf.exit157, !dbg !78

__internal_fmad.exit3.i146:                       ; preds = %__nv_tanhf.exit138
  %1188 = fmul float %971, %971, !dbg !78
  %1189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i147 = icmp eq i32 %1189, 0, !dbg !78
  %1190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1188, float 0xBFAAC795C0000000) #6, !dbg !78
  %1191 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1188, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i148 = select i1 %.not1.i147, float %1191, float %1190, !dbg !78
  %1192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i149 = icmp eq i32 %1192, 0, !dbg !78
  %1193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i148, float %1188, float 0x3FC10B2820000000) #6, !dbg !78
  %1194 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i148, float %1188, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i150 = select i1 %.not2.i149, float %1194, float %1193, !dbg !78
  %1195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i151 = icmp eq i32 %1195, 0, !dbg !78
  %1196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i150, float %1188, float 0xBFD5553DA0000000) #6, !dbg !78
  %1197 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i150, float %1188, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i152 = select i1 %.not3.i151, float %1197, float %1196, !dbg !78
  %1198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i153 = icmp eq i32 %1198, 0, !dbg !78
  %1199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i152, float %1188, float 0.000000e+00) #6, !dbg !78
  %1200 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i152, float %1188, float 0.000000e+00) #6, !dbg !78
  %.04.i154 = select i1 %.not4.i153, float %1200, float %1199, !dbg !78
  %1201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i155 = icmp eq i32 %1201, 0, !dbg !78
  %1202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i154, float %971, float %971) #6, !dbg !78
  %1203 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i154, float %971, float %971) #6, !dbg !78
  %.02.i156 = select i1 %.not5.i155, float %1203, float %1202, !dbg !78
  br label %__nv_tanhf.exit157, !dbg !78

__nv_tanhf.exit157:                               ; preds = %__internal_fmad.exit1.i141, %__internal_fmad.exit3.i146
  %s.1.i145 = phi float [ %1187, %__internal_fmad.exit1.i141 ], [ %.02.i156, %__internal_fmad.exit3.i146 ], !dbg !78
  %1204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not.i158 = icmp eq i32 %1204, 0, !dbg !78
  %1205 = tail call float @llvm.nvvm.fabs.ftz.f(float %972) #6, !dbg !78
  %1206 = tail call float @llvm.nvvm.fabs.f(float %972) #6, !dbg !78
  %.01.i159 = select i1 %.not.i158, float %1206, float %1205, !dbg !78
  %1207 = fcmp ult float %.01.i159, 0x3FE3333340000000, !dbg !78
  br i1 %1207, label %__internal_fmad.exit3.i165, label %__internal_fmad.exit1.i160, !dbg !78

__internal_fmad.exit1.i160:                       ; preds = %__nv_tanhf.exit157
  %1208 = fmul float %.01.i159, 0x4007154760000000, !dbg !78
  %1209 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %1208) #6, !dbg !78
  %1210 = fadd float %1209, 1.000000e+00, !dbg !78
  %1211 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %1210) #7, !dbg !78, !srcloc !24
  %1212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not6.i161 = icmp eq i32 %1212, 0, !dbg !78
  %1213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1211, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %1214 = tail call float @llvm.nvvm.fma.rn.f(float %1211, float -2.000000e+00, float 1.000000e+00) #6, !dbg !78
  %.03.i162 = select i1 %.not6.i161, float %1214, float %1213, !dbg !78
  %1215 = fcmp oge float %.01.i159, 0x4022059680000000, !dbg !78
  %s.0.i163 = select i1 %1215, float 1.000000e+00, float %.03.i162, !dbg !78
  %1216 = bitcast float %s.0.i163 to i32, !dbg !78
  %1217 = bitcast float %972 to i32, !dbg !78
  %1218 = and i32 %1217, -2147483648, !dbg !78
  %1219 = or i32 %1218, %1216, !dbg !78
  %1220 = bitcast i32 %1219 to float, !dbg !78
  br label %__nv_tanhf.exit176, !dbg !78

__internal_fmad.exit3.i165:                       ; preds = %__nv_tanhf.exit157
  %1221 = fmul float %972, %972, !dbg !78
  %1222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not1.i166 = icmp eq i32 %1222, 0, !dbg !78
  %1223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %1221, float 0xBFAAC795C0000000) #6, !dbg !78
  %1224 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %1221, float 0xBFAAC795C0000000) #6, !dbg !78
  %.06.i167 = select i1 %.not1.i166, float %1224, float %1223, !dbg !78
  %1225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not2.i168 = icmp eq i32 %1225, 0, !dbg !78
  %1226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i167, float %1221, float 0x3FC10B2820000000) #6, !dbg !78
  %1227 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i167, float %1221, float 0x3FC10B2820000000) #6, !dbg !78
  %.05.i169 = select i1 %.not2.i168, float %1227, float %1226, !dbg !78
  %1228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not3.i170 = icmp eq i32 %1228, 0, !dbg !78
  %1229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i169, float %1221, float 0xBFD5553DA0000000) #6, !dbg !78
  %1230 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i169, float %1221, float 0xBFD5553DA0000000) #6, !dbg !78
  %.0.i171 = select i1 %.not3.i170, float %1230, float %1229, !dbg !78
  %1231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not4.i172 = icmp eq i32 %1231, 0, !dbg !78
  %1232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i171, float %1221, float 0.000000e+00) #6, !dbg !78
  %1233 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i171, float %1221, float 0.000000e+00) #6, !dbg !78
  %.04.i173 = select i1 %.not4.i172, float %1233, float %1232, !dbg !78
  %1234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !78
  %.not5.i174 = icmp eq i32 %1234, 0, !dbg !78
  %1235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i173, float %972, float %972) #6, !dbg !78
  %1236 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i173, float %972, float %972) #6, !dbg !78
  %.02.i175 = select i1 %.not5.i174, float %1236, float %1235, !dbg !78
  br label %__nv_tanhf.exit176, !dbg !78

__nv_tanhf.exit176:                               ; preds = %__internal_fmad.exit1.i160, %__internal_fmad.exit3.i165
  %s.1.i164 = phi float [ %1220, %__internal_fmad.exit1.i160 ], [ %.02.i175, %__internal_fmad.exit3.i165 ], !dbg !78
  %1237 = fmul float %s.1.i, 5.000000e+01, !dbg !79
  %1238 = fmul float %s.1.i50, 5.000000e+01, !dbg !79
  %1239 = fmul float %s.1.i69, 5.000000e+01, !dbg !79
  %1240 = fmul float %s.1.i88, 5.000000e+01, !dbg !79
  %1241 = fmul float %s.1.i107, 5.000000e+01, !dbg !79
  %1242 = fmul float %s.1.i126, 5.000000e+01, !dbg !79
  %1243 = fmul float %s.1.i145, 5.000000e+01, !dbg !79
  %1244 = fmul float %s.1.i164, 5.000000e+01, !dbg !79
  %1245 = sub i32 %928, %15, !dbg !80
  %1246 = icmp sgt i32 %1245, 0, !dbg !81
  %1247 = icmp sgt i32 %927, %invariant.op525, !dbg !81
  %1248 = icmp sgt i32 %927, %invariant.op526, !dbg !81
  %1249 = icmp sgt i32 %927, %invariant.op527, !dbg !81
  %1250 = icmp sgt i32 %927, %invariant.op528, !dbg !81
  %1251 = icmp sgt i32 %927, %invariant.op529, !dbg !81
  %1252 = icmp sgt i32 %927, %invariant.op530, !dbg !81
  %1253 = icmp sgt i32 %927, %invariant.op531, !dbg !81
  %1254 = select i1 %1246, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1255 = select i1 %1247, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1256 = select i1 %1248, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1257 = select i1 %1249, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1258 = select i1 %1250, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1259 = select i1 %1251, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1260 = select i1 %1252, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1261 = select i1 %1253, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !82
  %1262 = fadd float %1254, %1237, !dbg !83
  %1263 = fadd float %1255, %1238, !dbg !83
  %1264 = fadd float %1256, %1239, !dbg !83
  %1265 = fadd float %1257, %1240, !dbg !83
  %1266 = fadd float %1258, %1241, !dbg !83
  %1267 = fadd float %1259, %1242, !dbg !83
  %1268 = fadd float %1260, %1243, !dbg !83
  %1269 = fadd float %1261, %1244, !dbg !83
  %1270 = fsub float %1262, %487, !dbg !84
  %1271 = fsub float %1263, %487, !dbg !84
  %1272 = fsub float %1264, %487, !dbg !84
  %1273 = fsub float %1265, %487, !dbg !84
  %1274 = fsub float %1266, %487, !dbg !84
  %1275 = fsub float %1267, %487, !dbg !84
  %1276 = fsub float %1268, %487, !dbg !84
  %1277 = fsub float %1269, %487, !dbg !84
  %1278 = fmul float %1270, 0x3FF7154760000000, !dbg !85
  %1279 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1278) #6, !dbg !85
  %1280 = fmul float %1271, 0x3FF7154760000000, !dbg !85
  %1281 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1280) #6, !dbg !85
  %1282 = fmul float %1272, 0x3FF7154760000000, !dbg !85
  %1283 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1282) #6, !dbg !85
  %1284 = fmul float %1273, 0x3FF7154760000000, !dbg !85
  %1285 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1284) #6, !dbg !85
  %1286 = fmul float %1274, 0x3FF7154760000000, !dbg !85
  %1287 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1286) #6, !dbg !85
  %1288 = fmul float %1275, 0x3FF7154760000000, !dbg !85
  %1289 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1288) #6, !dbg !85
  %1290 = fmul float %1276, 0x3FF7154760000000, !dbg !85
  %1291 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1290) #6, !dbg !85
  %1292 = fmul float %1277, 0x3FF7154760000000, !dbg !85
  %1293 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %1292) #6, !dbg !85
  %1294 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1279, float %916) #6, !dbg !86
  %1295 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1281, float %916) #6, !dbg !86
  %1296 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1283, float %916) #6, !dbg !86
  %1297 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1285, float %916) #6, !dbg !86
  %1298 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1287, float %916) #6, !dbg !86
  %1299 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1289, float %916) #6, !dbg !86
  %1300 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1291, float %916) #6, !dbg !86
  %1301 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %1293, float %916) #6, !dbg !86
  %1302 = getelementptr i16, ptr addrspace(1) %1, i64 %934, !dbg !87
  %1303 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1294) #6, !dbg !88
  %1304 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1295) #6, !dbg !88
  %1305 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1296) #6, !dbg !88
  %1306 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1297) #6, !dbg !88
  %1307 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1298) #6, !dbg !88
  %1308 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1299) #6, !dbg !88
  %1309 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1300) #6, !dbg !88
  %1310 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %1301) #6, !dbg !88
  %1311 = insertelement <2 x i16> undef, i16 %1303, i64 0, !dbg !88
  %1312 = insertelement <2 x i16> %1311, i16 %1304, i64 1, !dbg !88
  %1313 = bitcast <2 x i16> %1312 to i32, !dbg !88
  %1314 = insertelement <2 x i16> undef, i16 %1305, i64 0, !dbg !88
  %1315 = insertelement <2 x i16> %1314, i16 %1306, i64 1, !dbg !88
  %1316 = bitcast <2 x i16> %1315 to i32, !dbg !88
  %1317 = insertelement <2 x i16> undef, i16 %1307, i64 0, !dbg !88
  %1318 = insertelement <2 x i16> %1317, i16 %1308, i64 1, !dbg !88
  %1319 = bitcast <2 x i16> %1318 to i32, !dbg !88
  %1320 = insertelement <2 x i16> undef, i16 %1309, i64 0, !dbg !88
  %1321 = insertelement <2 x i16> %1320, i16 %1310, i64 1, !dbg !88
  %1322 = bitcast <2 x i16> %1321 to i32, !dbg !88
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1313, i32 %1316, i32 %1319, i32 %1322, ptr addrspace(1) %1302, i1 true) #6, !dbg !88
  %1323 = sext i32 %932 to i64, !dbg !89
  %1324 = getelementptr float, ptr addrspace(1) %2, i64 %1323, !dbg !89
  %1325 = sext i32 %933 to i64, !dbg !89
  %1326 = getelementptr float, ptr addrspace(1) %2, i64 %1325, !dbg !89
  tail call void @llvm.nvvm.barrier0(), !dbg !90
  %1327 = insertelement <8 x float> undef, float %1294, i64 0, !dbg !90
  %1328 = insertelement <8 x float> %1327, float %1295, i64 1, !dbg !90
  %1329 = insertelement <8 x float> %1328, float %1296, i64 2, !dbg !90
  %1330 = insertelement <8 x float> %1329, float %1297, i64 3, !dbg !90
  %1331 = insertelement <8 x float> %1330, float %1298, i64 4, !dbg !90
  %1332 = insertelement <8 x float> %1331, float %1299, i64 5, !dbg !90
  %1333 = insertelement <8 x float> %1332, float %1300, i64 6, !dbg !90
  %1334 = insertelement <8 x float> %1333, float %1301, i64 7, !dbg !90
  store <8 x float> %1334, ptr addrspace(3) %918, align 32, !dbg !90
  tail call void @llvm.nvvm.barrier0(), !dbg !90
  %1335 = load <4 x i32>, ptr addrspace(3) %922, align 16, !dbg !90
  %.extract = load i32, ptr addrspace(3) %920, align 16, !dbg !90
  %.extract7 = load i32, ptr addrspace(3) %923, align 4, !dbg !90
  %.extract9 = load i32, ptr addrspace(3) %924, align 8, !dbg !90
  %.extract11 = load i32, ptr addrspace(3) %925, align 4, !dbg !90
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract7, i32 %.extract9, i32 %.extract11, ptr addrspace(1) %1324, i1 true) #6, !dbg !90
  %.extract13 = extractelement <4 x i32> %1335, i64 0, !dbg !90
  %.extract15 = extractelement <4 x i32> %1335, i64 1, !dbg !90
  %.extract17 = extractelement <4 x i32> %1335, i64 2, !dbg !90
  %.extract19 = extractelement <4 x i32> %1335, i64 3, !dbg !90
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract13, i32 %.extract15, i32 %.extract17, i32 %.extract19, ptr addrspace(1) %1326, i1 true) #6, !dbg !90
  %1336 = getelementptr i16, ptr addrspace(1) %3, i64 %934, !dbg !91
  %1337 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i) #6, !dbg !92
  %1338 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i50) #6, !dbg !92
  %1339 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i69) #6, !dbg !92
  %1340 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i88) #6, !dbg !92
  %1341 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i107) #6, !dbg !92
  %1342 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i126) #6, !dbg !92
  %1343 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i145) #6, !dbg !92
  %1344 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i164) #6, !dbg !92
  %1345 = insertelement <2 x i16> undef, i16 %1337, i64 0, !dbg !92
  %1346 = insertelement <2 x i16> %1345, i16 %1338, i64 1, !dbg !92
  %1347 = bitcast <2 x i16> %1346 to i32, !dbg !92
  %1348 = insertelement <2 x i16> undef, i16 %1339, i64 0, !dbg !92
  %1349 = insertelement <2 x i16> %1348, i16 %1340, i64 1, !dbg !92
  %1350 = bitcast <2 x i16> %1349 to i32, !dbg !92
  %1351 = insertelement <2 x i16> undef, i16 %1341, i64 0, !dbg !92
  %1352 = insertelement <2 x i16> %1351, i16 %1342, i64 1, !dbg !92
  %1353 = bitcast <2 x i16> %1352 to i32, !dbg !92
  %1354 = insertelement <2 x i16> undef, i16 %1343, i64 0, !dbg !92
  %1355 = insertelement <2 x i16> %1354, i16 %1344, i64 1, !dbg !92
  %1356 = bitcast <2 x i16> %1355 to i32, !dbg !92
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1347, i32 %1350, i32 %1353, i32 %1356, ptr addrspace(1) %1336, i1 true) #6, !dbg !92
  %1357 = add nuw nsw i32 %927, 2048, !dbg !70
  %1358 = icmp ult i32 %927, 6144, !dbg !70
  br i1 %1358, label %926, label %1359, !dbg !70

1359:                                             ; preds = %__nv_tanhf.exit176
  ret void, !dbg !93
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: alwaysinline nounwind
define float @__nv_tanhf(float %a) local_unnamed_addr #3 {
__nv_fabsf.exit:
  %0 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not = icmp eq i32 %0, 0
  %1 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #6
  %2 = tail call float @llvm.nvvm.fabs.f(float %a) #6
  %.01 = select i1 %.not, float %2, float %1
  %3 = fcmp ult float %.01, 0x3FE3333340000000
  br i1 %3, label %__internal_fmad.exit3, label %__internal_fmad.exit1

__internal_fmad.exit1:                            ; preds = %__nv_fabsf.exit
  %4 = fmul float %.01, 0x4007154760000000
  %5 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4) #6
  %6 = fadd float %5, 1.000000e+00
  %7 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6) #7, !srcloc !24
  %8 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not6 = icmp eq i32 %8, 0
  %9 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7, float -2.000000e+00, float 1.000000e+00) #6
  %10 = tail call float @llvm.nvvm.fma.rn.f(float %7, float -2.000000e+00, float 1.000000e+00) #6
  %.03 = select i1 %.not6, float %10, float %9
  %11 = fcmp oge float %.01, 0x4022059680000000
  %s.0 = select i1 %11, float 1.000000e+00, float %.03
  %12 = bitcast float %s.0 to i32
  %13 = bitcast float %a to i32
  %14 = and i32 %13, -2147483648
  %15 = or i32 %14, %12
  %16 = bitcast i32 %15 to float
  br label %33

__internal_fmad.exit3:                            ; preds = %__nv_fabsf.exit
  %17 = fmul float %a, %a
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not1 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #6
  %20 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #6
  %.06 = select i1 %.not1, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not2 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06, float %17, float 0x3FC10B2820000000) #6
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.06, float %17, float 0x3FC10B2820000000) #6
  %.05 = select i1 %.not2, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not3 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %17, float 0xBFD5553DA0000000) #6
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %17, float 0xBFD5553DA0000000) #6
  %.0 = select i1 %.not3, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not4 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0, float %17, float 0.000000e+00) #6
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.0, float %17, float 0.000000e+00) #6
  %.04 = select i1 %.not4, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not5 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04, float %a, float %a) #6
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.04, float %a, float %a) #6
  %.02 = select i1 %.not5, float %32, float %31
  br label %33

33:                                               ; preds = %__internal_fmad.exit3, %__internal_fmad.exit1
  %s.1 = phi float [ %16, %__internal_fmad.exit1 ], [ %.02, %__internal_fmad.exit3 ]
  ret float %s.1
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #6 = { nounwind }
attributes #7 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "cfp5bluoztcg3g7qq7o4jdshk37jk65lk7hlskidweaziy4fstwa.py", directory: "/tmp/torchinductor_zeus/fp")
!4 = !{ptr @triton__0d1d2d3d4de5de, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2d3d4de5de, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2d3d4de5de", linkageName: "triton__0d1d2d3d4de5de", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 33, scope: !7)
!11 = !DILocation(line: 21, column: 28, scope: !7)
!12 = !DILocation(line: 26, column: 18, scope: !7)
!13 = !DILocation(line: 32, column: 45, scope: !7)
!14 = !DILocation(line: 28, column: 36, scope: !7)
!15 = !DILocation(line: 41, column: 23, scope: !7)
!16 = !DILocation(line: 29, column: 27, scope: !7)
!17 = !DILocation(line: 32, column: 40, scope: !7)
!18 = !DILocation(line: 32, column: 34, scope: !7)
!19 = !DILocation(line: 32, column: 51, scope: !7)
!20 = !DILocation(line: 32, column: 102, scope: !7)
!21 = !DILocation(line: 34, column: 22, scope: !7)
!22 = !DILocation(line: 36, column: 22, scope: !7)
!23 = !DILocation(line: 37, column: 28, scope: !7)
!24 = !{i32 21046}
!25 = !DILocation(line: 38, column: 22, scope: !7)
!26 = !DILocation(line: 39, column: 21, scope: !7)
!27 = !DILocation(line: 47, column: 39, scope: !7)
!28 = !DILocation(line: 48, column: 23, scope: !7)
!29 = !DILocation(line: 36, column: 15, scope: !30, inlinedAt: !32)
!30 = distinct !DILexicalBlockFile(scope: !7, file: !31, discriminator: 0)
!31 = !DIFile(filename: "triton_helpers.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/torch/_inductor")
!32 = !DILocation(line: 51, column: 47, scope: !30)
!33 = !DILocation(line: 38, column: 21, scope: !30, inlinedAt: !32)
!34 = !DILocation(line: 38, column: 16, scope: !30, inlinedAt: !32)
!35 = !DILocation(line: 0, scope: !7)
!36 = !DILocation(line: 36, column: 15, scope: !37, inlinedAt: !38)
!37 = distinct !DILexicalBlockFile(scope: !30, file: !31, discriminator: 0)
!38 = !DILocation(line: 49, column: 29, scope: !37, inlinedAt: !39)
!39 = !DILocation(line: 53, column: 40, scope: !37)
!40 = !DILocation(line: 38, column: 16, scope: !37, inlinedAt: !38)
!41 = !DILocation(line: 39, column: 29, scope: !37, inlinedAt: !38)
!42 = !DILocation(line: 38, column: 21, scope: !37, inlinedAt: !38)
!43 = !DILocation(line: 49, column: 29, scope: !30, inlinedAt: !44)
!44 = !DILocation(line: 53, column: 40, scope: !30)
!45 = !DILocation(line: 55, column: 36, scope: !7)
!46 = !DILocation(line: 56, column: 27, scope: !7)
!47 = !DILocation(line: 59, column: 41, scope: !7)
!48 = !DILocation(line: 59, column: 35, scope: !7)
!49 = !DILocation(line: 59, column: 52, scope: !7)
!50 = !DILocation(line: 59, column: 103, scope: !7)
!51 = !DILocation(line: 61, column: 24, scope: !7)
!52 = !DILocation(line: 63, column: 24, scope: !7)
!53 = !DILocation(line: 64, column: 29, scope: !7)
!54 = !DILocation(line: 65, column: 24, scope: !7)
!55 = !DILocation(line: 66, column: 22, scope: !7)
!56 = !DILocation(line: 68, column: 25, scope: !7)
!57 = !DILocation(line: 74, column: 39, scope: !7)
!58 = !DILocation(line: 75, column: 24, scope: !7)
!59 = !DILocation(line: 77, column: 24, scope: !7)
!60 = !DILocation(line: 78, column: 23, scope: !7)
!61 = !DILocation(line: 81, column: 40, scope: !7)
!62 = !DILocation(line: 243, column: 36, scope: !63, inlinedAt: !65)
!63 = distinct !DILexicalBlockFile(scope: !7, file: !64, discriminator: 0)
!64 = !DIFile(filename: "standard.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/triton/language")
!65 = !DILocation(line: 82, column: 27, scope: !63)
!66 = !DILocation(line: 233, column: 15, scope: !67, inlinedAt: !68)
!67 = distinct !DILexicalBlockFile(scope: !63, file: !64, discriminator: 0)
!68 = !DILocation(line: 243, column: 36, scope: !67, inlinedAt: !69)
!69 = !DILocation(line: 82, column: 27, scope: !67)
!70 = !DILocation(line: 83, column: 36, scope: !7)
!71 = !DILocation(line: 84, column: 27, scope: !7)
!72 = !DILocation(line: 87, column: 41, scope: !7)
!73 = !DILocation(line: 87, column: 35, scope: !7)
!74 = !DILocation(line: 87, column: 52, scope: !7)
!75 = !DILocation(line: 87, column: 104, scope: !7)
!76 = !DILocation(line: 89, column: 24, scope: !7)
!77 = !DILocation(line: 91, column: 24, scope: !7)
!78 = !DILocation(line: 92, column: 29, scope: !7)
!79 = !DILocation(line: 93, column: 24, scope: !7)
!80 = !DILocation(line: 94, column: 22, scope: !7)
!81 = !DILocation(line: 96, column: 25, scope: !7)
!82 = !DILocation(line: 102, column: 39, scope: !7)
!83 = !DILocation(line: 103, column: 24, scope: !7)
!84 = !DILocation(line: 105, column: 24, scope: !7)
!85 = !DILocation(line: 106, column: 23, scope: !7)
!86 = !DILocation(line: 107, column: 24, scope: !7)
!87 = !DILocation(line: 109, column: 29, scope: !7)
!88 = !DILocation(line: 109, column: 53, scope: !7)
!89 = !DILocation(line: 110, column: 29, scope: !7)
!90 = !DILocation(line: 110, column: 53, scope: !7)
!91 = !DILocation(line: 111, column: 29, scope: !7)
!92 = !DILocation(line: 111, column: 53, scope: !7)
!93 = !DILocation(line: 83, column: 4, scope: !7)
