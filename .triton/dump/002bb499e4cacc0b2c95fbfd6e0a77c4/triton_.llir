; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2d3de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = shl i32 %5, 3, !dbg !10
  %7 = and i32 %6, 1016, !dbg !10
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !11
  %9 = shl i32 %8, 10, !dbg !12
  %10 = or i32 %9, %7, !dbg !13
  %11 = sext i32 %10 to i64, !dbg !14
  %12 = getelementptr i16, ptr addrspace(1) %0, i64 %11, !dbg !14
  %13 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %12, i1 true) #4, !dbg !15
  %14 = extractvalue { i32, i32, i32, i32 } %13, 0, !dbg !15
  %15 = extractvalue { i32, i32, i32, i32 } %13, 1, !dbg !15
  %16 = extractvalue { i32, i32, i32, i32 } %13, 2, !dbg !15
  %17 = extractvalue { i32, i32, i32, i32 } %13, 3, !dbg !15
  %18 = trunc i32 %14 to i16, !dbg !15
  %extelt.offset = lshr i32 %14, 16, !dbg !15
  %19 = trunc i32 %extelt.offset to i16, !dbg !15
  %20 = trunc i32 %15 to i16, !dbg !15
  %extelt.offset1 = lshr i32 %15, 16, !dbg !15
  %21 = trunc i32 %extelt.offset1 to i16, !dbg !15
  %22 = trunc i32 %16 to i16, !dbg !15
  %extelt.offset2 = lshr i32 %16, 16, !dbg !15
  %23 = trunc i32 %extelt.offset2 to i16, !dbg !15
  %24 = trunc i32 %17 to i16, !dbg !15
  %extelt.offset3 = lshr i32 %17, 16, !dbg !15
  %25 = trunc i32 %extelt.offset3 to i16, !dbg !15
  %26 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %18) #4, !dbg !16
  %27 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %19) #4, !dbg !16
  %28 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %20) #4, !dbg !16
  %29 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %21) #4, !dbg !16
  %30 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %22) #4, !dbg !16
  %31 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %23) #4, !dbg !16
  %32 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %24) #4, !dbg !16
  %33 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %25) #4, !dbg !16
  %34 = getelementptr i16, ptr addrspace(1) %1, i64 %11, !dbg !17
  %35 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %34, i1 true) #4, !dbg !18
  %36 = extractvalue { i32, i32, i32, i32 } %35, 0, !dbg !18
  %37 = extractvalue { i32, i32, i32, i32 } %35, 1, !dbg !18
  %38 = extractvalue { i32, i32, i32, i32 } %35, 2, !dbg !18
  %39 = extractvalue { i32, i32, i32, i32 } %35, 3, !dbg !18
  %40 = trunc i32 %36 to i16, !dbg !18
  %extelt.offset4 = lshr i32 %36, 16, !dbg !18
  %41 = trunc i32 %extelt.offset4 to i16, !dbg !18
  %42 = trunc i32 %37 to i16, !dbg !18
  %extelt.offset5 = lshr i32 %37, 16, !dbg !18
  %43 = trunc i32 %extelt.offset5 to i16, !dbg !18
  %44 = trunc i32 %38 to i16, !dbg !18
  %extelt.offset6 = lshr i32 %38, 16, !dbg !18
  %45 = trunc i32 %extelt.offset6 to i16, !dbg !18
  %46 = trunc i32 %39 to i16, !dbg !18
  %extelt.offset7 = lshr i32 %39, 16, !dbg !18
  %47 = trunc i32 %extelt.offset7 to i16, !dbg !18
  %48 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %40) #4, !dbg !19
  %49 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %41) #4, !dbg !19
  %50 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %42) #4, !dbg !19
  %51 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %43) #4, !dbg !19
  %52 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %44) #4, !dbg !19
  %53 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %45) #4, !dbg !19
  %54 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %46) #4, !dbg !19
  %55 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %47) #4, !dbg !19
  %56 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %48, float 3.000000e+01) #4, !dbg !20
  %57 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %49, float 3.000000e+01) #4, !dbg !20
  %58 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %50, float 3.000000e+01) #4, !dbg !20
  %59 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %51, float 3.000000e+01) #4, !dbg !20
  %60 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %52, float 3.000000e+01) #4, !dbg !20
  %61 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %53, float 3.000000e+01) #4, !dbg !20
  %62 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %54, float 3.000000e+01) #4, !dbg !20
  %63 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %55, float 3.000000e+01) #4, !dbg !20
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not.i = icmp eq i32 %64, 0, !dbg !21
  %65 = tail call float @llvm.nvvm.fabs.ftz.f(float %56) #4, !dbg !21
  %66 = tail call float @llvm.nvvm.fabs.f(float %56) #4, !dbg !21
  %.01.i = select i1 %.not.i, float %66, float %65, !dbg !21
  %67 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !21
  br i1 %67, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !21

__internal_fmad.exit1.i:                          ; preds = %4
  %68 = fmul float %.01.i, 0x4007154760000000, !dbg !21
  %69 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %68) #4, !dbg !21
  %70 = fadd float %69, 1.000000e+00, !dbg !21
  %71 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %70) #5, !dbg !21, !srcloc !22
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not6.i = icmp eq i32 %72, 0, !dbg !21
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %71, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %71, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %.03.i = select i1 %.not6.i, float %74, float %73, !dbg !21
  %75 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !21
  %s.0.i = select i1 %75, float 1.000000e+00, float %.03.i, !dbg !21
  %76 = bitcast float %s.0.i to i32, !dbg !21
  %77 = bitcast float %56 to i32, !dbg !21
  %78 = and i32 %77, -2147483648, !dbg !21
  %79 = or i32 %78, %76, !dbg !21
  %80 = bitcast i32 %79 to float, !dbg !21
  br label %__nv_tanhf.exit, !dbg !21

__internal_fmad.exit3.i:                          ; preds = %4
  %81 = fmul float %56, %56, !dbg !21
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not1.i = icmp eq i32 %82, 0, !dbg !21
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %81, float 0xBFAAC795C0000000) #4, !dbg !21
  %84 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %81, float 0xBFAAC795C0000000) #4, !dbg !21
  %.06.i = select i1 %.not1.i, float %84, float %83, !dbg !21
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not2.i = icmp eq i32 %85, 0, !dbg !21
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %81, float 0x3FC10B2820000000) #4, !dbg !21
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %81, float 0x3FC10B2820000000) #4, !dbg !21
  %.05.i = select i1 %.not2.i, float %87, float %86, !dbg !21
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not3.i = icmp eq i32 %88, 0, !dbg !21
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %81, float 0xBFD5553DA0000000) #4, !dbg !21
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %81, float 0xBFD5553DA0000000) #4, !dbg !21
  %.0.i = select i1 %.not3.i, float %90, float %89, !dbg !21
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not4.i = icmp eq i32 %91, 0, !dbg !21
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %81, float 0.000000e+00) #4, !dbg !21
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %81, float 0.000000e+00) #4, !dbg !21
  %.04.i = select i1 %.not4.i, float %93, float %92, !dbg !21
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not5.i = icmp eq i32 %94, 0, !dbg !21
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %56, float %56) #4, !dbg !21
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %56, float %56) #4, !dbg !21
  %.02.i = select i1 %.not5.i, float %96, float %95, !dbg !21
  br label %__nv_tanhf.exit, !dbg !21

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %80, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !21
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not.i8 = icmp eq i32 %97, 0, !dbg !21
  %98 = tail call float @llvm.nvvm.fabs.ftz.f(float %57) #4, !dbg !21
  %99 = tail call float @llvm.nvvm.fabs.f(float %57) #4, !dbg !21
  %.01.i9 = select i1 %.not.i8, float %99, float %98, !dbg !21
  %100 = fcmp ult float %.01.i9, 0x3FE3333340000000, !dbg !21
  br i1 %100, label %__internal_fmad.exit3.i15, label %__internal_fmad.exit1.i10, !dbg !21

__internal_fmad.exit1.i10:                        ; preds = %__nv_tanhf.exit
  %101 = fmul float %.01.i9, 0x4007154760000000, !dbg !21
  %102 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %101) #4, !dbg !21
  %103 = fadd float %102, 1.000000e+00, !dbg !21
  %104 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %103) #5, !dbg !21, !srcloc !22
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not6.i11 = icmp eq i32 %105, 0, !dbg !21
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %104, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %104, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %.03.i12 = select i1 %.not6.i11, float %107, float %106, !dbg !21
  %108 = fcmp oge float %.01.i9, 0x4022059680000000, !dbg !21
  %s.0.i13 = select i1 %108, float 1.000000e+00, float %.03.i12, !dbg !21
  %109 = bitcast float %s.0.i13 to i32, !dbg !21
  %110 = bitcast float %57 to i32, !dbg !21
  %111 = and i32 %110, -2147483648, !dbg !21
  %112 = or i32 %111, %109, !dbg !21
  %113 = bitcast i32 %112 to float, !dbg !21
  br label %__nv_tanhf.exit26, !dbg !21

__internal_fmad.exit3.i15:                        ; preds = %__nv_tanhf.exit
  %114 = fmul float %57, %57, !dbg !21
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not1.i16 = icmp eq i32 %115, 0, !dbg !21
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %114, float 0xBFAAC795C0000000) #4, !dbg !21
  %117 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %114, float 0xBFAAC795C0000000) #4, !dbg !21
  %.06.i17 = select i1 %.not1.i16, float %117, float %116, !dbg !21
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not2.i18 = icmp eq i32 %118, 0, !dbg !21
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i17, float %114, float 0x3FC10B2820000000) #4, !dbg !21
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i17, float %114, float 0x3FC10B2820000000) #4, !dbg !21
  %.05.i19 = select i1 %.not2.i18, float %120, float %119, !dbg !21
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not3.i20 = icmp eq i32 %121, 0, !dbg !21
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i19, float %114, float 0xBFD5553DA0000000) #4, !dbg !21
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i19, float %114, float 0xBFD5553DA0000000) #4, !dbg !21
  %.0.i21 = select i1 %.not3.i20, float %123, float %122, !dbg !21
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not4.i22 = icmp eq i32 %124, 0, !dbg !21
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i21, float %114, float 0.000000e+00) #4, !dbg !21
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i21, float %114, float 0.000000e+00) #4, !dbg !21
  %.04.i23 = select i1 %.not4.i22, float %126, float %125, !dbg !21
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not5.i24 = icmp eq i32 %127, 0, !dbg !21
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i23, float %57, float %57) #4, !dbg !21
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i23, float %57, float %57) #4, !dbg !21
  %.02.i25 = select i1 %.not5.i24, float %129, float %128, !dbg !21
  br label %__nv_tanhf.exit26, !dbg !21

__nv_tanhf.exit26:                                ; preds = %__internal_fmad.exit1.i10, %__internal_fmad.exit3.i15
  %s.1.i14 = phi float [ %113, %__internal_fmad.exit1.i10 ], [ %.02.i25, %__internal_fmad.exit3.i15 ], !dbg !21
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not.i27 = icmp eq i32 %130, 0, !dbg !21
  %131 = tail call float @llvm.nvvm.fabs.ftz.f(float %58) #4, !dbg !21
  %132 = tail call float @llvm.nvvm.fabs.f(float %58) #4, !dbg !21
  %.01.i28 = select i1 %.not.i27, float %132, float %131, !dbg !21
  %133 = fcmp ult float %.01.i28, 0x3FE3333340000000, !dbg !21
  br i1 %133, label %__internal_fmad.exit3.i34, label %__internal_fmad.exit1.i29, !dbg !21

__internal_fmad.exit1.i29:                        ; preds = %__nv_tanhf.exit26
  %134 = fmul float %.01.i28, 0x4007154760000000, !dbg !21
  %135 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %134) #4, !dbg !21
  %136 = fadd float %135, 1.000000e+00, !dbg !21
  %137 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %136) #5, !dbg !21, !srcloc !22
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not6.i30 = icmp eq i32 %138, 0, !dbg !21
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %137, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %137, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %.03.i31 = select i1 %.not6.i30, float %140, float %139, !dbg !21
  %141 = fcmp oge float %.01.i28, 0x4022059680000000, !dbg !21
  %s.0.i32 = select i1 %141, float 1.000000e+00, float %.03.i31, !dbg !21
  %142 = bitcast float %s.0.i32 to i32, !dbg !21
  %143 = bitcast float %58 to i32, !dbg !21
  %144 = and i32 %143, -2147483648, !dbg !21
  %145 = or i32 %144, %142, !dbg !21
  %146 = bitcast i32 %145 to float, !dbg !21
  br label %__nv_tanhf.exit45, !dbg !21

__internal_fmad.exit3.i34:                        ; preds = %__nv_tanhf.exit26
  %147 = fmul float %58, %58, !dbg !21
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not1.i35 = icmp eq i32 %148, 0, !dbg !21
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %147, float 0xBFAAC795C0000000) #4, !dbg !21
  %150 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %147, float 0xBFAAC795C0000000) #4, !dbg !21
  %.06.i36 = select i1 %.not1.i35, float %150, float %149, !dbg !21
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not2.i37 = icmp eq i32 %151, 0, !dbg !21
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i36, float %147, float 0x3FC10B2820000000) #4, !dbg !21
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i36, float %147, float 0x3FC10B2820000000) #4, !dbg !21
  %.05.i38 = select i1 %.not2.i37, float %153, float %152, !dbg !21
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not3.i39 = icmp eq i32 %154, 0, !dbg !21
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i38, float %147, float 0xBFD5553DA0000000) #4, !dbg !21
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i38, float %147, float 0xBFD5553DA0000000) #4, !dbg !21
  %.0.i40 = select i1 %.not3.i39, float %156, float %155, !dbg !21
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not4.i41 = icmp eq i32 %157, 0, !dbg !21
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i40, float %147, float 0.000000e+00) #4, !dbg !21
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i40, float %147, float 0.000000e+00) #4, !dbg !21
  %.04.i42 = select i1 %.not4.i41, float %159, float %158, !dbg !21
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not5.i43 = icmp eq i32 %160, 0, !dbg !21
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i42, float %58, float %58) #4, !dbg !21
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i42, float %58, float %58) #4, !dbg !21
  %.02.i44 = select i1 %.not5.i43, float %162, float %161, !dbg !21
  br label %__nv_tanhf.exit45, !dbg !21

__nv_tanhf.exit45:                                ; preds = %__internal_fmad.exit1.i29, %__internal_fmad.exit3.i34
  %s.1.i33 = phi float [ %146, %__internal_fmad.exit1.i29 ], [ %.02.i44, %__internal_fmad.exit3.i34 ], !dbg !21
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not.i46 = icmp eq i32 %163, 0, !dbg !21
  %164 = tail call float @llvm.nvvm.fabs.ftz.f(float %59) #4, !dbg !21
  %165 = tail call float @llvm.nvvm.fabs.f(float %59) #4, !dbg !21
  %.01.i47 = select i1 %.not.i46, float %165, float %164, !dbg !21
  %166 = fcmp ult float %.01.i47, 0x3FE3333340000000, !dbg !21
  br i1 %166, label %__internal_fmad.exit3.i53, label %__internal_fmad.exit1.i48, !dbg !21

__internal_fmad.exit1.i48:                        ; preds = %__nv_tanhf.exit45
  %167 = fmul float %.01.i47, 0x4007154760000000, !dbg !21
  %168 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %167) #4, !dbg !21
  %169 = fadd float %168, 1.000000e+00, !dbg !21
  %170 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %169) #5, !dbg !21, !srcloc !22
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not6.i49 = icmp eq i32 %171, 0, !dbg !21
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %170, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %170, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %.03.i50 = select i1 %.not6.i49, float %173, float %172, !dbg !21
  %174 = fcmp oge float %.01.i47, 0x4022059680000000, !dbg !21
  %s.0.i51 = select i1 %174, float 1.000000e+00, float %.03.i50, !dbg !21
  %175 = bitcast float %s.0.i51 to i32, !dbg !21
  %176 = bitcast float %59 to i32, !dbg !21
  %177 = and i32 %176, -2147483648, !dbg !21
  %178 = or i32 %177, %175, !dbg !21
  %179 = bitcast i32 %178 to float, !dbg !21
  br label %__nv_tanhf.exit64, !dbg !21

__internal_fmad.exit3.i53:                        ; preds = %__nv_tanhf.exit45
  %180 = fmul float %59, %59, !dbg !21
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not1.i54 = icmp eq i32 %181, 0, !dbg !21
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %180, float 0xBFAAC795C0000000) #4, !dbg !21
  %183 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %180, float 0xBFAAC795C0000000) #4, !dbg !21
  %.06.i55 = select i1 %.not1.i54, float %183, float %182, !dbg !21
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not2.i56 = icmp eq i32 %184, 0, !dbg !21
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i55, float %180, float 0x3FC10B2820000000) #4, !dbg !21
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i55, float %180, float 0x3FC10B2820000000) #4, !dbg !21
  %.05.i57 = select i1 %.not2.i56, float %186, float %185, !dbg !21
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not3.i58 = icmp eq i32 %187, 0, !dbg !21
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i57, float %180, float 0xBFD5553DA0000000) #4, !dbg !21
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i57, float %180, float 0xBFD5553DA0000000) #4, !dbg !21
  %.0.i59 = select i1 %.not3.i58, float %189, float %188, !dbg !21
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not4.i60 = icmp eq i32 %190, 0, !dbg !21
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i59, float %180, float 0.000000e+00) #4, !dbg !21
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i59, float %180, float 0.000000e+00) #4, !dbg !21
  %.04.i61 = select i1 %.not4.i60, float %192, float %191, !dbg !21
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not5.i62 = icmp eq i32 %193, 0, !dbg !21
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i61, float %59, float %59) #4, !dbg !21
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i61, float %59, float %59) #4, !dbg !21
  %.02.i63 = select i1 %.not5.i62, float %195, float %194, !dbg !21
  br label %__nv_tanhf.exit64, !dbg !21

__nv_tanhf.exit64:                                ; preds = %__internal_fmad.exit1.i48, %__internal_fmad.exit3.i53
  %s.1.i52 = phi float [ %179, %__internal_fmad.exit1.i48 ], [ %.02.i63, %__internal_fmad.exit3.i53 ], !dbg !21
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not.i65 = icmp eq i32 %196, 0, !dbg !21
  %197 = tail call float @llvm.nvvm.fabs.ftz.f(float %60) #4, !dbg !21
  %198 = tail call float @llvm.nvvm.fabs.f(float %60) #4, !dbg !21
  %.01.i66 = select i1 %.not.i65, float %198, float %197, !dbg !21
  %199 = fcmp ult float %.01.i66, 0x3FE3333340000000, !dbg !21
  br i1 %199, label %__internal_fmad.exit3.i72, label %__internal_fmad.exit1.i67, !dbg !21

__internal_fmad.exit1.i67:                        ; preds = %__nv_tanhf.exit64
  %200 = fmul float %.01.i66, 0x4007154760000000, !dbg !21
  %201 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %200) #4, !dbg !21
  %202 = fadd float %201, 1.000000e+00, !dbg !21
  %203 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %202) #5, !dbg !21, !srcloc !22
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not6.i68 = icmp eq i32 %204, 0, !dbg !21
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %203, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %203, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %.03.i69 = select i1 %.not6.i68, float %206, float %205, !dbg !21
  %207 = fcmp oge float %.01.i66, 0x4022059680000000, !dbg !21
  %s.0.i70 = select i1 %207, float 1.000000e+00, float %.03.i69, !dbg !21
  %208 = bitcast float %s.0.i70 to i32, !dbg !21
  %209 = bitcast float %60 to i32, !dbg !21
  %210 = and i32 %209, -2147483648, !dbg !21
  %211 = or i32 %210, %208, !dbg !21
  %212 = bitcast i32 %211 to float, !dbg !21
  br label %__nv_tanhf.exit83, !dbg !21

__internal_fmad.exit3.i72:                        ; preds = %__nv_tanhf.exit64
  %213 = fmul float %60, %60, !dbg !21
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not1.i73 = icmp eq i32 %214, 0, !dbg !21
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %213, float 0xBFAAC795C0000000) #4, !dbg !21
  %216 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %213, float 0xBFAAC795C0000000) #4, !dbg !21
  %.06.i74 = select i1 %.not1.i73, float %216, float %215, !dbg !21
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not2.i75 = icmp eq i32 %217, 0, !dbg !21
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i74, float %213, float 0x3FC10B2820000000) #4, !dbg !21
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i74, float %213, float 0x3FC10B2820000000) #4, !dbg !21
  %.05.i76 = select i1 %.not2.i75, float %219, float %218, !dbg !21
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not3.i77 = icmp eq i32 %220, 0, !dbg !21
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i76, float %213, float 0xBFD5553DA0000000) #4, !dbg !21
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i76, float %213, float 0xBFD5553DA0000000) #4, !dbg !21
  %.0.i78 = select i1 %.not3.i77, float %222, float %221, !dbg !21
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not4.i79 = icmp eq i32 %223, 0, !dbg !21
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %213, float 0.000000e+00) #4, !dbg !21
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %213, float 0.000000e+00) #4, !dbg !21
  %.04.i80 = select i1 %.not4.i79, float %225, float %224, !dbg !21
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not5.i81 = icmp eq i32 %226, 0, !dbg !21
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i80, float %60, float %60) #4, !dbg !21
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i80, float %60, float %60) #4, !dbg !21
  %.02.i82 = select i1 %.not5.i81, float %228, float %227, !dbg !21
  br label %__nv_tanhf.exit83, !dbg !21

__nv_tanhf.exit83:                                ; preds = %__internal_fmad.exit1.i67, %__internal_fmad.exit3.i72
  %s.1.i71 = phi float [ %212, %__internal_fmad.exit1.i67 ], [ %.02.i82, %__internal_fmad.exit3.i72 ], !dbg !21
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not.i84 = icmp eq i32 %229, 0, !dbg !21
  %230 = tail call float @llvm.nvvm.fabs.ftz.f(float %61) #4, !dbg !21
  %231 = tail call float @llvm.nvvm.fabs.f(float %61) #4, !dbg !21
  %.01.i85 = select i1 %.not.i84, float %231, float %230, !dbg !21
  %232 = fcmp ult float %.01.i85, 0x3FE3333340000000, !dbg !21
  br i1 %232, label %__internal_fmad.exit3.i91, label %__internal_fmad.exit1.i86, !dbg !21

__internal_fmad.exit1.i86:                        ; preds = %__nv_tanhf.exit83
  %233 = fmul float %.01.i85, 0x4007154760000000, !dbg !21
  %234 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %233) #4, !dbg !21
  %235 = fadd float %234, 1.000000e+00, !dbg !21
  %236 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %235) #5, !dbg !21, !srcloc !22
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not6.i87 = icmp eq i32 %237, 0, !dbg !21
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %236, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %236, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %.03.i88 = select i1 %.not6.i87, float %239, float %238, !dbg !21
  %240 = fcmp oge float %.01.i85, 0x4022059680000000, !dbg !21
  %s.0.i89 = select i1 %240, float 1.000000e+00, float %.03.i88, !dbg !21
  %241 = bitcast float %s.0.i89 to i32, !dbg !21
  %242 = bitcast float %61 to i32, !dbg !21
  %243 = and i32 %242, -2147483648, !dbg !21
  %244 = or i32 %243, %241, !dbg !21
  %245 = bitcast i32 %244 to float, !dbg !21
  br label %__nv_tanhf.exit102, !dbg !21

__internal_fmad.exit3.i91:                        ; preds = %__nv_tanhf.exit83
  %246 = fmul float %61, %61, !dbg !21
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not1.i92 = icmp eq i32 %247, 0, !dbg !21
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %246, float 0xBFAAC795C0000000) #4, !dbg !21
  %249 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %246, float 0xBFAAC795C0000000) #4, !dbg !21
  %.06.i93 = select i1 %.not1.i92, float %249, float %248, !dbg !21
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not2.i94 = icmp eq i32 %250, 0, !dbg !21
  %251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i93, float %246, float 0x3FC10B2820000000) #4, !dbg !21
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i93, float %246, float 0x3FC10B2820000000) #4, !dbg !21
  %.05.i95 = select i1 %.not2.i94, float %252, float %251, !dbg !21
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not3.i96 = icmp eq i32 %253, 0, !dbg !21
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i95, float %246, float 0xBFD5553DA0000000) #4, !dbg !21
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i95, float %246, float 0xBFD5553DA0000000) #4, !dbg !21
  %.0.i97 = select i1 %.not3.i96, float %255, float %254, !dbg !21
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not4.i98 = icmp eq i32 %256, 0, !dbg !21
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i97, float %246, float 0.000000e+00) #4, !dbg !21
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i97, float %246, float 0.000000e+00) #4, !dbg !21
  %.04.i99 = select i1 %.not4.i98, float %258, float %257, !dbg !21
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not5.i100 = icmp eq i32 %259, 0, !dbg !21
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i99, float %61, float %61) #4, !dbg !21
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i99, float %61, float %61) #4, !dbg !21
  %.02.i101 = select i1 %.not5.i100, float %261, float %260, !dbg !21
  br label %__nv_tanhf.exit102, !dbg !21

__nv_tanhf.exit102:                               ; preds = %__internal_fmad.exit1.i86, %__internal_fmad.exit3.i91
  %s.1.i90 = phi float [ %245, %__internal_fmad.exit1.i86 ], [ %.02.i101, %__internal_fmad.exit3.i91 ], !dbg !21
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not.i103 = icmp eq i32 %262, 0, !dbg !21
  %263 = tail call float @llvm.nvvm.fabs.ftz.f(float %62) #4, !dbg !21
  %264 = tail call float @llvm.nvvm.fabs.f(float %62) #4, !dbg !21
  %.01.i104 = select i1 %.not.i103, float %264, float %263, !dbg !21
  %265 = fcmp ult float %.01.i104, 0x3FE3333340000000, !dbg !21
  br i1 %265, label %__internal_fmad.exit3.i110, label %__internal_fmad.exit1.i105, !dbg !21

__internal_fmad.exit1.i105:                       ; preds = %__nv_tanhf.exit102
  %266 = fmul float %.01.i104, 0x4007154760000000, !dbg !21
  %267 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %266) #4, !dbg !21
  %268 = fadd float %267, 1.000000e+00, !dbg !21
  %269 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %268) #5, !dbg !21, !srcloc !22
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not6.i106 = icmp eq i32 %270, 0, !dbg !21
  %271 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %269, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %272 = tail call float @llvm.nvvm.fma.rn.f(float %269, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %.03.i107 = select i1 %.not6.i106, float %272, float %271, !dbg !21
  %273 = fcmp oge float %.01.i104, 0x4022059680000000, !dbg !21
  %s.0.i108 = select i1 %273, float 1.000000e+00, float %.03.i107, !dbg !21
  %274 = bitcast float %s.0.i108 to i32, !dbg !21
  %275 = bitcast float %62 to i32, !dbg !21
  %276 = and i32 %275, -2147483648, !dbg !21
  %277 = or i32 %276, %274, !dbg !21
  %278 = bitcast i32 %277 to float, !dbg !21
  br label %__nv_tanhf.exit121, !dbg !21

__internal_fmad.exit3.i110:                       ; preds = %__nv_tanhf.exit102
  %279 = fmul float %62, %62, !dbg !21
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not1.i111 = icmp eq i32 %280, 0, !dbg !21
  %281 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %279, float 0xBFAAC795C0000000) #4, !dbg !21
  %282 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %279, float 0xBFAAC795C0000000) #4, !dbg !21
  %.06.i112 = select i1 %.not1.i111, float %282, float %281, !dbg !21
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not2.i113 = icmp eq i32 %283, 0, !dbg !21
  %284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i112, float %279, float 0x3FC10B2820000000) #4, !dbg !21
  %285 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i112, float %279, float 0x3FC10B2820000000) #4, !dbg !21
  %.05.i114 = select i1 %.not2.i113, float %285, float %284, !dbg !21
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not3.i115 = icmp eq i32 %286, 0, !dbg !21
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i114, float %279, float 0xBFD5553DA0000000) #4, !dbg !21
  %288 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i114, float %279, float 0xBFD5553DA0000000) #4, !dbg !21
  %.0.i116 = select i1 %.not3.i115, float %288, float %287, !dbg !21
  %289 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not4.i117 = icmp eq i32 %289, 0, !dbg !21
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i116, float %279, float 0.000000e+00) #4, !dbg !21
  %291 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i116, float %279, float 0.000000e+00) #4, !dbg !21
  %.04.i118 = select i1 %.not4.i117, float %291, float %290, !dbg !21
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not5.i119 = icmp eq i32 %292, 0, !dbg !21
  %293 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i118, float %62, float %62) #4, !dbg !21
  %294 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i118, float %62, float %62) #4, !dbg !21
  %.02.i120 = select i1 %.not5.i119, float %294, float %293, !dbg !21
  br label %__nv_tanhf.exit121, !dbg !21

__nv_tanhf.exit121:                               ; preds = %__internal_fmad.exit1.i105, %__internal_fmad.exit3.i110
  %s.1.i109 = phi float [ %278, %__internal_fmad.exit1.i105 ], [ %.02.i120, %__internal_fmad.exit3.i110 ], !dbg !21
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not.i122 = icmp eq i32 %295, 0, !dbg !21
  %296 = tail call float @llvm.nvvm.fabs.ftz.f(float %63) #4, !dbg !21
  %297 = tail call float @llvm.nvvm.fabs.f(float %63) #4, !dbg !21
  %.01.i123 = select i1 %.not.i122, float %297, float %296, !dbg !21
  %298 = fcmp ult float %.01.i123, 0x3FE3333340000000, !dbg !21
  br i1 %298, label %__internal_fmad.exit3.i129, label %__internal_fmad.exit1.i124, !dbg !21

__internal_fmad.exit1.i124:                       ; preds = %__nv_tanhf.exit121
  %299 = fmul float %.01.i123, 0x4007154760000000, !dbg !21
  %300 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %299) #4, !dbg !21
  %301 = fadd float %300, 1.000000e+00, !dbg !21
  %302 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %301) #5, !dbg !21, !srcloc !22
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not6.i125 = icmp eq i32 %303, 0, !dbg !21
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %302, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %302, float -2.000000e+00, float 1.000000e+00) #4, !dbg !21
  %.03.i126 = select i1 %.not6.i125, float %305, float %304, !dbg !21
  %306 = fcmp oge float %.01.i123, 0x4022059680000000, !dbg !21
  %s.0.i127 = select i1 %306, float 1.000000e+00, float %.03.i126, !dbg !21
  %307 = bitcast float %s.0.i127 to i32, !dbg !21
  %308 = bitcast float %63 to i32, !dbg !21
  %309 = and i32 %308, -2147483648, !dbg !21
  %310 = or i32 %309, %307, !dbg !21
  %311 = bitcast i32 %310 to float, !dbg !21
  br label %__nv_tanhf.exit140, !dbg !21

__internal_fmad.exit3.i129:                       ; preds = %__nv_tanhf.exit121
  %312 = fmul float %63, %63, !dbg !21
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not1.i130 = icmp eq i32 %313, 0, !dbg !21
  %314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %312, float 0xBFAAC795C0000000) #4, !dbg !21
  %315 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %312, float 0xBFAAC795C0000000) #4, !dbg !21
  %.06.i131 = select i1 %.not1.i130, float %315, float %314, !dbg !21
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not2.i132 = icmp eq i32 %316, 0, !dbg !21
  %317 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i131, float %312, float 0x3FC10B2820000000) #4, !dbg !21
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i131, float %312, float 0x3FC10B2820000000) #4, !dbg !21
  %.05.i133 = select i1 %.not2.i132, float %318, float %317, !dbg !21
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not3.i134 = icmp eq i32 %319, 0, !dbg !21
  %320 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i133, float %312, float 0xBFD5553DA0000000) #4, !dbg !21
  %321 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i133, float %312, float 0xBFD5553DA0000000) #4, !dbg !21
  %.0.i135 = select i1 %.not3.i134, float %321, float %320, !dbg !21
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not4.i136 = icmp eq i32 %322, 0, !dbg !21
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i135, float %312, float 0.000000e+00) #4, !dbg !21
  %324 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i135, float %312, float 0.000000e+00) #4, !dbg !21
  %.04.i137 = select i1 %.not4.i136, float %324, float %323, !dbg !21
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !21
  %.not5.i138 = icmp eq i32 %325, 0, !dbg !21
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i137, float %63, float %63) #4, !dbg !21
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i137, float %63, float %63) #4, !dbg !21
  %.02.i139 = select i1 %.not5.i138, float %327, float %326, !dbg !21
  br label %__nv_tanhf.exit140, !dbg !21

__nv_tanhf.exit140:                               ; preds = %__internal_fmad.exit1.i124, %__internal_fmad.exit3.i129
  %s.1.i128 = phi float [ %311, %__internal_fmad.exit1.i124 ], [ %.02.i139, %__internal_fmad.exit3.i129 ], !dbg !21
  %328 = fmul float %33, 3.000000e+01, !dbg !23
  %329 = fmul float %32, 3.000000e+01, !dbg !23
  %330 = fmul float %31, 3.000000e+01, !dbg !23
  %331 = fmul float %30, 3.000000e+01, !dbg !23
  %332 = fmul float %29, 3.000000e+01, !dbg !23
  %333 = fmul float %28, 3.000000e+01, !dbg !23
  %334 = fmul float %27, 3.000000e+01, !dbg !23
  %335 = fmul float %26, 3.000000e+01, !dbg !23
  %336 = fmul float %s.1.i, %s.1.i, !dbg !24
  %337 = fmul float %s.1.i14, %s.1.i14, !dbg !24
  %338 = fmul float %s.1.i33, %s.1.i33, !dbg !24
  %339 = fmul float %s.1.i52, %s.1.i52, !dbg !24
  %340 = fmul float %s.1.i71, %s.1.i71, !dbg !24
  %341 = fmul float %s.1.i90, %s.1.i90, !dbg !24
  %342 = fmul float %s.1.i109, %s.1.i109, !dbg !24
  %343 = fmul float %s.1.i128, %s.1.i128, !dbg !24
  %344 = fsub float 1.000000e+00, %336, !dbg !25
  %345 = fsub float 1.000000e+00, %337, !dbg !25
  %346 = fsub float 1.000000e+00, %338, !dbg !25
  %347 = fsub float 1.000000e+00, %339, !dbg !25
  %348 = fsub float 1.000000e+00, %340, !dbg !25
  %349 = fsub float 1.000000e+00, %341, !dbg !25
  %350 = fsub float 1.000000e+00, %342, !dbg !25
  %351 = fsub float 1.000000e+00, %343, !dbg !25
  %352 = fmul float %335, %344, !dbg !26
  %353 = fmul float %334, %345, !dbg !26
  %354 = fmul float %333, %346, !dbg !26
  %355 = fmul float %332, %347, !dbg !26
  %356 = fmul float %331, %348, !dbg !26
  %357 = fmul float %330, %349, !dbg !26
  %358 = fmul float %329, %350, !dbg !26
  %359 = fmul float %328, %351, !dbg !26
  %360 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %352, float 3.000000e+01) #4, !dbg !27
  %361 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %353, float 3.000000e+01) #4, !dbg !27
  %362 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %354, float 3.000000e+01) #4, !dbg !27
  %363 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %355, float 3.000000e+01) #4, !dbg !27
  %364 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %356, float 3.000000e+01) #4, !dbg !27
  %365 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %357, float 3.000000e+01) #4, !dbg !27
  %366 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %358, float 3.000000e+01) #4, !dbg !27
  %367 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %359, float 3.000000e+01) #4, !dbg !27
  %368 = getelementptr i16, ptr addrspace(1) %2, i64 %11, !dbg !28
  %369 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %360) #4, !dbg !29
  %370 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %361) #4, !dbg !29
  %371 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %362) #4, !dbg !29
  %372 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %363) #4, !dbg !29
  %373 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %364) #4, !dbg !29
  %374 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %365) #4, !dbg !29
  %375 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %366) #4, !dbg !29
  %376 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %367) #4, !dbg !29
  %377 = insertelement <2 x i16> undef, i16 %369, i64 0, !dbg !29
  %378 = insertelement <2 x i16> %377, i16 %370, i64 1, !dbg !29
  %379 = bitcast <2 x i16> %378 to i32, !dbg !29
  %380 = insertelement <2 x i16> undef, i16 %371, i64 0, !dbg !29
  %381 = insertelement <2 x i16> %380, i16 %372, i64 1, !dbg !29
  %382 = bitcast <2 x i16> %381 to i32, !dbg !29
  %383 = insertelement <2 x i16> undef, i16 %373, i64 0, !dbg !29
  %384 = insertelement <2 x i16> %383, i16 %374, i64 1, !dbg !29
  %385 = bitcast <2 x i16> %384 to i32, !dbg !29
  %386 = insertelement <2 x i16> undef, i16 %375, i64 0, !dbg !29
  %387 = insertelement <2 x i16> %386, i16 %376, i64 1, !dbg !29
  %388 = bitcast <2 x i16> %387 to i32, !dbg !29
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %379, i32 %382, i32 %385, i32 %388, ptr addrspace(1) %368, i1 true) #4, !dbg !29
  ret void, !dbg !30
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: alwaysinline nounwind
define float @__nv_tanhf(float %a) local_unnamed_addr #1 {
__nv_fabsf.exit:
  %0 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not = icmp eq i32 %0, 0
  %1 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #4
  %2 = tail call float @llvm.nvvm.fabs.f(float %a) #4
  %.01 = select i1 %.not, float %2, float %1
  %3 = fcmp ult float %.01, 0x3FE3333340000000
  br i1 %3, label %__internal_fmad.exit3, label %__internal_fmad.exit1

__internal_fmad.exit1:                            ; preds = %__nv_fabsf.exit
  %4 = fmul float %.01, 0x4007154760000000
  %5 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4) #4
  %6 = fadd float %5, 1.000000e+00
  %7 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6) #5, !srcloc !22
  %8 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not6 = icmp eq i32 %8, 0
  %9 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7, float -2.000000e+00, float 1.000000e+00) #4
  %10 = tail call float @llvm.nvvm.fma.rn.f(float %7, float -2.000000e+00, float 1.000000e+00) #4
  %.03 = select i1 %.not6, float %10, float %9
  %11 = fcmp oge float %.01, 0x4022059680000000
  %s.0 = select i1 %11, float 1.000000e+00, float %.03
  %12 = bitcast float %s.0 to i32
  %13 = bitcast float %a to i32
  %14 = and i32 %13, -2147483648
  %15 = or i32 %14, %12
  %16 = bitcast i32 %15 to float
  br label %33

__internal_fmad.exit3:                            ; preds = %__nv_fabsf.exit
  %17 = fmul float %a, %a
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not1 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #4
  %20 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #4
  %.06 = select i1 %.not1, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not2 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06, float %17, float 0x3FC10B2820000000) #4
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.06, float %17, float 0x3FC10B2820000000) #4
  %.05 = select i1 %.not2, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not3 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %17, float 0xBFD5553DA0000000) #4
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %17, float 0xBFD5553DA0000000) #4
  %.0 = select i1 %.not3, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not4 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0, float %17, float 0.000000e+00) #4
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.0, float %17, float 0.000000e+00) #4
  %.04 = select i1 %.not4, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not5 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04, float %a, float %a) #4
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.04, float %a, float %a) #4
  %.02 = select i1 %.not5, float %32, float %31
  br label %33

33:                                               ; preds = %__internal_fmad.exit3, %__internal_fmad.exit1
  %s.1 = phi float [ %16, %__internal_fmad.exit1 ], [ %.02, %__internal_fmad.exit3 ]
  ret float %s.1
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "clkqgxbtnt2xkcrzfwx66q447q6mntmvbb4wr5wbf2hniis7spxd.py", directory: "/tmp/torchinductor_zeus/lk")
!4 = !{ptr @triton__0d1d2d3de, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2d3de, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2d3de", linkageName: "triton__0d1d2d3de", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 36, scope: !7)
!11 = !DILocation(line: 20, column: 28, scope: !7)
!12 = !DILocation(line: 20, column: 33, scope: !7)
!13 = !DILocation(line: 21, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 30, scope: !7)
!15 = !DILocation(line: 24, column: 35, scope: !7)
!16 = !DILocation(line: 24, column: 44, scope: !7)
!17 = !DILocation(line: 25, column: 30, scope: !7)
!18 = !DILocation(line: 25, column: 35, scope: !7)
!19 = !DILocation(line: 25, column: 44, scope: !7)
!20 = !DILocation(line: 29, column: 18, scope: !7)
!21 = !DILocation(line: 30, column: 24, scope: !7)
!22 = !{i32 21046}
!23 = !DILocation(line: 27, column: 18, scope: !7)
!24 = !DILocation(line: 32, column: 18, scope: !7)
!25 = !DILocation(line: 34, column: 19, scope: !7)
!26 = !DILocation(line: 35, column: 19, scope: !7)
!27 = !DILocation(line: 37, column: 20, scope: !7)
!28 = !DILocation(line: 38, column: 25, scope: !7)
!29 = !DILocation(line: 38, column: 37, scope: !7)
!30 = !DILocation(line: 38, column: 4, scope: !7)
