; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton__0d1d2de(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !5 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %5 = shl i32 %4, 1, !dbg !8
  %6 = and i32 %5, 510, !dbg !8
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !9
  %8 = shl i32 %7, 9, !dbg !10
  %9 = or i32 %8, %6, !dbg !11
  %10 = srem i32 %9, 256, !dbg !12
  %11 = sdiv i32 %9, 16777216, !dbg !13
  %12 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !14
  %13 = shufflevector <2 x i32> %12, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !14
  %14 = sdiv <2 x i32> %13, <i32 2048, i32 256>, !dbg !14
  %15 = srem <2 x i32> %14, <i32 8192, i32 8>, !dbg !15
  %16 = shl nsw <2 x i32> %15, <i32 8, i32 21>, !dbg !16
  %17 = shl nsw i32 %11, 24, !dbg !17
  %18 = add i32 %17, %10, !dbg !18
  %19 = extractelement <2 x i32> %16, i64 0, !dbg !19
  %20 = add i32 %18, %19, !dbg !19
  %21 = extractelement <2 x i32> %16, i64 1, !dbg !20
  %22 = add i32 %20, %21, !dbg !20
  %23 = sext i32 %22 to i64, !dbg !21
  %24 = getelementptr i16, ptr addrspace(1) %0, i64 %23, !dbg !21
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #1, !dbg !22
  %26 = trunc i32 %25 to i16, !dbg !22
  %extelt.offset = lshr i32 %25, 16, !dbg !22
  %27 = trunc i32 %extelt.offset to i16, !dbg !22
  %28 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %26) #1, !dbg !23
  %29 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %27) #1, !dbg !23
  %30 = sext i32 %9 to i64, !dbg !24
  %31 = getelementptr i16, ptr addrspace(1) %1, i64 %30, !dbg !24
  %32 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %28) #1, !dbg !25
  %33 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %29) #1, !dbg !25
  %34 = insertelement <2 x i16> undef, i16 %32, i64 0, !dbg !25
  %35 = insertelement <2 x i16> %34, i16 %33, i64 1, !dbg !25
  %36 = bitcast <2 x i16> %35 to i32, !dbg !25
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %36, ptr addrspace(1) %31, i1 true) #1, !dbg !25
  ret void, !dbg !26
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "codz7s26t7ht6gdl676lacykncdvvf66qqk7uvjloohp4xjtr7ch.py", directory: "/tmp/torchinductor_zeus/od")
!3 = !{ptr @triton__0d1d2de, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d2de, !"maxntidx", i32 256}
!5 = distinct !DISubprogram(name: "triton__0d1d2de", linkageName: "triton__0d1d2de", scope: !2, file: !2, line: 18, type: !6, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 21, column: 36, scope: !5)
!9 = !DILocation(line: 20, column: 28, scope: !5)
!10 = !DILocation(line: 20, column: 33, scope: !5)
!11 = !DILocation(line: 21, column: 23, scope: !5)
!12 = !DILocation(line: 23, column: 18, scope: !5)
!13 = !DILocation(line: 26, column: 20, scope: !5)
!14 = !DILocation(line: 25, column: 20, scope: !5)
!15 = !DILocation(line: 25, column: 28, scope: !5)
!16 = !DILocation(line: 28, column: 40, scope: !5)
!17 = !DILocation(line: 28, column: 71, scope: !5)
!18 = !DILocation(line: 28, column: 36, scope: !5)
!19 = !DILocation(line: 28, column: 47, scope: !5)
!20 = !DILocation(line: 28, column: 62, scope: !5)
!21 = !DILocation(line: 28, column: 30, scope: !5)
!22 = !DILocation(line: 28, column: 77, scope: !5)
!23 = !DILocation(line: 28, column: 86, scope: !5)
!24 = !DILocation(line: 29, column: 25, scope: !5)
!25 = !DILocation(line: 29, column: 36, scope: !5)
!26 = !DILocation(line: 29, column: 4, scope: !5)
