; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8]
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2d3d4de5de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %8 = and i32 %7, 31, !dbg !10
  %9 = lshr i32 %7, 5, !dbg !10
  %10 = and i32 %9, 7, !dbg !10
  %urem = and i32 %7, 255, !dbg !10
  %11 = shl nuw nsw i32 %urem, 3, !dbg !10
  %12 = or i32 %11, 1, !dbg !10
  %13 = or i32 %11, 2, !dbg !10
  %14 = or i32 %11, 3, !dbg !10
  %15 = or i32 %11, 4, !dbg !10
  %16 = or i32 %11, 5, !dbg !10
  %17 = or i32 %11, 6, !dbg !10
  %18 = or i32 %11, 7, !dbg !10
  %19 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #6, !dbg !11
  %20 = srem i32 %19, 2048, !dbg !12
  %21 = shl i32 %19, 11, !dbg !13
  %22 = or i32 %21, %11, !dbg !14
  %23 = sext i32 %22 to i64, !dbg !15
  %24 = getelementptr i16, ptr addrspace(1) %0, i64 %23, !dbg !15
  %25 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %24, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !16
  %26 = extractvalue { i32, i32, i32, i32 } %25, 0, !dbg !16
  %27 = extractvalue { i32, i32, i32, i32 } %25, 1, !dbg !16
  %28 = extractvalue { i32, i32, i32, i32 } %25, 2, !dbg !16
  %29 = extractvalue { i32, i32, i32, i32 } %25, 3, !dbg !16
  %30 = trunc i32 %26 to i16, !dbg !16
  %extelt.offset = lshr i32 %26, 16, !dbg !16
  %31 = trunc i32 %extelt.offset to i16, !dbg !16
  %32 = trunc i32 %27 to i16, !dbg !16
  %extelt.offset1 = lshr i32 %27, 16, !dbg !16
  %33 = trunc i32 %extelt.offset1 to i16, !dbg !16
  %34 = trunc i32 %28 to i16, !dbg !16
  %extelt.offset2 = lshr i32 %28, 16, !dbg !16
  %35 = trunc i32 %extelt.offset2 to i16, !dbg !16
  %36 = trunc i32 %29 to i16, !dbg !16
  %extelt.offset3 = lshr i32 %29, 16, !dbg !16
  %37 = trunc i32 %extelt.offset3 to i16, !dbg !16
  %38 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %30) #6, !dbg !17
  %39 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %31) #6, !dbg !17
  %40 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %32) #6, !dbg !17
  %41 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %33) #6, !dbg !17
  %42 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %34) #6, !dbg !17
  %43 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %35) #6, !dbg !17
  %44 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %36) #6, !dbg !17
  %45 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %37) #6, !dbg !17
  %46 = fmul float %38, 6.250000e-02, !dbg !18
  %47 = fmul float %39, 6.250000e-02, !dbg !18
  %48 = fmul float %40, 6.250000e-02, !dbg !18
  %49 = fmul float %41, 6.250000e-02, !dbg !18
  %50 = fmul float %42, 6.250000e-02, !dbg !18
  %51 = fmul float %43, 6.250000e-02, !dbg !18
  %52 = fmul float %44, 6.250000e-02, !dbg !18
  %53 = fmul float %45, 6.250000e-02, !dbg !18
  %54 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %46, float 5.000000e+01) #6, !dbg !19
  %55 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %47, float 5.000000e+01) #6, !dbg !19
  %56 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %48, float 5.000000e+01) #6, !dbg !19
  %57 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %49, float 5.000000e+01) #6, !dbg !19
  %58 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %50, float 5.000000e+01) #6, !dbg !19
  %59 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %51, float 5.000000e+01) #6, !dbg !19
  %60 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %52, float 5.000000e+01) #6, !dbg !19
  %61 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %53, float 5.000000e+01) #6, !dbg !19
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not.i = icmp eq i32 %62, 0, !dbg !20
  %63 = tail call float @llvm.nvvm.fabs.ftz.f(float %54) #6, !dbg !20
  %64 = tail call float @llvm.nvvm.fabs.f(float %54) #6, !dbg !20
  %.01.i = select i1 %.not.i, float %64, float %63, !dbg !20
  %65 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !20
  br i1 %65, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !20

__internal_fmad.exit1.i:                          ; preds = %6
  %66 = fmul float %.01.i, 0x4007154760000000, !dbg !20
  %67 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %66) #6, !dbg !20
  %68 = fadd float %67, 1.000000e+00, !dbg !20
  %69 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %68) #7, !dbg !20, !srcloc !21
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not6.i = icmp eq i32 %70, 0, !dbg !20
  %71 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %69, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %72 = tail call float @llvm.nvvm.fma.rn.f(float %69, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %.03.i = select i1 %.not6.i, float %72, float %71, !dbg !20
  %73 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !20
  %s.0.i = select i1 %73, float 1.000000e+00, float %.03.i, !dbg !20
  %74 = bitcast float %s.0.i to i32, !dbg !20
  %75 = bitcast float %54 to i32, !dbg !20
  %76 = and i32 %75, -2147483648, !dbg !20
  %77 = or i32 %76, %74, !dbg !20
  %78 = bitcast i32 %77 to float, !dbg !20
  br label %__nv_tanhf.exit, !dbg !20

__internal_fmad.exit3.i:                          ; preds = %6
  %79 = fmul float %54, %54, !dbg !20
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not1.i = icmp eq i32 %80, 0, !dbg !20
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %79, float 0xBFAAC795C0000000) #6, !dbg !20
  %82 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %79, float 0xBFAAC795C0000000) #6, !dbg !20
  %.06.i = select i1 %.not1.i, float %82, float %81, !dbg !20
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not2.i = icmp eq i32 %83, 0, !dbg !20
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %79, float 0x3FC10B2820000000) #6, !dbg !20
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %79, float 0x3FC10B2820000000) #6, !dbg !20
  %.05.i = select i1 %.not2.i, float %85, float %84, !dbg !20
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not3.i = icmp eq i32 %86, 0, !dbg !20
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %79, float 0xBFD5553DA0000000) #6, !dbg !20
  %88 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %79, float 0xBFD5553DA0000000) #6, !dbg !20
  %.0.i = select i1 %.not3.i, float %88, float %87, !dbg !20
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not4.i = icmp eq i32 %89, 0, !dbg !20
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %79, float 0.000000e+00) #6, !dbg !20
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %79, float 0.000000e+00) #6, !dbg !20
  %.04.i = select i1 %.not4.i, float %91, float %90, !dbg !20
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not5.i = icmp eq i32 %92, 0, !dbg !20
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %54, float %54) #6, !dbg !20
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %54, float %54) #6, !dbg !20
  %.02.i = select i1 %.not5.i, float %94, float %93, !dbg !20
  br label %__nv_tanhf.exit, !dbg !20

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %78, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !20
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not.i22 = icmp eq i32 %95, 0, !dbg !20
  %96 = tail call float @llvm.nvvm.fabs.ftz.f(float %55) #6, !dbg !20
  %97 = tail call float @llvm.nvvm.fabs.f(float %55) #6, !dbg !20
  %.01.i23 = select i1 %.not.i22, float %97, float %96, !dbg !20
  %98 = fcmp ult float %.01.i23, 0x3FE3333340000000, !dbg !20
  br i1 %98, label %__internal_fmad.exit3.i29, label %__internal_fmad.exit1.i24, !dbg !20

__internal_fmad.exit1.i24:                        ; preds = %__nv_tanhf.exit
  %99 = fmul float %.01.i23, 0x4007154760000000, !dbg !20
  %100 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %99) #6, !dbg !20
  %101 = fadd float %100, 1.000000e+00, !dbg !20
  %102 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %101) #7, !dbg !20, !srcloc !21
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not6.i25 = icmp eq i32 %103, 0, !dbg !20
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %102, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %102, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %.03.i26 = select i1 %.not6.i25, float %105, float %104, !dbg !20
  %106 = fcmp oge float %.01.i23, 0x4022059680000000, !dbg !20
  %s.0.i27 = select i1 %106, float 1.000000e+00, float %.03.i26, !dbg !20
  %107 = bitcast float %s.0.i27 to i32, !dbg !20
  %108 = bitcast float %55 to i32, !dbg !20
  %109 = and i32 %108, -2147483648, !dbg !20
  %110 = or i32 %109, %107, !dbg !20
  %111 = bitcast i32 %110 to float, !dbg !20
  br label %__nv_tanhf.exit40, !dbg !20

__internal_fmad.exit3.i29:                        ; preds = %__nv_tanhf.exit
  %112 = fmul float %55, %55, !dbg !20
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not1.i30 = icmp eq i32 %113, 0, !dbg !20
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %112, float 0xBFAAC795C0000000) #6, !dbg !20
  %115 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %112, float 0xBFAAC795C0000000) #6, !dbg !20
  %.06.i31 = select i1 %.not1.i30, float %115, float %114, !dbg !20
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not2.i32 = icmp eq i32 %116, 0, !dbg !20
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i31, float %112, float 0x3FC10B2820000000) #6, !dbg !20
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i31, float %112, float 0x3FC10B2820000000) #6, !dbg !20
  %.05.i33 = select i1 %.not2.i32, float %118, float %117, !dbg !20
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not3.i34 = icmp eq i32 %119, 0, !dbg !20
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i33, float %112, float 0xBFD5553DA0000000) #6, !dbg !20
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i33, float %112, float 0xBFD5553DA0000000) #6, !dbg !20
  %.0.i35 = select i1 %.not3.i34, float %121, float %120, !dbg !20
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not4.i36 = icmp eq i32 %122, 0, !dbg !20
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i35, float %112, float 0.000000e+00) #6, !dbg !20
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i35, float %112, float 0.000000e+00) #6, !dbg !20
  %.04.i37 = select i1 %.not4.i36, float %124, float %123, !dbg !20
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not5.i38 = icmp eq i32 %125, 0, !dbg !20
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i37, float %55, float %55) #6, !dbg !20
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i37, float %55, float %55) #6, !dbg !20
  %.02.i39 = select i1 %.not5.i38, float %127, float %126, !dbg !20
  br label %__nv_tanhf.exit40, !dbg !20

__nv_tanhf.exit40:                                ; preds = %__internal_fmad.exit1.i24, %__internal_fmad.exit3.i29
  %s.1.i28 = phi float [ %111, %__internal_fmad.exit1.i24 ], [ %.02.i39, %__internal_fmad.exit3.i29 ], !dbg !20
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not.i41 = icmp eq i32 %128, 0, !dbg !20
  %129 = tail call float @llvm.nvvm.fabs.ftz.f(float %56) #6, !dbg !20
  %130 = tail call float @llvm.nvvm.fabs.f(float %56) #6, !dbg !20
  %.01.i42 = select i1 %.not.i41, float %130, float %129, !dbg !20
  %131 = fcmp ult float %.01.i42, 0x3FE3333340000000, !dbg !20
  br i1 %131, label %__internal_fmad.exit3.i48, label %__internal_fmad.exit1.i43, !dbg !20

__internal_fmad.exit1.i43:                        ; preds = %__nv_tanhf.exit40
  %132 = fmul float %.01.i42, 0x4007154760000000, !dbg !20
  %133 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %132) #6, !dbg !20
  %134 = fadd float %133, 1.000000e+00, !dbg !20
  %135 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %134) #7, !dbg !20, !srcloc !21
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not6.i44 = icmp eq i32 %136, 0, !dbg !20
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %135, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %135, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %.03.i45 = select i1 %.not6.i44, float %138, float %137, !dbg !20
  %139 = fcmp oge float %.01.i42, 0x4022059680000000, !dbg !20
  %s.0.i46 = select i1 %139, float 1.000000e+00, float %.03.i45, !dbg !20
  %140 = bitcast float %s.0.i46 to i32, !dbg !20
  %141 = bitcast float %56 to i32, !dbg !20
  %142 = and i32 %141, -2147483648, !dbg !20
  %143 = or i32 %142, %140, !dbg !20
  %144 = bitcast i32 %143 to float, !dbg !20
  br label %__nv_tanhf.exit59, !dbg !20

__internal_fmad.exit3.i48:                        ; preds = %__nv_tanhf.exit40
  %145 = fmul float %56, %56, !dbg !20
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not1.i49 = icmp eq i32 %146, 0, !dbg !20
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %145, float 0xBFAAC795C0000000) #6, !dbg !20
  %148 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %145, float 0xBFAAC795C0000000) #6, !dbg !20
  %.06.i50 = select i1 %.not1.i49, float %148, float %147, !dbg !20
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not2.i51 = icmp eq i32 %149, 0, !dbg !20
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i50, float %145, float 0x3FC10B2820000000) #6, !dbg !20
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i50, float %145, float 0x3FC10B2820000000) #6, !dbg !20
  %.05.i52 = select i1 %.not2.i51, float %151, float %150, !dbg !20
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not3.i53 = icmp eq i32 %152, 0, !dbg !20
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i52, float %145, float 0xBFD5553DA0000000) #6, !dbg !20
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i52, float %145, float 0xBFD5553DA0000000) #6, !dbg !20
  %.0.i54 = select i1 %.not3.i53, float %154, float %153, !dbg !20
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not4.i55 = icmp eq i32 %155, 0, !dbg !20
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i54, float %145, float 0.000000e+00) #6, !dbg !20
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i54, float %145, float 0.000000e+00) #6, !dbg !20
  %.04.i56 = select i1 %.not4.i55, float %157, float %156, !dbg !20
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not5.i57 = icmp eq i32 %158, 0, !dbg !20
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i56, float %56, float %56) #6, !dbg !20
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i56, float %56, float %56) #6, !dbg !20
  %.02.i58 = select i1 %.not5.i57, float %160, float %159, !dbg !20
  br label %__nv_tanhf.exit59, !dbg !20

__nv_tanhf.exit59:                                ; preds = %__internal_fmad.exit1.i43, %__internal_fmad.exit3.i48
  %s.1.i47 = phi float [ %144, %__internal_fmad.exit1.i43 ], [ %.02.i58, %__internal_fmad.exit3.i48 ], !dbg !20
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not.i60 = icmp eq i32 %161, 0, !dbg !20
  %162 = tail call float @llvm.nvvm.fabs.ftz.f(float %57) #6, !dbg !20
  %163 = tail call float @llvm.nvvm.fabs.f(float %57) #6, !dbg !20
  %.01.i61 = select i1 %.not.i60, float %163, float %162, !dbg !20
  %164 = fcmp ult float %.01.i61, 0x3FE3333340000000, !dbg !20
  br i1 %164, label %__internal_fmad.exit3.i67, label %__internal_fmad.exit1.i62, !dbg !20

__internal_fmad.exit1.i62:                        ; preds = %__nv_tanhf.exit59
  %165 = fmul float %.01.i61, 0x4007154760000000, !dbg !20
  %166 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %165) #6, !dbg !20
  %167 = fadd float %166, 1.000000e+00, !dbg !20
  %168 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %167) #7, !dbg !20, !srcloc !21
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not6.i63 = icmp eq i32 %169, 0, !dbg !20
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %168, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %168, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %.03.i64 = select i1 %.not6.i63, float %171, float %170, !dbg !20
  %172 = fcmp oge float %.01.i61, 0x4022059680000000, !dbg !20
  %s.0.i65 = select i1 %172, float 1.000000e+00, float %.03.i64, !dbg !20
  %173 = bitcast float %s.0.i65 to i32, !dbg !20
  %174 = bitcast float %57 to i32, !dbg !20
  %175 = and i32 %174, -2147483648, !dbg !20
  %176 = or i32 %175, %173, !dbg !20
  %177 = bitcast i32 %176 to float, !dbg !20
  br label %__nv_tanhf.exit78, !dbg !20

__internal_fmad.exit3.i67:                        ; preds = %__nv_tanhf.exit59
  %178 = fmul float %57, %57, !dbg !20
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not1.i68 = icmp eq i32 %179, 0, !dbg !20
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %178, float 0xBFAAC795C0000000) #6, !dbg !20
  %181 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %178, float 0xBFAAC795C0000000) #6, !dbg !20
  %.06.i69 = select i1 %.not1.i68, float %181, float %180, !dbg !20
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not2.i70 = icmp eq i32 %182, 0, !dbg !20
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i69, float %178, float 0x3FC10B2820000000) #6, !dbg !20
  %184 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i69, float %178, float 0x3FC10B2820000000) #6, !dbg !20
  %.05.i71 = select i1 %.not2.i70, float %184, float %183, !dbg !20
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not3.i72 = icmp eq i32 %185, 0, !dbg !20
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i71, float %178, float 0xBFD5553DA0000000) #6, !dbg !20
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i71, float %178, float 0xBFD5553DA0000000) #6, !dbg !20
  %.0.i73 = select i1 %.not3.i72, float %187, float %186, !dbg !20
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not4.i74 = icmp eq i32 %188, 0, !dbg !20
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i73, float %178, float 0.000000e+00) #6, !dbg !20
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i73, float %178, float 0.000000e+00) #6, !dbg !20
  %.04.i75 = select i1 %.not4.i74, float %190, float %189, !dbg !20
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not5.i76 = icmp eq i32 %191, 0, !dbg !20
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i75, float %57, float %57) #6, !dbg !20
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i75, float %57, float %57) #6, !dbg !20
  %.02.i77 = select i1 %.not5.i76, float %193, float %192, !dbg !20
  br label %__nv_tanhf.exit78, !dbg !20

__nv_tanhf.exit78:                                ; preds = %__internal_fmad.exit1.i62, %__internal_fmad.exit3.i67
  %s.1.i66 = phi float [ %177, %__internal_fmad.exit1.i62 ], [ %.02.i77, %__internal_fmad.exit3.i67 ], !dbg !20
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not.i79 = icmp eq i32 %194, 0, !dbg !20
  %195 = tail call float @llvm.nvvm.fabs.ftz.f(float %58) #6, !dbg !20
  %196 = tail call float @llvm.nvvm.fabs.f(float %58) #6, !dbg !20
  %.01.i80 = select i1 %.not.i79, float %196, float %195, !dbg !20
  %197 = fcmp ult float %.01.i80, 0x3FE3333340000000, !dbg !20
  br i1 %197, label %__internal_fmad.exit3.i86, label %__internal_fmad.exit1.i81, !dbg !20

__internal_fmad.exit1.i81:                        ; preds = %__nv_tanhf.exit78
  %198 = fmul float %.01.i80, 0x4007154760000000, !dbg !20
  %199 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %198) #6, !dbg !20
  %200 = fadd float %199, 1.000000e+00, !dbg !20
  %201 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %200) #7, !dbg !20, !srcloc !21
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not6.i82 = icmp eq i32 %202, 0, !dbg !20
  %203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %201, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %204 = tail call float @llvm.nvvm.fma.rn.f(float %201, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %.03.i83 = select i1 %.not6.i82, float %204, float %203, !dbg !20
  %205 = fcmp oge float %.01.i80, 0x4022059680000000, !dbg !20
  %s.0.i84 = select i1 %205, float 1.000000e+00, float %.03.i83, !dbg !20
  %206 = bitcast float %s.0.i84 to i32, !dbg !20
  %207 = bitcast float %58 to i32, !dbg !20
  %208 = and i32 %207, -2147483648, !dbg !20
  %209 = or i32 %208, %206, !dbg !20
  %210 = bitcast i32 %209 to float, !dbg !20
  br label %__nv_tanhf.exit97, !dbg !20

__internal_fmad.exit3.i86:                        ; preds = %__nv_tanhf.exit78
  %211 = fmul float %58, %58, !dbg !20
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not1.i87 = icmp eq i32 %212, 0, !dbg !20
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %211, float 0xBFAAC795C0000000) #6, !dbg !20
  %214 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %211, float 0xBFAAC795C0000000) #6, !dbg !20
  %.06.i88 = select i1 %.not1.i87, float %214, float %213, !dbg !20
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not2.i89 = icmp eq i32 %215, 0, !dbg !20
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i88, float %211, float 0x3FC10B2820000000) #6, !dbg !20
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i88, float %211, float 0x3FC10B2820000000) #6, !dbg !20
  %.05.i90 = select i1 %.not2.i89, float %217, float %216, !dbg !20
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not3.i91 = icmp eq i32 %218, 0, !dbg !20
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i90, float %211, float 0xBFD5553DA0000000) #6, !dbg !20
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i90, float %211, float 0xBFD5553DA0000000) #6, !dbg !20
  %.0.i92 = select i1 %.not3.i91, float %220, float %219, !dbg !20
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not4.i93 = icmp eq i32 %221, 0, !dbg !20
  %222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i92, float %211, float 0.000000e+00) #6, !dbg !20
  %223 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i92, float %211, float 0.000000e+00) #6, !dbg !20
  %.04.i94 = select i1 %.not4.i93, float %223, float %222, !dbg !20
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not5.i95 = icmp eq i32 %224, 0, !dbg !20
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i94, float %58, float %58) #6, !dbg !20
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i94, float %58, float %58) #6, !dbg !20
  %.02.i96 = select i1 %.not5.i95, float %226, float %225, !dbg !20
  br label %__nv_tanhf.exit97, !dbg !20

__nv_tanhf.exit97:                                ; preds = %__internal_fmad.exit1.i81, %__internal_fmad.exit3.i86
  %s.1.i85 = phi float [ %210, %__internal_fmad.exit1.i81 ], [ %.02.i96, %__internal_fmad.exit3.i86 ], !dbg !20
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not.i98 = icmp eq i32 %227, 0, !dbg !20
  %228 = tail call float @llvm.nvvm.fabs.ftz.f(float %59) #6, !dbg !20
  %229 = tail call float @llvm.nvvm.fabs.f(float %59) #6, !dbg !20
  %.01.i99 = select i1 %.not.i98, float %229, float %228, !dbg !20
  %230 = fcmp ult float %.01.i99, 0x3FE3333340000000, !dbg !20
  br i1 %230, label %__internal_fmad.exit3.i105, label %__internal_fmad.exit1.i100, !dbg !20

__internal_fmad.exit1.i100:                       ; preds = %__nv_tanhf.exit97
  %231 = fmul float %.01.i99, 0x4007154760000000, !dbg !20
  %232 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %231) #6, !dbg !20
  %233 = fadd float %232, 1.000000e+00, !dbg !20
  %234 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %233) #7, !dbg !20, !srcloc !21
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not6.i101 = icmp eq i32 %235, 0, !dbg !20
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %234, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %234, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %.03.i102 = select i1 %.not6.i101, float %237, float %236, !dbg !20
  %238 = fcmp oge float %.01.i99, 0x4022059680000000, !dbg !20
  %s.0.i103 = select i1 %238, float 1.000000e+00, float %.03.i102, !dbg !20
  %239 = bitcast float %s.0.i103 to i32, !dbg !20
  %240 = bitcast float %59 to i32, !dbg !20
  %241 = and i32 %240, -2147483648, !dbg !20
  %242 = or i32 %241, %239, !dbg !20
  %243 = bitcast i32 %242 to float, !dbg !20
  br label %__nv_tanhf.exit116, !dbg !20

__internal_fmad.exit3.i105:                       ; preds = %__nv_tanhf.exit97
  %244 = fmul float %59, %59, !dbg !20
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not1.i106 = icmp eq i32 %245, 0, !dbg !20
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %244, float 0xBFAAC795C0000000) #6, !dbg !20
  %247 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %244, float 0xBFAAC795C0000000) #6, !dbg !20
  %.06.i107 = select i1 %.not1.i106, float %247, float %246, !dbg !20
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not2.i108 = icmp eq i32 %248, 0, !dbg !20
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i107, float %244, float 0x3FC10B2820000000) #6, !dbg !20
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i107, float %244, float 0x3FC10B2820000000) #6, !dbg !20
  %.05.i109 = select i1 %.not2.i108, float %250, float %249, !dbg !20
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not3.i110 = icmp eq i32 %251, 0, !dbg !20
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i109, float %244, float 0xBFD5553DA0000000) #6, !dbg !20
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i109, float %244, float 0xBFD5553DA0000000) #6, !dbg !20
  %.0.i111 = select i1 %.not3.i110, float %253, float %252, !dbg !20
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not4.i112 = icmp eq i32 %254, 0, !dbg !20
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i111, float %244, float 0.000000e+00) #6, !dbg !20
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i111, float %244, float 0.000000e+00) #6, !dbg !20
  %.04.i113 = select i1 %.not4.i112, float %256, float %255, !dbg !20
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not5.i114 = icmp eq i32 %257, 0, !dbg !20
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i113, float %59, float %59) #6, !dbg !20
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i113, float %59, float %59) #6, !dbg !20
  %.02.i115 = select i1 %.not5.i114, float %259, float %258, !dbg !20
  br label %__nv_tanhf.exit116, !dbg !20

__nv_tanhf.exit116:                               ; preds = %__internal_fmad.exit1.i100, %__internal_fmad.exit3.i105
  %s.1.i104 = phi float [ %243, %__internal_fmad.exit1.i100 ], [ %.02.i115, %__internal_fmad.exit3.i105 ], !dbg !20
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not.i117 = icmp eq i32 %260, 0, !dbg !20
  %261 = tail call float @llvm.nvvm.fabs.ftz.f(float %60) #6, !dbg !20
  %262 = tail call float @llvm.nvvm.fabs.f(float %60) #6, !dbg !20
  %.01.i118 = select i1 %.not.i117, float %262, float %261, !dbg !20
  %263 = fcmp ult float %.01.i118, 0x3FE3333340000000, !dbg !20
  br i1 %263, label %__internal_fmad.exit3.i124, label %__internal_fmad.exit1.i119, !dbg !20

__internal_fmad.exit1.i119:                       ; preds = %__nv_tanhf.exit116
  %264 = fmul float %.01.i118, 0x4007154760000000, !dbg !20
  %265 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %264) #6, !dbg !20
  %266 = fadd float %265, 1.000000e+00, !dbg !20
  %267 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %266) #7, !dbg !20, !srcloc !21
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not6.i120 = icmp eq i32 %268, 0, !dbg !20
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %267, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %267, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %.03.i121 = select i1 %.not6.i120, float %270, float %269, !dbg !20
  %271 = fcmp oge float %.01.i118, 0x4022059680000000, !dbg !20
  %s.0.i122 = select i1 %271, float 1.000000e+00, float %.03.i121, !dbg !20
  %272 = bitcast float %s.0.i122 to i32, !dbg !20
  %273 = bitcast float %60 to i32, !dbg !20
  %274 = and i32 %273, -2147483648, !dbg !20
  %275 = or i32 %274, %272, !dbg !20
  %276 = bitcast i32 %275 to float, !dbg !20
  br label %__nv_tanhf.exit135, !dbg !20

__internal_fmad.exit3.i124:                       ; preds = %__nv_tanhf.exit116
  %277 = fmul float %60, %60, !dbg !20
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not1.i125 = icmp eq i32 %278, 0, !dbg !20
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %277, float 0xBFAAC795C0000000) #6, !dbg !20
  %280 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %277, float 0xBFAAC795C0000000) #6, !dbg !20
  %.06.i126 = select i1 %.not1.i125, float %280, float %279, !dbg !20
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not2.i127 = icmp eq i32 %281, 0, !dbg !20
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i126, float %277, float 0x3FC10B2820000000) #6, !dbg !20
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i126, float %277, float 0x3FC10B2820000000) #6, !dbg !20
  %.05.i128 = select i1 %.not2.i127, float %283, float %282, !dbg !20
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not3.i129 = icmp eq i32 %284, 0, !dbg !20
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i128, float %277, float 0xBFD5553DA0000000) #6, !dbg !20
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i128, float %277, float 0xBFD5553DA0000000) #6, !dbg !20
  %.0.i130 = select i1 %.not3.i129, float %286, float %285, !dbg !20
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not4.i131 = icmp eq i32 %287, 0, !dbg !20
  %288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i130, float %277, float 0.000000e+00) #6, !dbg !20
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i130, float %277, float 0.000000e+00) #6, !dbg !20
  %.04.i132 = select i1 %.not4.i131, float %289, float %288, !dbg !20
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not5.i133 = icmp eq i32 %290, 0, !dbg !20
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i132, float %60, float %60) #6, !dbg !20
  %292 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i132, float %60, float %60) #6, !dbg !20
  %.02.i134 = select i1 %.not5.i133, float %292, float %291, !dbg !20
  br label %__nv_tanhf.exit135, !dbg !20

__nv_tanhf.exit135:                               ; preds = %__internal_fmad.exit1.i119, %__internal_fmad.exit3.i124
  %s.1.i123 = phi float [ %276, %__internal_fmad.exit1.i119 ], [ %.02.i134, %__internal_fmad.exit3.i124 ], !dbg !20
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not.i136 = icmp eq i32 %293, 0, !dbg !20
  %294 = tail call float @llvm.nvvm.fabs.ftz.f(float %61) #6, !dbg !20
  %295 = tail call float @llvm.nvvm.fabs.f(float %61) #6, !dbg !20
  %.01.i137 = select i1 %.not.i136, float %295, float %294, !dbg !20
  %296 = fcmp ult float %.01.i137, 0x3FE3333340000000, !dbg !20
  br i1 %296, label %__internal_fmad.exit3.i143, label %__internal_fmad.exit1.i138, !dbg !20

__internal_fmad.exit1.i138:                       ; preds = %__nv_tanhf.exit135
  %297 = fmul float %.01.i137, 0x4007154760000000, !dbg !20
  %298 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %297) #6, !dbg !20
  %299 = fadd float %298, 1.000000e+00, !dbg !20
  %300 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %299) #7, !dbg !20, !srcloc !21
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not6.i139 = icmp eq i32 %301, 0, !dbg !20
  %302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %300, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %303 = tail call float @llvm.nvvm.fma.rn.f(float %300, float -2.000000e+00, float 1.000000e+00) #6, !dbg !20
  %.03.i140 = select i1 %.not6.i139, float %303, float %302, !dbg !20
  %304 = fcmp oge float %.01.i137, 0x4022059680000000, !dbg !20
  %s.0.i141 = select i1 %304, float 1.000000e+00, float %.03.i140, !dbg !20
  %305 = bitcast float %s.0.i141 to i32, !dbg !20
  %306 = bitcast float %61 to i32, !dbg !20
  %307 = and i32 %306, -2147483648, !dbg !20
  %308 = or i32 %307, %305, !dbg !20
  %309 = bitcast i32 %308 to float, !dbg !20
  br label %__nv_tanhf.exit154, !dbg !20

__internal_fmad.exit3.i143:                       ; preds = %__nv_tanhf.exit135
  %310 = fmul float %61, %61, !dbg !20
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not1.i144 = icmp eq i32 %311, 0, !dbg !20
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %310, float 0xBFAAC795C0000000) #6, !dbg !20
  %313 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %310, float 0xBFAAC795C0000000) #6, !dbg !20
  %.06.i145 = select i1 %.not1.i144, float %313, float %312, !dbg !20
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not2.i146 = icmp eq i32 %314, 0, !dbg !20
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i145, float %310, float 0x3FC10B2820000000) #6, !dbg !20
  %316 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i145, float %310, float 0x3FC10B2820000000) #6, !dbg !20
  %.05.i147 = select i1 %.not2.i146, float %316, float %315, !dbg !20
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not3.i148 = icmp eq i32 %317, 0, !dbg !20
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i147, float %310, float 0xBFD5553DA0000000) #6, !dbg !20
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i147, float %310, float 0xBFD5553DA0000000) #6, !dbg !20
  %.0.i149 = select i1 %.not3.i148, float %319, float %318, !dbg !20
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not4.i150 = icmp eq i32 %320, 0, !dbg !20
  %321 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i149, float %310, float 0.000000e+00) #6, !dbg !20
  %322 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i149, float %310, float 0.000000e+00) #6, !dbg !20
  %.04.i151 = select i1 %.not4.i150, float %322, float %321, !dbg !20
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !20
  %.not5.i152 = icmp eq i32 %323, 0, !dbg !20
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i151, float %61, float %61) #6, !dbg !20
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i151, float %61, float %61) #6, !dbg !20
  %.02.i153 = select i1 %.not5.i152, float %325, float %324, !dbg !20
  br label %__nv_tanhf.exit154, !dbg !20

__nv_tanhf.exit154:                               ; preds = %__internal_fmad.exit1.i138, %__internal_fmad.exit3.i143
  %s.1.i142 = phi float [ %309, %__internal_fmad.exit1.i138 ], [ %.02.i153, %__internal_fmad.exit3.i143 ], !dbg !20
  %326 = fmul float %s.1.i, 5.000000e+01, !dbg !22
  %327 = fmul float %s.1.i28, 5.000000e+01, !dbg !22
  %328 = fmul float %s.1.i47, 5.000000e+01, !dbg !22
  %329 = fmul float %s.1.i66, 5.000000e+01, !dbg !22
  %330 = fmul float %s.1.i85, 5.000000e+01, !dbg !22
  %331 = fmul float %s.1.i104, 5.000000e+01, !dbg !22
  %332 = fmul float %s.1.i123, 5.000000e+01, !dbg !22
  %333 = fmul float %s.1.i142, 5.000000e+01, !dbg !22
  %334 = icmp sgt i32 %11, %20, !dbg !23
  %335 = icmp sgt i32 %12, %20, !dbg !23
  %336 = icmp sgt i32 %13, %20, !dbg !23
  %337 = icmp sgt i32 %14, %20, !dbg !23
  %338 = icmp sgt i32 %15, %20, !dbg !23
  %339 = icmp sgt i32 %16, %20, !dbg !23
  %340 = icmp sgt i32 %17, %20, !dbg !23
  %341 = icmp sgt i32 %18, %20, !dbg !23
  %342 = select i1 %334, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !24
  %343 = select i1 %335, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !24
  %344 = select i1 %336, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !24
  %345 = select i1 %337, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !24
  %346 = select i1 %338, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !24
  %347 = select i1 %339, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !24
  %348 = select i1 %340, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !24
  %349 = select i1 %341, float 0xC7EFE00000000000, float 0.000000e+00, !dbg !24
  %350 = fadd float %342, %326, !dbg !25
  %351 = fadd float %343, %327, !dbg !25
  %352 = fadd float %344, %328, !dbg !25
  %353 = fadd float %345, %329, !dbg !25
  %354 = fadd float %346, %330, !dbg !25
  %355 = fadd float %347, %331, !dbg !25
  %356 = fadd float %348, %332, !dbg !25
  %357 = fadd float %349, %333, !dbg !25
  %358 = fcmp ogt float %350, %351, !dbg !26
  %359 = fcmp uno float %350, 0.000000e+00, !dbg !32
  %360 = or i1 %359, %358, !dbg !33
  %361 = select i1 %360, float %350, float %351, !dbg !34
  %362 = fcmp ogt float %361, %352, !dbg !26
  %363 = fcmp uno float %361, 0.000000e+00, !dbg !32
  %364 = or i1 %363, %362, !dbg !33
  %365 = select i1 %364, float %361, float %352, !dbg !34
  %366 = fcmp ogt float %365, %353, !dbg !26
  %367 = fcmp uno float %365, 0.000000e+00, !dbg !32
  %368 = or i1 %367, %366, !dbg !33
  %369 = select i1 %368, float %365, float %353, !dbg !34
  %370 = fcmp ogt float %369, %354, !dbg !26
  %371 = fcmp uno float %369, 0.000000e+00, !dbg !32
  %372 = or i1 %371, %370, !dbg !33
  %373 = select i1 %372, float %369, float %354, !dbg !34
  %374 = fcmp ogt float %373, %355, !dbg !26
  %375 = fcmp uno float %373, 0.000000e+00, !dbg !32
  %376 = or i1 %375, %374, !dbg !33
  %377 = select i1 %376, float %373, float %355, !dbg !34
  %378 = fcmp ogt float %377, %356, !dbg !26
  %379 = fcmp uno float %377, 0.000000e+00, !dbg !32
  %380 = or i1 %379, %378, !dbg !33
  %381 = select i1 %380, float %377, float %356, !dbg !34
  %382 = fcmp ogt float %381, %357, !dbg !26
  %383 = fcmp uno float %381, 0.000000e+00, !dbg !32
  %384 = or i1 %383, %382, !dbg !33
  %385 = select i1 %384, float %381, float %357, !dbg !34
  %386 = bitcast float %385 to i32, !dbg !35
  %387 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %386, i32 16, i32 31), !dbg !35
  %388 = bitcast i32 %387 to float, !dbg !35
  %389 = fcmp ogt float %385, %388, !dbg !26
  %390 = fcmp uno float %385, 0.000000e+00, !dbg !32
  %391 = or i1 %389, %390, !dbg !33
  %392 = select i1 %391, float %385, float %388, !dbg !34
  %393 = bitcast float %392 to i32, !dbg !35
  %394 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %393, i32 8, i32 31), !dbg !35
  %395 = bitcast i32 %394 to float, !dbg !35
  %396 = fcmp ogt float %392, %395, !dbg !26
  %397 = fcmp uno float %392, 0.000000e+00, !dbg !32
  %398 = or i1 %396, %397, !dbg !33
  %399 = select i1 %398, float %392, float %395, !dbg !34
  %400 = bitcast float %399 to i32, !dbg !35
  %401 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %400, i32 4, i32 31), !dbg !35
  %402 = bitcast i32 %401 to float, !dbg !35
  %403 = fcmp ogt float %399, %402, !dbg !26
  %404 = fcmp uno float %399, 0.000000e+00, !dbg !32
  %405 = or i1 %403, %404, !dbg !33
  %406 = select i1 %405, float %399, float %402, !dbg !34
  %407 = bitcast float %406 to i32, !dbg !35
  %408 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %407, i32 2, i32 31), !dbg !35
  %409 = bitcast i32 %408 to float, !dbg !35
  %410 = fcmp ogt float %406, %409, !dbg !26
  %411 = fcmp uno float %406, 0.000000e+00, !dbg !32
  %412 = or i1 %410, %411, !dbg !33
  %413 = select i1 %412, float %406, float %409, !dbg !34
  %414 = bitcast float %413 to i32, !dbg !35
  %415 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %414, i32 1, i32 31), !dbg !35
  %416 = bitcast i32 %415 to float, !dbg !35
  %417 = fcmp ogt float %413, %416, !dbg !26
  %418 = fcmp uno float %413, 0.000000e+00, !dbg !32
  %419 = or i1 %417, %418, !dbg !33
  %420 = select i1 %419, float %413, float %416, !dbg !34
  %421 = icmp eq i32 %8, 0, !dbg !35
  %422 = zext nneg i32 %10 to i64, !dbg !35
  %423 = getelementptr float, ptr addrspace(3) @global_smem, i64 %422, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %423, float %420, i1 %421) #6, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %424 = icmp slt i32 %7, 8, !dbg !35
  %425 = sext i32 %7 to i64, !dbg !35
  %426 = getelementptr float, ptr addrspace(3) @global_smem, i64 %425, !dbg !35
  %427 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %426, i1 %424) #6, !dbg !35
  %428 = bitcast float %427 to i32, !dbg !35
  %429 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %428, i32 4, i32 31), !dbg !35
  %430 = bitcast i32 %429 to float, !dbg !35
  %431 = fcmp ogt float %427, %430, !dbg !26
  %432 = fcmp uno float %427, 0.000000e+00, !dbg !32
  %433 = or i1 %432, %431, !dbg !33
  %434 = select i1 %433, float %427, float %430, !dbg !34
  %435 = bitcast float %434 to i32, !dbg !35
  %436 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %435, i32 2, i32 31), !dbg !35
  %437 = bitcast i32 %436 to float, !dbg !35
  %438 = fcmp ogt float %434, %437, !dbg !26
  %439 = fcmp uno float %434, 0.000000e+00, !dbg !32
  %440 = or i1 %438, %439, !dbg !33
  %441 = select i1 %440, float %434, float %437, !dbg !34
  %442 = bitcast float %441 to i32, !dbg !35
  %443 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %442, i32 1, i32 31), !dbg !35
  %444 = bitcast i32 %443 to float, !dbg !35
  %445 = fcmp ogt float %441, %444, !dbg !26
  %446 = fcmp uno float %441, 0.000000e+00, !dbg !32
  %447 = or i1 %445, %446, !dbg !33
  %448 = select i1 %447, float %441, float %444, !dbg !34
  %449 = and i32 %7, 7, !dbg !35
  %450 = icmp eq i32 %449, 0, !dbg !35
  %451 = and i1 %424, %450, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %426, float %448, i1 %451) #6, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %452 = load float, ptr addrspace(3) @global_smem, align 4, !dbg !35
  %453 = fsub float %350, %452, !dbg !37
  %454 = fsub float %351, %452, !dbg !37
  %455 = fsub float %352, %452, !dbg !37
  %456 = fsub float %353, %452, !dbg !37
  %457 = fsub float %354, %452, !dbg !37
  %458 = fsub float %355, %452, !dbg !37
  %459 = fsub float %356, %452, !dbg !37
  %460 = fsub float %357, %452, !dbg !37
  %461 = fmul float %453, 0x3FF7154760000000, !dbg !38
  %462 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %461) #6, !dbg !38
  %463 = fmul float %454, 0x3FF7154760000000, !dbg !38
  %464 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %463) #6, !dbg !38
  %465 = fmul float %455, 0x3FF7154760000000, !dbg !38
  %466 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %465) #6, !dbg !38
  %467 = fmul float %456, 0x3FF7154760000000, !dbg !38
  %468 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %467) #6, !dbg !38
  %469 = fmul float %457, 0x3FF7154760000000, !dbg !38
  %470 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %469) #6, !dbg !38
  %471 = fmul float %458, 0x3FF7154760000000, !dbg !38
  %472 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %471) #6, !dbg !38
  %473 = fmul float %459, 0x3FF7154760000000, !dbg !38
  %474 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %473) #6, !dbg !38
  %475 = fmul float %460, 0x3FF7154760000000, !dbg !38
  %476 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %475) #6, !dbg !38
  %477 = fadd float %462, 0.000000e+00, !dbg !39
  %478 = fadd float %464, 0.000000e+00, !dbg !39
  %479 = fadd float %466, 0.000000e+00, !dbg !39
  %480 = fadd float %468, 0.000000e+00, !dbg !39
  %481 = fadd float %470, 0.000000e+00, !dbg !39
  %482 = fadd float %472, 0.000000e+00, !dbg !39
  %483 = fadd float %474, 0.000000e+00, !dbg !39
  %484 = fadd float %476, 0.000000e+00, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %485 = fadd float %477, %478, !dbg !44
  %486 = fadd float %485, %479, !dbg !44
  %487 = fadd float %486, %480, !dbg !44
  %488 = fadd float %487, %481, !dbg !44
  %489 = fadd float %488, %482, !dbg !44
  %490 = fadd float %489, %483, !dbg !44
  %491 = fadd float %490, %484, !dbg !44
  %492 = bitcast float %491 to i32, !dbg !40
  %493 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %492, i32 16, i32 31), !dbg !40
  %494 = bitcast i32 %493 to float, !dbg !40
  %495 = fadd float %491, %494, !dbg !44
  %496 = bitcast float %495 to i32, !dbg !40
  %497 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %496, i32 8, i32 31), !dbg !40
  %498 = bitcast i32 %497 to float, !dbg !40
  %499 = fadd float %495, %498, !dbg !44
  %500 = bitcast float %499 to i32, !dbg !40
  %501 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %500, i32 4, i32 31), !dbg !40
  %502 = bitcast i32 %501 to float, !dbg !40
  %503 = fadd float %499, %502, !dbg !44
  %504 = bitcast float %503 to i32, !dbg !40
  %505 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %504, i32 2, i32 31), !dbg !40
  %506 = bitcast i32 %505 to float, !dbg !40
  %507 = fadd float %503, %506, !dbg !44
  %508 = bitcast float %507 to i32, !dbg !40
  %509 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %508, i32 1, i32 31), !dbg !40
  %510 = bitcast i32 %509 to float, !dbg !40
  %511 = fadd float %507, %510, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %423, float %511, i1 %421) #6, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %512 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %426, i1 %424) #6, !dbg !40
  %513 = bitcast float %512 to i32, !dbg !40
  %514 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %513, i32 4, i32 31), !dbg !40
  %515 = bitcast i32 %514 to float, !dbg !40
  %516 = fadd float %512, %515, !dbg !44
  %517 = bitcast float %516 to i32, !dbg !40
  %518 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %517, i32 2, i32 31), !dbg !40
  %519 = bitcast i32 %518 to float, !dbg !40
  %520 = fadd float %516, %519, !dbg !44
  %521 = bitcast float %520 to i32, !dbg !40
  %522 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %521, i32 1, i32 31), !dbg !40
  %523 = bitcast i32 %522 to float, !dbg !40
  %524 = fadd float %520, %523, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %426, float %524, i1 %451) #6, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %525 = load float, ptr addrspace(3) @global_smem, align 4, !dbg !40
  %526 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_first.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %24, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true, i32 0, i1 true) #6, !dbg !48
  %527 = extractvalue { i32, i32, i32, i32 } %526, 0, !dbg !48
  %528 = extractvalue { i32, i32, i32, i32 } %526, 1, !dbg !48
  %529 = extractvalue { i32, i32, i32, i32 } %526, 2, !dbg !48
  %530 = extractvalue { i32, i32, i32, i32 } %526, 3, !dbg !48
  %531 = trunc i32 %527 to i16, !dbg !48
  %extelt.offset4 = lshr i32 %527, 16, !dbg !48
  %532 = trunc i32 %extelt.offset4 to i16, !dbg !48
  %533 = trunc i32 %528 to i16, !dbg !48
  %extelt.offset5 = lshr i32 %528, 16, !dbg !48
  %534 = trunc i32 %extelt.offset5 to i16, !dbg !48
  %535 = trunc i32 %529 to i16, !dbg !48
  %extelt.offset6 = lshr i32 %529, 16, !dbg !48
  %536 = trunc i32 %extelt.offset6 to i16, !dbg !48
  %537 = trunc i32 %530 to i16, !dbg !48
  %extelt.offset7 = lshr i32 %530, 16, !dbg !48
  %538 = trunc i32 %extelt.offset7 to i16, !dbg !48
  %539 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %531) #6, !dbg !49
  %540 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %532) #6, !dbg !49
  %541 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %533) #6, !dbg !49
  %542 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %534) #6, !dbg !49
  %543 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %535) #6, !dbg !49
  %544 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %536) #6, !dbg !49
  %545 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %537) #6, !dbg !49
  %546 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %538) #6, !dbg !49
  %547 = fmul float %539, 6.250000e-02, !dbg !50
  %548 = fmul float %540, 6.250000e-02, !dbg !50
  %549 = fmul float %541, 6.250000e-02, !dbg !50
  %550 = fmul float %542, 6.250000e-02, !dbg !50
  %551 = fmul float %543, 6.250000e-02, !dbg !50
  %552 = fmul float %544, 6.250000e-02, !dbg !50
  %553 = fmul float %545, 6.250000e-02, !dbg !50
  %554 = fmul float %546, 6.250000e-02, !dbg !50
  %555 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %547, float 5.000000e+01) #6, !dbg !51
  %556 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %548, float 5.000000e+01) #6, !dbg !51
  %557 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %549, float 5.000000e+01) #6, !dbg !51
  %558 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %550, float 5.000000e+01) #6, !dbg !51
  %559 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %551, float 5.000000e+01) #6, !dbg !51
  %560 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %552, float 5.000000e+01) #6, !dbg !51
  %561 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %553, float 5.000000e+01) #6, !dbg !51
  %562 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %554, float 5.000000e+01) #6, !dbg !51
  %563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i155 = icmp eq i32 %563, 0, !dbg !52
  %564 = tail call float @llvm.nvvm.fabs.ftz.f(float %555) #6, !dbg !52
  %565 = tail call float @llvm.nvvm.fabs.f(float %555) #6, !dbg !52
  %.01.i156 = select i1 %.not.i155, float %565, float %564, !dbg !52
  %566 = fcmp ult float %.01.i156, 0x3FE3333340000000, !dbg !52
  br i1 %566, label %__internal_fmad.exit3.i162, label %__internal_fmad.exit1.i157, !dbg !52

__internal_fmad.exit1.i157:                       ; preds = %__nv_tanhf.exit154
  %567 = fmul float %.01.i156, 0x4007154760000000, !dbg !52
  %568 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %567) #6, !dbg !52
  %569 = fadd float %568, 1.000000e+00, !dbg !52
  %570 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %569) #7, !dbg !52, !srcloc !21
  %571 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i158 = icmp eq i32 %571, 0, !dbg !52
  %572 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %570, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %573 = tail call float @llvm.nvvm.fma.rn.f(float %570, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i159 = select i1 %.not6.i158, float %573, float %572, !dbg !52
  %574 = fcmp oge float %.01.i156, 0x4022059680000000, !dbg !52
  %s.0.i160 = select i1 %574, float 1.000000e+00, float %.03.i159, !dbg !52
  %575 = bitcast float %s.0.i160 to i32, !dbg !52
  %576 = bitcast float %555 to i32, !dbg !52
  %577 = and i32 %576, -2147483648, !dbg !52
  %578 = or i32 %577, %575, !dbg !52
  %579 = bitcast i32 %578 to float, !dbg !52
  br label %__nv_tanhf.exit173, !dbg !52

__internal_fmad.exit3.i162:                       ; preds = %__nv_tanhf.exit154
  %580 = fmul float %555, %555, !dbg !52
  %581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i163 = icmp eq i32 %581, 0, !dbg !52
  %582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %580, float 0xBFAAC795C0000000) #6, !dbg !52
  %583 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %580, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i164 = select i1 %.not1.i163, float %583, float %582, !dbg !52
  %584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i165 = icmp eq i32 %584, 0, !dbg !52
  %585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i164, float %580, float 0x3FC10B2820000000) #6, !dbg !52
  %586 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i164, float %580, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i166 = select i1 %.not2.i165, float %586, float %585, !dbg !52
  %587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i167 = icmp eq i32 %587, 0, !dbg !52
  %588 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i166, float %580, float 0xBFD5553DA0000000) #6, !dbg !52
  %589 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i166, float %580, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i168 = select i1 %.not3.i167, float %589, float %588, !dbg !52
  %590 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i169 = icmp eq i32 %590, 0, !dbg !52
  %591 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i168, float %580, float 0.000000e+00) #6, !dbg !52
  %592 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i168, float %580, float 0.000000e+00) #6, !dbg !52
  %.04.i170 = select i1 %.not4.i169, float %592, float %591, !dbg !52
  %593 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i171 = icmp eq i32 %593, 0, !dbg !52
  %594 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i170, float %555, float %555) #6, !dbg !52
  %595 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i170, float %555, float %555) #6, !dbg !52
  %.02.i172 = select i1 %.not5.i171, float %595, float %594, !dbg !52
  br label %__nv_tanhf.exit173, !dbg !52

__nv_tanhf.exit173:                               ; preds = %__internal_fmad.exit1.i157, %__internal_fmad.exit3.i162
  %s.1.i161 = phi float [ %579, %__internal_fmad.exit1.i157 ], [ %.02.i172, %__internal_fmad.exit3.i162 ], !dbg !52
  %596 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i174 = icmp eq i32 %596, 0, !dbg !52
  %597 = tail call float @llvm.nvvm.fabs.ftz.f(float %556) #6, !dbg !52
  %598 = tail call float @llvm.nvvm.fabs.f(float %556) #6, !dbg !52
  %.01.i175 = select i1 %.not.i174, float %598, float %597, !dbg !52
  %599 = fcmp ult float %.01.i175, 0x3FE3333340000000, !dbg !52
  br i1 %599, label %__internal_fmad.exit3.i181, label %__internal_fmad.exit1.i176, !dbg !52

__internal_fmad.exit1.i176:                       ; preds = %__nv_tanhf.exit173
  %600 = fmul float %.01.i175, 0x4007154760000000, !dbg !52
  %601 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %600) #6, !dbg !52
  %602 = fadd float %601, 1.000000e+00, !dbg !52
  %603 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %602) #7, !dbg !52, !srcloc !21
  %604 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i177 = icmp eq i32 %604, 0, !dbg !52
  %605 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %603, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %606 = tail call float @llvm.nvvm.fma.rn.f(float %603, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i178 = select i1 %.not6.i177, float %606, float %605, !dbg !52
  %607 = fcmp oge float %.01.i175, 0x4022059680000000, !dbg !52
  %s.0.i179 = select i1 %607, float 1.000000e+00, float %.03.i178, !dbg !52
  %608 = bitcast float %s.0.i179 to i32, !dbg !52
  %609 = bitcast float %556 to i32, !dbg !52
  %610 = and i32 %609, -2147483648, !dbg !52
  %611 = or i32 %610, %608, !dbg !52
  %612 = bitcast i32 %611 to float, !dbg !52
  br label %__nv_tanhf.exit192, !dbg !52

__internal_fmad.exit3.i181:                       ; preds = %__nv_tanhf.exit173
  %613 = fmul float %556, %556, !dbg !52
  %614 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i182 = icmp eq i32 %614, 0, !dbg !52
  %615 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %613, float 0xBFAAC795C0000000) #6, !dbg !52
  %616 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %613, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i183 = select i1 %.not1.i182, float %616, float %615, !dbg !52
  %617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i184 = icmp eq i32 %617, 0, !dbg !52
  %618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i183, float %613, float 0x3FC10B2820000000) #6, !dbg !52
  %619 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i183, float %613, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i185 = select i1 %.not2.i184, float %619, float %618, !dbg !52
  %620 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i186 = icmp eq i32 %620, 0, !dbg !52
  %621 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i185, float %613, float 0xBFD5553DA0000000) #6, !dbg !52
  %622 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i185, float %613, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i187 = select i1 %.not3.i186, float %622, float %621, !dbg !52
  %623 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i188 = icmp eq i32 %623, 0, !dbg !52
  %624 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i187, float %613, float 0.000000e+00) #6, !dbg !52
  %625 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i187, float %613, float 0.000000e+00) #6, !dbg !52
  %.04.i189 = select i1 %.not4.i188, float %625, float %624, !dbg !52
  %626 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i190 = icmp eq i32 %626, 0, !dbg !52
  %627 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i189, float %556, float %556) #6, !dbg !52
  %628 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i189, float %556, float %556) #6, !dbg !52
  %.02.i191 = select i1 %.not5.i190, float %628, float %627, !dbg !52
  br label %__nv_tanhf.exit192, !dbg !52

__nv_tanhf.exit192:                               ; preds = %__internal_fmad.exit1.i176, %__internal_fmad.exit3.i181
  %s.1.i180 = phi float [ %612, %__internal_fmad.exit1.i176 ], [ %.02.i191, %__internal_fmad.exit3.i181 ], !dbg !52
  %629 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i193 = icmp eq i32 %629, 0, !dbg !52
  %630 = tail call float @llvm.nvvm.fabs.ftz.f(float %557) #6, !dbg !52
  %631 = tail call float @llvm.nvvm.fabs.f(float %557) #6, !dbg !52
  %.01.i194 = select i1 %.not.i193, float %631, float %630, !dbg !52
  %632 = fcmp ult float %.01.i194, 0x3FE3333340000000, !dbg !52
  br i1 %632, label %__internal_fmad.exit3.i200, label %__internal_fmad.exit1.i195, !dbg !52

__internal_fmad.exit1.i195:                       ; preds = %__nv_tanhf.exit192
  %633 = fmul float %.01.i194, 0x4007154760000000, !dbg !52
  %634 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %633) #6, !dbg !52
  %635 = fadd float %634, 1.000000e+00, !dbg !52
  %636 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %635) #7, !dbg !52, !srcloc !21
  %637 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i196 = icmp eq i32 %637, 0, !dbg !52
  %638 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %636, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %639 = tail call float @llvm.nvvm.fma.rn.f(float %636, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i197 = select i1 %.not6.i196, float %639, float %638, !dbg !52
  %640 = fcmp oge float %.01.i194, 0x4022059680000000, !dbg !52
  %s.0.i198 = select i1 %640, float 1.000000e+00, float %.03.i197, !dbg !52
  %641 = bitcast float %s.0.i198 to i32, !dbg !52
  %642 = bitcast float %557 to i32, !dbg !52
  %643 = and i32 %642, -2147483648, !dbg !52
  %644 = or i32 %643, %641, !dbg !52
  %645 = bitcast i32 %644 to float, !dbg !52
  br label %__nv_tanhf.exit211, !dbg !52

__internal_fmad.exit3.i200:                       ; preds = %__nv_tanhf.exit192
  %646 = fmul float %557, %557, !dbg !52
  %647 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i201 = icmp eq i32 %647, 0, !dbg !52
  %648 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %646, float 0xBFAAC795C0000000) #6, !dbg !52
  %649 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %646, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i202 = select i1 %.not1.i201, float %649, float %648, !dbg !52
  %650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i203 = icmp eq i32 %650, 0, !dbg !52
  %651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i202, float %646, float 0x3FC10B2820000000) #6, !dbg !52
  %652 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i202, float %646, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i204 = select i1 %.not2.i203, float %652, float %651, !dbg !52
  %653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i205 = icmp eq i32 %653, 0, !dbg !52
  %654 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i204, float %646, float 0xBFD5553DA0000000) #6, !dbg !52
  %655 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i204, float %646, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i206 = select i1 %.not3.i205, float %655, float %654, !dbg !52
  %656 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i207 = icmp eq i32 %656, 0, !dbg !52
  %657 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i206, float %646, float 0.000000e+00) #6, !dbg !52
  %658 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i206, float %646, float 0.000000e+00) #6, !dbg !52
  %.04.i208 = select i1 %.not4.i207, float %658, float %657, !dbg !52
  %659 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i209 = icmp eq i32 %659, 0, !dbg !52
  %660 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i208, float %557, float %557) #6, !dbg !52
  %661 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i208, float %557, float %557) #6, !dbg !52
  %.02.i210 = select i1 %.not5.i209, float %661, float %660, !dbg !52
  br label %__nv_tanhf.exit211, !dbg !52

__nv_tanhf.exit211:                               ; preds = %__internal_fmad.exit1.i195, %__internal_fmad.exit3.i200
  %s.1.i199 = phi float [ %645, %__internal_fmad.exit1.i195 ], [ %.02.i210, %__internal_fmad.exit3.i200 ], !dbg !52
  %662 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i212 = icmp eq i32 %662, 0, !dbg !52
  %663 = tail call float @llvm.nvvm.fabs.ftz.f(float %558) #6, !dbg !52
  %664 = tail call float @llvm.nvvm.fabs.f(float %558) #6, !dbg !52
  %.01.i213 = select i1 %.not.i212, float %664, float %663, !dbg !52
  %665 = fcmp ult float %.01.i213, 0x3FE3333340000000, !dbg !52
  br i1 %665, label %__internal_fmad.exit3.i219, label %__internal_fmad.exit1.i214, !dbg !52

__internal_fmad.exit1.i214:                       ; preds = %__nv_tanhf.exit211
  %666 = fmul float %.01.i213, 0x4007154760000000, !dbg !52
  %667 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %666) #6, !dbg !52
  %668 = fadd float %667, 1.000000e+00, !dbg !52
  %669 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %668) #7, !dbg !52, !srcloc !21
  %670 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i215 = icmp eq i32 %670, 0, !dbg !52
  %671 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %669, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %672 = tail call float @llvm.nvvm.fma.rn.f(float %669, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i216 = select i1 %.not6.i215, float %672, float %671, !dbg !52
  %673 = fcmp oge float %.01.i213, 0x4022059680000000, !dbg !52
  %s.0.i217 = select i1 %673, float 1.000000e+00, float %.03.i216, !dbg !52
  %674 = bitcast float %s.0.i217 to i32, !dbg !52
  %675 = bitcast float %558 to i32, !dbg !52
  %676 = and i32 %675, -2147483648, !dbg !52
  %677 = or i32 %676, %674, !dbg !52
  %678 = bitcast i32 %677 to float, !dbg !52
  br label %__nv_tanhf.exit230, !dbg !52

__internal_fmad.exit3.i219:                       ; preds = %__nv_tanhf.exit211
  %679 = fmul float %558, %558, !dbg !52
  %680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i220 = icmp eq i32 %680, 0, !dbg !52
  %681 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %679, float 0xBFAAC795C0000000) #6, !dbg !52
  %682 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %679, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i221 = select i1 %.not1.i220, float %682, float %681, !dbg !52
  %683 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i222 = icmp eq i32 %683, 0, !dbg !52
  %684 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i221, float %679, float 0x3FC10B2820000000) #6, !dbg !52
  %685 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i221, float %679, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i223 = select i1 %.not2.i222, float %685, float %684, !dbg !52
  %686 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i224 = icmp eq i32 %686, 0, !dbg !52
  %687 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i223, float %679, float 0xBFD5553DA0000000) #6, !dbg !52
  %688 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i223, float %679, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i225 = select i1 %.not3.i224, float %688, float %687, !dbg !52
  %689 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i226 = icmp eq i32 %689, 0, !dbg !52
  %690 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i225, float %679, float 0.000000e+00) #6, !dbg !52
  %691 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i225, float %679, float 0.000000e+00) #6, !dbg !52
  %.04.i227 = select i1 %.not4.i226, float %691, float %690, !dbg !52
  %692 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i228 = icmp eq i32 %692, 0, !dbg !52
  %693 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i227, float %558, float %558) #6, !dbg !52
  %694 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i227, float %558, float %558) #6, !dbg !52
  %.02.i229 = select i1 %.not5.i228, float %694, float %693, !dbg !52
  br label %__nv_tanhf.exit230, !dbg !52

__nv_tanhf.exit230:                               ; preds = %__internal_fmad.exit1.i214, %__internal_fmad.exit3.i219
  %s.1.i218 = phi float [ %678, %__internal_fmad.exit1.i214 ], [ %.02.i229, %__internal_fmad.exit3.i219 ], !dbg !52
  %695 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i231 = icmp eq i32 %695, 0, !dbg !52
  %696 = tail call float @llvm.nvvm.fabs.ftz.f(float %559) #6, !dbg !52
  %697 = tail call float @llvm.nvvm.fabs.f(float %559) #6, !dbg !52
  %.01.i232 = select i1 %.not.i231, float %697, float %696, !dbg !52
  %698 = fcmp ult float %.01.i232, 0x3FE3333340000000, !dbg !52
  br i1 %698, label %__internal_fmad.exit3.i238, label %__internal_fmad.exit1.i233, !dbg !52

__internal_fmad.exit1.i233:                       ; preds = %__nv_tanhf.exit230
  %699 = fmul float %.01.i232, 0x4007154760000000, !dbg !52
  %700 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %699) #6, !dbg !52
  %701 = fadd float %700, 1.000000e+00, !dbg !52
  %702 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %701) #7, !dbg !52, !srcloc !21
  %703 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i234 = icmp eq i32 %703, 0, !dbg !52
  %704 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %702, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %705 = tail call float @llvm.nvvm.fma.rn.f(float %702, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i235 = select i1 %.not6.i234, float %705, float %704, !dbg !52
  %706 = fcmp oge float %.01.i232, 0x4022059680000000, !dbg !52
  %s.0.i236 = select i1 %706, float 1.000000e+00, float %.03.i235, !dbg !52
  %707 = bitcast float %s.0.i236 to i32, !dbg !52
  %708 = bitcast float %559 to i32, !dbg !52
  %709 = and i32 %708, -2147483648, !dbg !52
  %710 = or i32 %709, %707, !dbg !52
  %711 = bitcast i32 %710 to float, !dbg !52
  br label %__nv_tanhf.exit249, !dbg !52

__internal_fmad.exit3.i238:                       ; preds = %__nv_tanhf.exit230
  %712 = fmul float %559, %559, !dbg !52
  %713 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i239 = icmp eq i32 %713, 0, !dbg !52
  %714 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %712, float 0xBFAAC795C0000000) #6, !dbg !52
  %715 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %712, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i240 = select i1 %.not1.i239, float %715, float %714, !dbg !52
  %716 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i241 = icmp eq i32 %716, 0, !dbg !52
  %717 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i240, float %712, float 0x3FC10B2820000000) #6, !dbg !52
  %718 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i240, float %712, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i242 = select i1 %.not2.i241, float %718, float %717, !dbg !52
  %719 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i243 = icmp eq i32 %719, 0, !dbg !52
  %720 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i242, float %712, float 0xBFD5553DA0000000) #6, !dbg !52
  %721 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i242, float %712, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i244 = select i1 %.not3.i243, float %721, float %720, !dbg !52
  %722 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i245 = icmp eq i32 %722, 0, !dbg !52
  %723 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i244, float %712, float 0.000000e+00) #6, !dbg !52
  %724 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i244, float %712, float 0.000000e+00) #6, !dbg !52
  %.04.i246 = select i1 %.not4.i245, float %724, float %723, !dbg !52
  %725 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i247 = icmp eq i32 %725, 0, !dbg !52
  %726 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i246, float %559, float %559) #6, !dbg !52
  %727 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i246, float %559, float %559) #6, !dbg !52
  %.02.i248 = select i1 %.not5.i247, float %727, float %726, !dbg !52
  br label %__nv_tanhf.exit249, !dbg !52

__nv_tanhf.exit249:                               ; preds = %__internal_fmad.exit1.i233, %__internal_fmad.exit3.i238
  %s.1.i237 = phi float [ %711, %__internal_fmad.exit1.i233 ], [ %.02.i248, %__internal_fmad.exit3.i238 ], !dbg !52
  %728 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i250 = icmp eq i32 %728, 0, !dbg !52
  %729 = tail call float @llvm.nvvm.fabs.ftz.f(float %560) #6, !dbg !52
  %730 = tail call float @llvm.nvvm.fabs.f(float %560) #6, !dbg !52
  %.01.i251 = select i1 %.not.i250, float %730, float %729, !dbg !52
  %731 = fcmp ult float %.01.i251, 0x3FE3333340000000, !dbg !52
  br i1 %731, label %__internal_fmad.exit3.i257, label %__internal_fmad.exit1.i252, !dbg !52

__internal_fmad.exit1.i252:                       ; preds = %__nv_tanhf.exit249
  %732 = fmul float %.01.i251, 0x4007154760000000, !dbg !52
  %733 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %732) #6, !dbg !52
  %734 = fadd float %733, 1.000000e+00, !dbg !52
  %735 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %734) #7, !dbg !52, !srcloc !21
  %736 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i253 = icmp eq i32 %736, 0, !dbg !52
  %737 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %735, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %738 = tail call float @llvm.nvvm.fma.rn.f(float %735, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i254 = select i1 %.not6.i253, float %738, float %737, !dbg !52
  %739 = fcmp oge float %.01.i251, 0x4022059680000000, !dbg !52
  %s.0.i255 = select i1 %739, float 1.000000e+00, float %.03.i254, !dbg !52
  %740 = bitcast float %s.0.i255 to i32, !dbg !52
  %741 = bitcast float %560 to i32, !dbg !52
  %742 = and i32 %741, -2147483648, !dbg !52
  %743 = or i32 %742, %740, !dbg !52
  %744 = bitcast i32 %743 to float, !dbg !52
  br label %__nv_tanhf.exit268, !dbg !52

__internal_fmad.exit3.i257:                       ; preds = %__nv_tanhf.exit249
  %745 = fmul float %560, %560, !dbg !52
  %746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i258 = icmp eq i32 %746, 0, !dbg !52
  %747 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %745, float 0xBFAAC795C0000000) #6, !dbg !52
  %748 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %745, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i259 = select i1 %.not1.i258, float %748, float %747, !dbg !52
  %749 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i260 = icmp eq i32 %749, 0, !dbg !52
  %750 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i259, float %745, float 0x3FC10B2820000000) #6, !dbg !52
  %751 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i259, float %745, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i261 = select i1 %.not2.i260, float %751, float %750, !dbg !52
  %752 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i262 = icmp eq i32 %752, 0, !dbg !52
  %753 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i261, float %745, float 0xBFD5553DA0000000) #6, !dbg !52
  %754 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i261, float %745, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i263 = select i1 %.not3.i262, float %754, float %753, !dbg !52
  %755 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i264 = icmp eq i32 %755, 0, !dbg !52
  %756 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i263, float %745, float 0.000000e+00) #6, !dbg !52
  %757 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i263, float %745, float 0.000000e+00) #6, !dbg !52
  %.04.i265 = select i1 %.not4.i264, float %757, float %756, !dbg !52
  %758 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i266 = icmp eq i32 %758, 0, !dbg !52
  %759 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i265, float %560, float %560) #6, !dbg !52
  %760 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i265, float %560, float %560) #6, !dbg !52
  %.02.i267 = select i1 %.not5.i266, float %760, float %759, !dbg !52
  br label %__nv_tanhf.exit268, !dbg !52

__nv_tanhf.exit268:                               ; preds = %__internal_fmad.exit1.i252, %__internal_fmad.exit3.i257
  %s.1.i256 = phi float [ %744, %__internal_fmad.exit1.i252 ], [ %.02.i267, %__internal_fmad.exit3.i257 ], !dbg !52
  %761 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i269 = icmp eq i32 %761, 0, !dbg !52
  %762 = tail call float @llvm.nvvm.fabs.ftz.f(float %561) #6, !dbg !52
  %763 = tail call float @llvm.nvvm.fabs.f(float %561) #6, !dbg !52
  %.01.i270 = select i1 %.not.i269, float %763, float %762, !dbg !52
  %764 = fcmp ult float %.01.i270, 0x3FE3333340000000, !dbg !52
  br i1 %764, label %__internal_fmad.exit3.i276, label %__internal_fmad.exit1.i271, !dbg !52

__internal_fmad.exit1.i271:                       ; preds = %__nv_tanhf.exit268
  %765 = fmul float %.01.i270, 0x4007154760000000, !dbg !52
  %766 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %765) #6, !dbg !52
  %767 = fadd float %766, 1.000000e+00, !dbg !52
  %768 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %767) #7, !dbg !52, !srcloc !21
  %769 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i272 = icmp eq i32 %769, 0, !dbg !52
  %770 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %768, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %771 = tail call float @llvm.nvvm.fma.rn.f(float %768, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i273 = select i1 %.not6.i272, float %771, float %770, !dbg !52
  %772 = fcmp oge float %.01.i270, 0x4022059680000000, !dbg !52
  %s.0.i274 = select i1 %772, float 1.000000e+00, float %.03.i273, !dbg !52
  %773 = bitcast float %s.0.i274 to i32, !dbg !52
  %774 = bitcast float %561 to i32, !dbg !52
  %775 = and i32 %774, -2147483648, !dbg !52
  %776 = or i32 %775, %773, !dbg !52
  %777 = bitcast i32 %776 to float, !dbg !52
  br label %__nv_tanhf.exit287, !dbg !52

__internal_fmad.exit3.i276:                       ; preds = %__nv_tanhf.exit268
  %778 = fmul float %561, %561, !dbg !52
  %779 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i277 = icmp eq i32 %779, 0, !dbg !52
  %780 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %778, float 0xBFAAC795C0000000) #6, !dbg !52
  %781 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %778, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i278 = select i1 %.not1.i277, float %781, float %780, !dbg !52
  %782 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i279 = icmp eq i32 %782, 0, !dbg !52
  %783 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i278, float %778, float 0x3FC10B2820000000) #6, !dbg !52
  %784 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i278, float %778, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i280 = select i1 %.not2.i279, float %784, float %783, !dbg !52
  %785 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i281 = icmp eq i32 %785, 0, !dbg !52
  %786 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i280, float %778, float 0xBFD5553DA0000000) #6, !dbg !52
  %787 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i280, float %778, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i282 = select i1 %.not3.i281, float %787, float %786, !dbg !52
  %788 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i283 = icmp eq i32 %788, 0, !dbg !52
  %789 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i282, float %778, float 0.000000e+00) #6, !dbg !52
  %790 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i282, float %778, float 0.000000e+00) #6, !dbg !52
  %.04.i284 = select i1 %.not4.i283, float %790, float %789, !dbg !52
  %791 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i285 = icmp eq i32 %791, 0, !dbg !52
  %792 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i284, float %561, float %561) #6, !dbg !52
  %793 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i284, float %561, float %561) #6, !dbg !52
  %.02.i286 = select i1 %.not5.i285, float %793, float %792, !dbg !52
  br label %__nv_tanhf.exit287, !dbg !52

__nv_tanhf.exit287:                               ; preds = %__internal_fmad.exit1.i271, %__internal_fmad.exit3.i276
  %s.1.i275 = phi float [ %777, %__internal_fmad.exit1.i271 ], [ %.02.i286, %__internal_fmad.exit3.i276 ], !dbg !52
  %794 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not.i288 = icmp eq i32 %794, 0, !dbg !52
  %795 = tail call float @llvm.nvvm.fabs.ftz.f(float %562) #6, !dbg !52
  %796 = tail call float @llvm.nvvm.fabs.f(float %562) #6, !dbg !52
  %.01.i289 = select i1 %.not.i288, float %796, float %795, !dbg !52
  %797 = fcmp ult float %.01.i289, 0x3FE3333340000000, !dbg !52
  br i1 %797, label %__internal_fmad.exit3.i295, label %__internal_fmad.exit1.i290, !dbg !52

__internal_fmad.exit1.i290:                       ; preds = %__nv_tanhf.exit287
  %798 = fmul float %.01.i289, 0x4007154760000000, !dbg !52
  %799 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %798) #6, !dbg !52
  %800 = fadd float %799, 1.000000e+00, !dbg !52
  %801 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %800) #7, !dbg !52, !srcloc !21
  %802 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not6.i291 = icmp eq i32 %802, 0, !dbg !52
  %803 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %801, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %804 = tail call float @llvm.nvvm.fma.rn.f(float %801, float -2.000000e+00, float 1.000000e+00) #6, !dbg !52
  %.03.i292 = select i1 %.not6.i291, float %804, float %803, !dbg !52
  %805 = fcmp oge float %.01.i289, 0x4022059680000000, !dbg !52
  %s.0.i293 = select i1 %805, float 1.000000e+00, float %.03.i292, !dbg !52
  %806 = bitcast float %s.0.i293 to i32, !dbg !52
  %807 = bitcast float %562 to i32, !dbg !52
  %808 = and i32 %807, -2147483648, !dbg !52
  %809 = or i32 %808, %806, !dbg !52
  %810 = bitcast i32 %809 to float, !dbg !52
  br label %__nv_tanhf.exit306, !dbg !52

__internal_fmad.exit3.i295:                       ; preds = %__nv_tanhf.exit287
  %811 = fmul float %562, %562, !dbg !52
  %812 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not1.i296 = icmp eq i32 %812, 0, !dbg !52
  %813 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %811, float 0xBFAAC795C0000000) #6, !dbg !52
  %814 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %811, float 0xBFAAC795C0000000) #6, !dbg !52
  %.06.i297 = select i1 %.not1.i296, float %814, float %813, !dbg !52
  %815 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not2.i298 = icmp eq i32 %815, 0, !dbg !52
  %816 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i297, float %811, float 0x3FC10B2820000000) #6, !dbg !52
  %817 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i297, float %811, float 0x3FC10B2820000000) #6, !dbg !52
  %.05.i299 = select i1 %.not2.i298, float %817, float %816, !dbg !52
  %818 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not3.i300 = icmp eq i32 %818, 0, !dbg !52
  %819 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i299, float %811, float 0xBFD5553DA0000000) #6, !dbg !52
  %820 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i299, float %811, float 0xBFD5553DA0000000) #6, !dbg !52
  %.0.i301 = select i1 %.not3.i300, float %820, float %819, !dbg !52
  %821 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not4.i302 = icmp eq i32 %821, 0, !dbg !52
  %822 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i301, float %811, float 0.000000e+00) #6, !dbg !52
  %823 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i301, float %811, float 0.000000e+00) #6, !dbg !52
  %.04.i303 = select i1 %.not4.i302, float %823, float %822, !dbg !52
  %824 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !52
  %.not5.i304 = icmp eq i32 %824, 0, !dbg !52
  %825 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i303, float %562, float %562) #6, !dbg !52
  %826 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i303, float %562, float %562) #6, !dbg !52
  %.02.i305 = select i1 %.not5.i304, float %826, float %825, !dbg !52
  br label %__nv_tanhf.exit306, !dbg !52

__nv_tanhf.exit306:                               ; preds = %__internal_fmad.exit1.i290, %__internal_fmad.exit3.i295
  %s.1.i294 = phi float [ %810, %__internal_fmad.exit1.i290 ], [ %.02.i305, %__internal_fmad.exit3.i295 ], !dbg !52
  %827 = shl nuw nsw i32 %urem, 2, !dbg !10
  %828 = or i32 %827, 1024, !dbg !10
  %829 = or i32 %21, %828, !dbg !14
  %830 = or i32 %21, %827, !dbg !14
  %831 = fmul float %s.1.i161, 5.000000e+01, !dbg !53
  %832 = fmul float %s.1.i180, 5.000000e+01, !dbg !53
  %833 = fmul float %s.1.i199, 5.000000e+01, !dbg !53
  %834 = fmul float %s.1.i218, 5.000000e+01, !dbg !53
  %835 = fmul float %s.1.i237, 5.000000e+01, !dbg !53
  %836 = fmul float %s.1.i256, 5.000000e+01, !dbg !53
  %837 = fmul float %s.1.i275, 5.000000e+01, !dbg !53
  %838 = fmul float %s.1.i294, 5.000000e+01, !dbg !53
  %839 = fadd float %342, %831, !dbg !54
  %840 = fadd float %343, %832, !dbg !54
  %841 = fadd float %344, %833, !dbg !54
  %842 = fadd float %345, %834, !dbg !54
  %843 = fadd float %346, %835, !dbg !54
  %844 = fadd float %347, %836, !dbg !54
  %845 = fadd float %348, %837, !dbg !54
  %846 = fadd float %349, %838, !dbg !54
  %847 = fsub float %839, %452, !dbg !55
  %848 = fsub float %840, %452, !dbg !55
  %849 = fsub float %841, %452, !dbg !55
  %850 = fsub float %842, %452, !dbg !55
  %851 = fsub float %843, %452, !dbg !55
  %852 = fsub float %844, %452, !dbg !55
  %853 = fsub float %845, %452, !dbg !55
  %854 = fsub float %846, %452, !dbg !55
  %855 = fmul float %847, 0x3FF7154760000000, !dbg !56
  %856 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %855) #6, !dbg !56
  %857 = fmul float %848, 0x3FF7154760000000, !dbg !56
  %858 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %857) #6, !dbg !56
  %859 = fmul float %849, 0x3FF7154760000000, !dbg !56
  %860 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %859) #6, !dbg !56
  %861 = fmul float %850, 0x3FF7154760000000, !dbg !56
  %862 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %861) #6, !dbg !56
  %863 = fmul float %851, 0x3FF7154760000000, !dbg !56
  %864 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %863) #6, !dbg !56
  %865 = fmul float %852, 0x3FF7154760000000, !dbg !56
  %866 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %865) #6, !dbg !56
  %867 = fmul float %853, 0x3FF7154760000000, !dbg !56
  %868 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %867) #6, !dbg !56
  %869 = fmul float %854, 0x3FF7154760000000, !dbg !56
  %870 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %869) #6, !dbg !56
  %871 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %856, float %525) #6, !dbg !57
  %872 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %858, float %525) #6, !dbg !57
  %873 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %860, float %525) #6, !dbg !57
  %874 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %862, float %525) #6, !dbg !57
  %875 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %864, float %525) #6, !dbg !57
  %876 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %866, float %525) #6, !dbg !57
  %877 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %868, float %525) #6, !dbg !57
  %878 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %870, float %525) #6, !dbg !57
  %879 = getelementptr i16, ptr addrspace(1) %1, i64 %23, !dbg !58
  %880 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %871) #6, !dbg !59
  %881 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %872) #6, !dbg !59
  %882 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %873) #6, !dbg !59
  %883 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %874) #6, !dbg !59
  %884 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %875) #6, !dbg !59
  %885 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %876) #6, !dbg !59
  %886 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %877) #6, !dbg !59
  %887 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %878) #6, !dbg !59
  %888 = insertelement <2 x i16> undef, i16 %880, i64 0, !dbg !59
  %889 = insertelement <2 x i16> %888, i16 %881, i64 1, !dbg !59
  %890 = bitcast <2 x i16> %889 to i32, !dbg !59
  %891 = insertelement <2 x i16> undef, i16 %882, i64 0, !dbg !59
  %892 = insertelement <2 x i16> %891, i16 %883, i64 1, !dbg !59
  %893 = bitcast <2 x i16> %892 to i32, !dbg !59
  %894 = insertelement <2 x i16> undef, i16 %884, i64 0, !dbg !59
  %895 = insertelement <2 x i16> %894, i16 %885, i64 1, !dbg !59
  %896 = bitcast <2 x i16> %895 to i32, !dbg !59
  %897 = insertelement <2 x i16> undef, i16 %886, i64 0, !dbg !59
  %898 = insertelement <2 x i16> %897, i16 %887, i64 1, !dbg !59
  %899 = bitcast <2 x i16> %898 to i32, !dbg !59
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %890, i32 %893, i32 %896, i32 %899, ptr addrspace(1) %879, i1 true) #6, !dbg !59
  %900 = sext i32 %830 to i64, !dbg !60
  %901 = getelementptr float, ptr addrspace(1) %2, i64 %900, !dbg !60
  %902 = sext i32 %829 to i64, !dbg !60
  %903 = getelementptr float, ptr addrspace(1) %2, i64 %902, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %904 = zext nneg i32 %11 to i64, !dbg !61
  %905 = getelementptr float, ptr addrspace(3) @global_smem, i64 %904, !dbg !61
  %906 = insertelement <8 x float> undef, float %871, i64 0, !dbg !61
  %907 = insertelement <8 x float> %906, float %872, i64 1, !dbg !61
  %908 = insertelement <8 x float> %907, float %873, i64 2, !dbg !61
  %909 = insertelement <8 x float> %908, float %874, i64 3, !dbg !61
  %910 = insertelement <8 x float> %909, float %875, i64 4, !dbg !61
  %911 = insertelement <8 x float> %910, float %876, i64 5, !dbg !61
  %912 = insertelement <8 x float> %911, float %877, i64 6, !dbg !61
  %913 = insertelement <8 x float> %912, float %878, i64 7, !dbg !61
  store <8 x float> %913, ptr addrspace(3) %905, align 32, !dbg !61
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %914 = zext nneg i32 %827 to i64, !dbg !61
  %915 = getelementptr float, ptr addrspace(3) @global_smem, i64 %914, !dbg !61
  %916 = zext nneg i32 %828 to i64, !dbg !61
  %917 = getelementptr float, ptr addrspace(3) @global_smem, i64 %916, !dbg !61
  %918 = load <4 x i32>, ptr addrspace(3) %917, align 16, !dbg !61
  %.extract = load i32, ptr addrspace(3) %915, align 16, !dbg !61
  %919 = getelementptr inbounds <4 x i32>, ptr addrspace(3) %915, i64 0, i64 1, !dbg !61
  %.extract9 = load i32, ptr addrspace(3) %919, align 4, !dbg !61
  %920 = getelementptr inbounds <4 x i32>, ptr addrspace(3) %915, i64 0, i64 2, !dbg !61
  %.extract11 = load i32, ptr addrspace(3) %920, align 8, !dbg !61
  %921 = getelementptr inbounds <4 x i32>, ptr addrspace(3) %915, i64 0, i64 3, !dbg !61
  %.extract13 = load i32, ptr addrspace(3) %921, align 4, !dbg !61
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract9, i32 %.extract11, i32 %.extract13, ptr addrspace(1) %901, i1 true) #6, !dbg !61
  %.extract15 = extractelement <4 x i32> %918, i64 0, !dbg !61
  %.extract17 = extractelement <4 x i32> %918, i64 1, !dbg !61
  %.extract19 = extractelement <4 x i32> %918, i64 2, !dbg !61
  %.extract21 = extractelement <4 x i32> %918, i64 3, !dbg !61
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract15, i32 %.extract17, i32 %.extract19, i32 %.extract21, ptr addrspace(1) %903, i1 true) #6, !dbg !61
  %922 = getelementptr i16, ptr addrspace(1) %3, i64 %23, !dbg !62
  %923 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i161) #6, !dbg !63
  %924 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i180) #6, !dbg !63
  %925 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i199) #6, !dbg !63
  %926 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i218) #6, !dbg !63
  %927 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i237) #6, !dbg !63
  %928 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i256) #6, !dbg !63
  %929 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i275) #6, !dbg !63
  %930 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %s.1.i294) #6, !dbg !63
  %931 = insertelement <2 x i16> undef, i16 %923, i64 0, !dbg !63
  %932 = insertelement <2 x i16> %931, i16 %924, i64 1, !dbg !63
  %933 = bitcast <2 x i16> %932 to i32, !dbg !63
  %934 = insertelement <2 x i16> undef, i16 %925, i64 0, !dbg !63
  %935 = insertelement <2 x i16> %934, i16 %926, i64 1, !dbg !63
  %936 = bitcast <2 x i16> %935 to i32, !dbg !63
  %937 = insertelement <2 x i16> undef, i16 %927, i64 0, !dbg !63
  %938 = insertelement <2 x i16> %937, i16 %928, i64 1, !dbg !63
  %939 = bitcast <2 x i16> %938 to i32, !dbg !63
  %940 = insertelement <2 x i16> undef, i16 %929, i64 0, !dbg !63
  %941 = insertelement <2 x i16> %940, i16 %930, i64 1, !dbg !63
  %942 = bitcast <2 x i16> %941 to i32, !dbg !63
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %933, i32 %936, i32 %939, i32 %942, ptr addrspace(1) %922, i1 true) #6, !dbg !63
  ret void, !dbg !64
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: alwaysinline nounwind
define float @__nv_tanhf(float %a) local_unnamed_addr #3 {
__nv_fabsf.exit:
  %0 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not = icmp eq i32 %0, 0
  %1 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #6
  %2 = tail call float @llvm.nvvm.fabs.f(float %a) #6
  %.01 = select i1 %.not, float %2, float %1
  %3 = fcmp ult float %.01, 0x3FE3333340000000
  br i1 %3, label %__internal_fmad.exit3, label %__internal_fmad.exit1

__internal_fmad.exit1:                            ; preds = %__nv_fabsf.exit
  %4 = fmul float %.01, 0x4007154760000000
  %5 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %4) #6
  %6 = fadd float %5, 1.000000e+00
  %7 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %6) #7, !srcloc !21
  %8 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not6 = icmp eq i32 %8, 0
  %9 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %7, float -2.000000e+00, float 1.000000e+00) #6
  %10 = tail call float @llvm.nvvm.fma.rn.f(float %7, float -2.000000e+00, float 1.000000e+00) #6
  %.03 = select i1 %.not6, float %10, float %9
  %11 = fcmp oge float %.01, 0x4022059680000000
  %s.0 = select i1 %11, float 1.000000e+00, float %.03
  %12 = bitcast float %s.0 to i32
  %13 = bitcast float %a to i32
  %14 = and i32 %13, -2147483648
  %15 = or i32 %14, %12
  %16 = bitcast i32 %15 to float
  br label %33

__internal_fmad.exit3:                            ; preds = %__nv_fabsf.exit
  %17 = fmul float %a, %a
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not1 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #6
  %20 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %17, float 0xBFAAC795C0000000) #6
  %.06 = select i1 %.not1, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not2 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06, float %17, float 0x3FC10B2820000000) #6
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.06, float %17, float 0x3FC10B2820000000) #6
  %.05 = select i1 %.not2, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not3 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %17, float 0xBFD5553DA0000000) #6
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %17, float 0xBFD5553DA0000000) #6
  %.0 = select i1 %.not3, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not4 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0, float %17, float 0.000000e+00) #6
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.0, float %17, float 0.000000e+00) #6
  %.04 = select i1 %.not4, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6
  %.not5 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04, float %a, float %a) #6
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.04, float %a, float %a) #6
  %.02 = select i1 %.not5, float %32, float %31
  br label %33

33:                                               ; preds = %__internal_fmad.exit3, %__internal_fmad.exit1
  %s.1 = phi float [ %16, %__internal_fmad.exit1 ], [ %.02, %__internal_fmad.exit3 ]
  ret float %s.1
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #6 = { nounwind }
attributes #7 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "c7enhynz2lxa42r4xfigs5fhc4vkfqfiolbyz7axesdyjif5ifoz.py", directory: "/tmp/torchinductor_zeus/7e")
!4 = !{ptr @triton__0d1d2d3d4de5de, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2d3d4de5de, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2d3d4de5de", linkageName: "triton__0d1d2d3d4de5de", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 33, scope: !7)
!11 = !DILocation(line: 21, column: 28, scope: !7)
!12 = !DILocation(line: 26, column: 18, scope: !7)
!13 = !DILocation(line: 32, column: 45, scope: !7)
!14 = !DILocation(line: 32, column: 40, scope: !7)
!15 = !DILocation(line: 32, column: 34, scope: !7)
!16 = !DILocation(line: 32, column: 51, scope: !7)
!17 = !DILocation(line: 32, column: 102, scope: !7)
!18 = !DILocation(line: 34, column: 22, scope: !7)
!19 = !DILocation(line: 36, column: 22, scope: !7)
!20 = !DILocation(line: 37, column: 28, scope: !7)
!21 = !{i32 21046}
!22 = !DILocation(line: 38, column: 22, scope: !7)
!23 = !DILocation(line: 41, column: 23, scope: !7)
!24 = !DILocation(line: 47, column: 39, scope: !7)
!25 = !DILocation(line: 48, column: 23, scope: !7)
!26 = !DILocation(line: 36, column: 15, scope: !27, inlinedAt: !30)
!27 = distinct !DILexicalBlockFile(scope: !29, file: !28, discriminator: 0)
!28 = !DIFile(filename: "triton_helpers.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/torch/_inductor")
!29 = distinct !DILexicalBlockFile(scope: !7, file: !28, discriminator: 0)
!30 = !DILocation(line: 49, column: 29, scope: !27, inlinedAt: !31)
!31 = !DILocation(line: 53, column: 40, scope: !27)
!32 = !DILocation(line: 38, column: 21, scope: !27, inlinedAt: !30)
!33 = !DILocation(line: 38, column: 16, scope: !27, inlinedAt: !30)
!34 = !DILocation(line: 39, column: 29, scope: !27, inlinedAt: !30)
!35 = !DILocation(line: 49, column: 29, scope: !29, inlinedAt: !36)
!36 = !DILocation(line: 53, column: 40, scope: !29)
!37 = !DILocation(line: 77, column: 24, scope: !7)
!38 = !DILocation(line: 78, column: 23, scope: !7)
!39 = !DILocation(line: 80, column: 25, scope: !7)
!40 = !DILocation(line: 243, column: 36, scope: !41, inlinedAt: !43)
!41 = distinct !DILexicalBlockFile(scope: !7, file: !42, discriminator: 0)
!42 = !DIFile(filename: "standard.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/triton/language")
!43 = !DILocation(line: 82, column: 27, scope: !41)
!44 = !DILocation(line: 233, column: 15, scope: !45, inlinedAt: !46)
!45 = distinct !DILexicalBlockFile(scope: !41, file: !42, discriminator: 0)
!46 = !DILocation(line: 243, column: 36, scope: !45, inlinedAt: !47)
!47 = !DILocation(line: 82, column: 27, scope: !45)
!48 = !DILocation(line: 87, column: 52, scope: !7)
!49 = !DILocation(line: 87, column: 104, scope: !7)
!50 = !DILocation(line: 89, column: 24, scope: !7)
!51 = !DILocation(line: 91, column: 24, scope: !7)
!52 = !DILocation(line: 92, column: 29, scope: !7)
!53 = !DILocation(line: 93, column: 24, scope: !7)
!54 = !DILocation(line: 103, column: 24, scope: !7)
!55 = !DILocation(line: 105, column: 24, scope: !7)
!56 = !DILocation(line: 106, column: 23, scope: !7)
!57 = !DILocation(line: 107, column: 24, scope: !7)
!58 = !DILocation(line: 109, column: 29, scope: !7)
!59 = !DILocation(line: 109, column: 53, scope: !7)
!60 = !DILocation(line: 110, column: 29, scope: !7)
!61 = !DILocation(line: 110, column: 53, scope: !7)
!62 = !DILocation(line: 111, column: 29, scope: !7)
!63 = !DILocation(line: 111, column: 53, scope: !7)
!64 = !DILocation(line: 83, column: 4, scope: !7)
